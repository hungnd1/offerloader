(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/** @jsx React.DOM */
var APP = require('./components/app.jsx');
var React = require('react');

var log = require('loglevel');
log.setLevel("warn")

log.debug('APP client store', window._store)

if (window._initial === undefined){
	window._initial = document.location.pathname + document.location.search // _initial is used in navigatablemodal	
}

console.log('updated dev')

React.render(
  React.createElement(APP, null),
  document.getElementById('app'));

//document.body.style.backgroundColor = '#2b303b'

},{"./components/app.jsx":310,"loglevel":9,"react":235}],2:[function(require,module,exports){
module.exports=[
  {
    "alpha2": "AC",
    "alpha3": "",
    "countryCallingCodes": [
      "+247"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "SHP",
    "languages": [
      "eng"
    ],
    "name": "Ascension Island",
    "status": "reserved"
  },
  {
    "alpha2": "AD",
    "alpha3": "AND",
    "countryCallingCodes": [
      "+376"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "AND",
    "languages": [
      "cat"
    ],
    "name": "Andorra",
    "status": "assigned"
  },
  {
    "alpha2": "AE",
    "alpha3": "ARE",
    "countryCallingCodes": [
      "+971"
    ],
    "currencies": [
      "AED"
    ],
    "ioc": "UAE",
    "languages": [
      "ara"
    ],
    "name": "United Arab Emirates",
    "status": "assigned"
  },
  {
    "alpha2": "AF",
    "alpha3": "AFG",
    "countryCallingCodes": [
      "+93"
    ],
    "currencies": [
      "AFN"
    ],
    "ioc": "AFG",
    "languages": [
      "pus"
    ],
    "name": "Afghanistan",
    "status": "assigned"
  },
  {
    "alpha2": "AG",
    "alpha3": "ATG",
    "countryCallingCodes": [
      "+1 268"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "ANT",
    "languages": [
      "eng"
    ],
    "name": "Antigua And Barbuda",
    "status": "assigned"
  },
  {
    "alpha2": "AI",
    "alpha3": "AIA",
    "countryCallingCodes": [
      "+1 264"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Anguilla",
    "status": "assigned"
  },
  {
    "alpha2": "AL",
    "alpha3": "ALB",
    "countryCallingCodes": [
      "+355"
    ],
    "currencies": [
      "ALL"
    ],
    "ioc": "ALB",
    "languages": [
      "alb"
    ],
    "name": "Albania",
    "status": "assigned"
  },
  {
    "alpha2": "AM",
    "alpha3": "ARM",
    "countryCallingCodes": [
      "+374"
    ],
    "currencies": [
      "AMD"
    ],
    "ioc": "ARM",
    "languages": [
      "arm",
      "rus"
    ],
    "name": "Armenia",
    "status": "assigned"
  },
  {
    "alpha2": "AO",
    "alpha3": "AGO",
    "countryCallingCodes": [
      "+244"
    ],
    "currencies": [
      "AOA"
    ],
    "ioc": "ANG",
    "languages": [
      "por"
    ],
    "name": "Angola",
    "status": "assigned"
  },
  {
    "alpha2": "AQ",
    "alpha3": "ATA",
    "countryCallingCodes": [
      "+672"
    ],
    "currencies": [],
    "ioc": "",
    "languages": [],
    "name": "Antarctica",
    "status": "assigned"
  },
  {
    "alpha2": "AR",
    "alpha3": "ARG",
    "countryCallingCodes": [
      "+54"
    ],
    "currencies": [
      "ARS"
    ],
    "ioc": "ARG",
    "languages": [
      "spa"
    ],
    "name": "Argentina",
    "status": "assigned"
  },
  {
    "alpha2": "AS",
    "alpha3": "ASM",
    "countryCallingCodes": [
      "+1 684"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "ASA",
    "languages": [
      "eng",
      "smo"
    ],
    "name": "American Samoa",
    "status": "assigned"
  },
  {
    "alpha2": "AT",
    "alpha3": "AUT",
    "countryCallingCodes": [
      "+43"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "AUT",
    "languages": [
      "ger"
    ],
    "name": "Austria",
    "status": "assigned"
  },
  {
    "alpha2": "AU",
    "alpha3": "AUS",
    "countryCallingCodes": [
      "+61"
    ],
    "currencies": [
      "AUD"
    ],
    "ioc": "AUS",
    "languages": [
      "eng"
    ],
    "name": "Australia",
    "status": "assigned"
  },
  {
    "alpha2": "AW",
    "alpha3": "ABW",
    "countryCallingCodes": [
      "+297"
    ],
    "currencies": [
      "AWG"
    ],
    "ioc": "ARU",
    "languages": [
      "dut"
    ],
    "name": "Aruba",
    "status": "assigned"
  },
  {
    "alpha2": "AX",
    "alpha3": "ALA",
    "countryCallingCodes": [
      "+358"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "swe"
    ],
    "name": "Åland Islands",
    "status": "assigned"
  },
  {
    "alpha2": "AZ",
    "alpha3": "AZE",
    "countryCallingCodes": [
      "+994"
    ],
    "currencies": [
      "AZN"
    ],
    "ioc": "AZE",
    "languages": [
      "aze"
    ],
    "name": "Azerbaijan",
    "status": "assigned"
  },
  {
    "alpha2": "BA",
    "alpha3": "BIH",
    "countryCallingCodes": [
      "+387"
    ],
    "currencies": [
      "BAM"
    ],
    "ioc": "BIH",
    "languages": [
      "bos",
      "cre",
      "srp"
    ],
    "name": "Bosnia & Herzegovina",
    "status": "assigned"
  },
  {
    "alpha2": "BB",
    "alpha3": "BRB",
    "countryCallingCodes": [
      "+1 246"
    ],
    "currencies": [
      "BBD"
    ],
    "ioc": "BAR",
    "languages": [
      "eng"
    ],
    "name": "Barbados",
    "status": "assigned"
  },
  {
    "alpha2": "BD",
    "alpha3": "BGD",
    "countryCallingCodes": [
      "+880"
    ],
    "currencies": [
      "BDT"
    ],
    "ioc": "BAN",
    "languages": [
      "ben"
    ],
    "name": "Bangladesh",
    "status": "assigned"
  },
  {
    "alpha2": "BE",
    "alpha3": "BEL",
    "countryCallingCodes": [
      "+32"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "BEL",
    "languages": [
      "dut",
      "fre",
      "ger"
    ],
    "name": "Belgium",
    "status": "assigned"
  },
  {
    "alpha2": "BF",
    "alpha3": "BFA",
    "countryCallingCodes": [
      "+226"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "BUR",
    "languages": [
      "fre"
    ],
    "name": "Burkina Faso",
    "status": "assigned"
  },
  {
    "alpha2": "BG",
    "alpha3": "BGR",
    "countryCallingCodes": [
      "+359"
    ],
    "currencies": [
      "BGN"
    ],
    "ioc": "BUL",
    "languages": [
      "bul"
    ],
    "name": "Bulgaria",
    "status": "assigned"
  },
  {
    "alpha2": "BH",
    "alpha3": "BHR",
    "countryCallingCodes": [
      "+973"
    ],
    "currencies": [
      "BHD"
    ],
    "ioc": "BRN",
    "languages": [
      "ara"
    ],
    "name": "Bahrain",
    "status": "assigned"
  },
  {
    "alpha2": "BI",
    "alpha3": "BDI",
    "countryCallingCodes": [
      "+257"
    ],
    "currencies": [
      "BIF"
    ],
    "ioc": "BDI",
    "languages": [
      "fre"
    ],
    "name": "Burundi",
    "status": "assigned"
  },
  {
    "alpha2": "BJ",
    "alpha3": "BEN",
    "countryCallingCodes": [
      "+229"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "BEN",
    "languages": [
      "fre"
    ],
    "name": "Benin",
    "status": "assigned"
  },
  {
    "alpha2": "BL",
    "alpha3": "BLM",
    "countryCallingCodes": [
      "+590"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "Saint Barthélemy",
    "status": "assigned"
  },
  {
    "alpha2": "BM",
    "alpha3": "BMU",
    "countryCallingCodes": [
      "+1 441"
    ],
    "currencies": [
      "BMD"
    ],
    "ioc": "BER",
    "languages": [
      "eng"
    ],
    "name": "Bermuda",
    "status": "assigned"
  },
  {
    "alpha2": "BN",
    "alpha3": "BRN",
    "countryCallingCodes": [
      "+673"
    ],
    "currencies": [
      "BND"
    ],
    "ioc": "BRU",
    "languages": [
      "may",
      "eng"
    ],
    "name": "Brunei Darussalam",
    "status": "assigned"
  },
  {
    "alpha2": "BO",
    "alpha3": "BOL",
    "countryCallingCodes": [
      "+591"
    ],
    "currencies": [
      "BOB",
      "BOV"
    ],
    "ioc": "BOL",
    "languages": [
      "spa",
      "aym",
      "que"
    ],
    "name": "Bolivia, Plurinational State Of",
    "status": "assigned"
  },
  {
    "alpha2": "BQ",
    "alpha3": "BES",
    "countryCallingCodes": [
      "+599"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "",
    "languages": [
      "dut"
    ],
    "name": "Bonaire, Saint Eustatius And Saba",
    "status": "assigned"
  },
  {
    "alpha2": "BR",
    "alpha3": "BRA",
    "countryCallingCodes": [
      "+55"
    ],
    "currencies": [
      "BRL"
    ],
    "ioc": "BRA",
    "languages": [
      "por"
    ],
    "name": "Brazil",
    "status": "assigned"
  },
  {
    "alpha2": "BS",
    "alpha3": "BHS",
    "countryCallingCodes": [
      "+1 242"
    ],
    "currencies": [
      "BSD"
    ],
    "ioc": "BAH",
    "languages": [
      "eng"
    ],
    "name": "Bahamas",
    "status": "assigned"
  },
  {
    "alpha2": "BT",
    "alpha3": "BTN",
    "countryCallingCodes": [
      "+975"
    ],
    "currencies": [
      "INR",
      "BTN"
    ],
    "ioc": "BHU",
    "languages": [
      "dzo"
    ],
    "name": "Bhutan",
    "status": "assigned"
  },
  {
    "alpha2": "BV",
    "alpha3": "BVT",
    "countryCallingCodes": [],
    "currencies": [
      "NOK"
    ],
    "ioc": "",
    "languages": [],
    "name": "Bouvet Island",
    "status": "assigned"
  },
  {
    "alpha2": "BW",
    "alpha3": "BWA",
    "countryCallingCodes": [
      "+267"
    ],
    "currencies": [
      "BWP"
    ],
    "ioc": "BOT",
    "languages": [
      "eng",
      "tsn"
    ],
    "name": "Botswana",
    "status": "assigned"
  },
  {
    "alpha2": "BY",
    "alpha3": "BLR",
    "countryCallingCodes": [
      "+375"
    ],
    "currencies": [
      "BYR"
    ],
    "ioc": "BLR",
    "languages": [
      "bel",
      "rus"
    ],
    "name": "Belarus",
    "status": "assigned"
  },
  {
    "alpha2": "BZ",
    "alpha3": "BLZ",
    "countryCallingCodes": [
      "+501"
    ],
    "currencies": [
      "BZD"
    ],
    "ioc": "BIZ",
    "languages": [
      "eng"
    ],
    "name": "Belize",
    "status": "assigned"
  },
  {
    "alpha2": "CA",
    "alpha3": "CAN",
    "countryCallingCodes": [
      "+1"
    ],
    "currencies": [
      "CAD"
    ],
    "ioc": "CAN",
    "languages": [
      "eng",
      "fre"
    ],
    "name": "Canada",
    "status": "assigned"
  },
  {
    "alpha2": "CC",
    "alpha3": "CCK",
    "countryCallingCodes": [
      "+61"
    ],
    "currencies": [
      "AUD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Cocos (Keeling) Islands",
    "status": "assigned"
  },
  {
    "alpha2": "CD",
    "alpha3": "COD",
    "countryCallingCodes": [
      "+243"
    ],
    "currencies": [
      "CDF"
    ],
    "ioc": "COD",
    "languages": [
      "fre",
      "lin",
      "kon",
      "swa"
    ],
    "name": "Democratic Republic Of Congo",
    "status": "assigned"
  },
  {
    "alpha2": "CF",
    "alpha3": "CAF",
    "countryCallingCodes": [
      "+236"
    ],
    "currencies": [
      "XAF"
    ],
    "ioc": "CAF",
    "languages": [
      "fre",
      "sag"
    ],
    "name": "Central African Republic",
    "status": "assigned"
  },
  {
    "alpha2": "CG",
    "alpha3": "COG",
    "countryCallingCodes": [
      "+242"
    ],
    "currencies": [
      "XAF"
    ],
    "ioc": "CGO",
    "languages": [
      "fre",
      "lin"
    ],
    "name": "Republic Of Congo",
    "status": "assigned"
  },
  {
    "alpha2": "CH",
    "alpha3": "CHE",
    "countryCallingCodes": [
      "+41"
    ],
    "currencies": [
      "CHF",
      "CHE",
      "CHW"
    ],
    "ioc": "SUI",
    "languages": [
      "ger",
      "fre",
      "ita",
      "roh"
    ],
    "name": "Switzerland",
    "status": "assigned"
  },
  {
    "alpha2": "CI",
    "alpha3": "CIV",
    "countryCallingCodes": [
      "+225"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "CIV",
    "languages": [
      "fre"
    ],
    "name": "Cote d'Ivoire",
    "status": "assigned"
  },
  {
    "alpha2": "CK",
    "alpha3": "COK",
    "countryCallingCodes": [
      "+682"
    ],
    "currencies": [
      "NZD"
    ],
    "ioc": "COK",
    "languages": [
      "eng",
      "mao"
    ],
    "name": "Cook Islands",
    "status": "assigned"
  },
  {
    "alpha2": "CL",
    "alpha3": "CHL",
    "countryCallingCodes": [
      "+56"
    ],
    "currencies": [
      "CLP",
      "CLF"
    ],
    "ioc": "CHI",
    "languages": [
      "spa"
    ],
    "name": "Chile",
    "status": "assigned"
  },
  {
    "alpha2": "CM",
    "alpha3": "CMR",
    "countryCallingCodes": [
      "+237"
    ],
    "currencies": [
      "XAF"
    ],
    "ioc": "CMR",
    "languages": [
      "eng",
      "fre"
    ],
    "name": "Cameroon",
    "status": "assigned"
  },
  {
    "alpha2": "CN",
    "alpha3": "CHN",
    "countryCallingCodes": [
      "+86"
    ],
    "currencies": [
      "CNY"
    ],
    "ioc": "CHN",
    "languages": [
      "chi"
    ],
    "name": "China",
    "status": "assigned"
  },
  {
    "alpha2": "CO",
    "alpha3": "COL",
    "countryCallingCodes": [
      "+57"
    ],
    "currencies": [
      "COP",
      "COU"
    ],
    "ioc": "COL",
    "languages": [
      "spa"
    ],
    "name": "Colombia",
    "status": "assigned"
  },
  {
    "alpha2": "CP",
    "alpha3": "",
    "countryCallingCodes": [],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [],
    "name": "Clipperton Island",
    "status": "reserved"
  },
  {
    "alpha2": "CR",
    "alpha3": "CRI",
    "countryCallingCodes": [
      "+506"
    ],
    "currencies": [
      "CRC"
    ],
    "ioc": "CRC",
    "languages": [
      "spa"
    ],
    "name": "Costa Rica",
    "status": "assigned"
  },
  {
    "alpha2": "CU",
    "alpha3": "CUB",
    "countryCallingCodes": [
      "+53"
    ],
    "currencies": [
      "CUP",
      "CUC"
    ],
    "ioc": "CUB",
    "languages": [
      "spa"
    ],
    "name": "Cuba",
    "status": "assigned"
  },
  {
    "alpha2": "CV",
    "alpha3": "CPV",
    "countryCallingCodes": [
      "+238"
    ],
    "currencies": [
      "CVE"
    ],
    "ioc": "CPV",
    "languages": [
      "por"
    ],
    "name": "Cabo Verde",
    "status": "assigned"
  },
  {
    "alpha2": "CW",
    "alpha3": "CUW",
    "countryCallingCodes": [
      "+599"
    ],
    "currencies": [
      "ANG"
    ],
    "ioc": "",
    "languages": [
      "dut"
    ],
    "name": "Curacao",
    "status": "assigned"
  },
  {
    "alpha2": "CX",
    "alpha3": "CXR",
    "countryCallingCodes": [
      "+61"
    ],
    "currencies": [
      "AUD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Christmas Island",
    "status": "assigned"
  },
  {
    "alpha2": "CY",
    "alpha3": "CYP",
    "countryCallingCodes": [
      "+357"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "CYP",
    "languages": [
      "gre",
      "tur"
    ],
    "name": "Cyprus",
    "status": "assigned"
  },
  {
    "alpha2": "CZ",
    "alpha3": "CZE",
    "countryCallingCodes": [
      "+420"
    ],
    "currencies": [
      "CZK"
    ],
    "ioc": "CZE",
    "languages": [
      "cze"
    ],
    "name": "Czech Republic",
    "status": "assigned"
  },
  {
    "alpha2": "DE",
    "alpha3": "DEU",
    "countryCallingCodes": [
      "+49"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "GER",
    "languages": [
      "ger"
    ],
    "name": "Germany",
    "status": "assigned"
  },
  {
    "alpha2": "DG",
    "alpha3": "",
    "countryCallingCodes": [],
    "currencies": [
      "USD"
    ],
    "ioc": "",
    "languages": [],
    "name": "Diego Garcia",
    "status": "reserved"
  },
  {
    "alpha2": "DJ",
    "alpha3": "DJI",
    "countryCallingCodes": [
      "+253"
    ],
    "currencies": [
      "DJF"
    ],
    "ioc": "DJI",
    "languages": [
      "ara",
      "fre"
    ],
    "name": "Djibouti",
    "status": "assigned"
  },
  {
    "alpha2": "DK",
    "alpha3": "DNK",
    "countryCallingCodes": [
      "+45"
    ],
    "currencies": [
      "DKK"
    ],
    "ioc": "DEN",
    "languages": [
      "dan"
    ],
    "name": "Denmark",
    "status": "assigned"
  },
  {
    "alpha2": "DM",
    "alpha3": "DMA",
    "countryCallingCodes": [
      "+1 767"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "DMA",
    "languages": [
      "eng"
    ],
    "name": "Dominica",
    "status": "assigned"
  },
  {
    "alpha2": "DO",
    "alpha3": "DOM",
    "countryCallingCodes": [
      "+1 809",
      "+1 829",
      "+1 849"
    ],
    "currencies": [
      "DOP"
    ],
    "ioc": "DOM",
    "languages": [
      "spa"
    ],
    "name": "Dominican Republic",
    "status": "assigned"
  },
  {
    "alpha2": "DZ",
    "alpha3": "DZA",
    "countryCallingCodes": [
      "+213"
    ],
    "currencies": [
      "DZD"
    ],
    "ioc": "ALG",
    "languages": [
      "ara"
    ],
    "name": "Algeria",
    "status": "assigned"
  },
  {
    "alpha2": "EA",
    "alpha3": "",
    "countryCallingCodes": [],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [],
    "name": "Ceuta, Mulilla",
    "status": "reserved"
  },
  {
    "alpha2": "EC",
    "alpha3": "ECU",
    "countryCallingCodes": [
      "+593"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "ECU",
    "languages": [
      "spa",
      "que"
    ],
    "name": "Ecuador",
    "status": "assigned"
  },
  {
    "alpha2": "EE",
    "alpha3": "EST",
    "countryCallingCodes": [
      "+372"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "EST",
    "languages": [
      "est"
    ],
    "name": "Estonia",
    "status": "assigned"
  },
  {
    "alpha2": "EG",
    "alpha3": "EGY",
    "countryCallingCodes": [
      "+20"
    ],
    "currencies": [
      "EGP"
    ],
    "ioc": "EGY",
    "languages": [
      "ara"
    ],
    "name": "Egypt",
    "status": "assigned"
  },
  {
    "alpha2": "EH",
    "alpha3": "ESH",
    "countryCallingCodes": [
      "+212"
    ],
    "currencies": [
      "MAD"
    ],
    "ioc": "",
    "languages": [],
    "name": "Western Sahara",
    "status": "assigned"
  },
  {
    "alpha2": "ER",
    "alpha3": "ERI",
    "countryCallingCodes": [
      "+291"
    ],
    "currencies": [
      "ERN"
    ],
    "ioc": "ERI",
    "languages": [
      "eng",
      "ara",
      "tir"
    ],
    "name": "Eritrea",
    "status": "assigned"
  },
  {
    "alpha2": "ES",
    "alpha3": "ESP",
    "countryCallingCodes": [
      "+34"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "ESP",
    "languages": [
      "spa"
    ],
    "name": "Spain",
    "status": "assigned"
  },
  {
    "alpha2": "ET",
    "alpha3": "ETH",
    "countryCallingCodes": [
      "+251"
    ],
    "currencies": [
      "ETB"
    ],
    "ioc": "ETH",
    "languages": [
      "amh"
    ],
    "name": "Ethiopia",
    "status": "assigned"
  },
  {
    "alpha2": "EU",
    "alpha3": "",
    "countryCallingCodes": [
      "+388"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [],
    "name": "European Union",
    "status": "reserved"
  },
  {
    "alpha2": "FI",
    "alpha3": "FIN",
    "countryCallingCodes": [
      "+358"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "FIN",
    "languages": [
      "fin",
      "swe"
    ],
    "name": "Finland",
    "status": "assigned"
  },
  {
    "alpha2": "FJ",
    "alpha3": "FJI",
    "countryCallingCodes": [
      "+679"
    ],
    "currencies": [
      "FJD"
    ],
    "ioc": "FIJ",
    "languages": [
      "eng",
      "fij"
    ],
    "name": "Fiji",
    "status": "assigned"
  },
  {
    "alpha2": "FK",
    "alpha3": "FLK",
    "countryCallingCodes": [
      "+500"
    ],
    "currencies": [
      "FKP"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Falkland Islands",
    "status": "assigned"
  },
  {
    "alpha2": "FM",
    "alpha3": "FSM",
    "countryCallingCodes": [
      "+691"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Micronesia, Federated States Of",
    "status": "assigned"
  },
  {
    "alpha2": "FO",
    "alpha3": "FRO",
    "countryCallingCodes": [
      "+298"
    ],
    "currencies": [
      "DKK"
    ],
    "ioc": "FAI",
    "languages": [
      "fao",
      "dan"
    ],
    "name": "Faroe Islands",
    "status": "assigned"
  },
  {
    "alpha2": "FR",
    "alpha3": "FRA",
    "countryCallingCodes": [
      "+33"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "FRA",
    "languages": [
      "fre"
    ],
    "name": "France",
    "status": "assigned"
  },
  {
    "alpha2": "FX",
    "alpha3": "",
    "countryCallingCodes": [
      "+241"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "France, Metropolitan",
    "status": "reserved"
  },
  {
    "alpha2": "GA",
    "alpha3": "GAB",
    "countryCallingCodes": [
      "+241"
    ],
    "currencies": [
      "XAF"
    ],
    "ioc": "GAB",
    "languages": [
      "fre"
    ],
    "name": "Gabon",
    "status": "assigned"
  },
  {
    "alpha2": "GB",
    "alpha3": "GBR",
    "countryCallingCodes": [
      "+44"
    ],
    "currencies": [
      "GBP"
    ],
    "ioc": "GBR",
    "languages": [
      "eng",
      "cor",
      "gle",
      "gla",
      "wel"
    ],
    "name": "United Kingdom",
    "status": "assigned"
  },
  {
    "alpha2": "GD",
    "alpha3": "GRD",
    "countryCallingCodes": [
      "+473"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "GRN",
    "languages": [
      "eng"
    ],
    "name": "Grenada",
    "status": "assigned"
  },
  {
    "alpha2": "GE",
    "alpha3": "GEO",
    "countryCallingCodes": [
      "+995"
    ],
    "currencies": [
      "GEL"
    ],
    "ioc": "GEO",
    "languages": [
      "geo"
    ],
    "name": "Georgia",
    "status": "assigned"
  },
  {
    "alpha2": "GF",
    "alpha3": "GUF",
    "countryCallingCodes": [
      "+594"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "French Guiana",
    "status": "assigned"
  },
  {
    "alpha2": "GG",
    "alpha3": "GGY",
    "countryCallingCodes": [
      "+44"
    ],
    "currencies": [
      "GBP"
    ],
    "ioc": "GCI",
    "languages": [
      "fre"
    ],
    "name": "Guernsey",
    "status": "assigned"
  },
  {
    "alpha2": "GH",
    "alpha3": "GHA",
    "countryCallingCodes": [
      "+233"
    ],
    "currencies": [
      "GHS"
    ],
    "ioc": "GHA",
    "languages": [
      "eng"
    ],
    "name": "Ghana",
    "status": "assigned"
  },
  {
    "alpha2": "GI",
    "alpha3": "GIB",
    "countryCallingCodes": [
      "+350"
    ],
    "currencies": [
      "GIP"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Gibraltar",
    "status": "assigned"
  },
  {
    "alpha2": "GL",
    "alpha3": "GRL",
    "countryCallingCodes": [
      "+299"
    ],
    "currencies": [
      "DKK"
    ],
    "ioc": "",
    "languages": [
      "kal"
    ],
    "name": "Greenland",
    "status": "assigned"
  },
  {
    "alpha2": "GM",
    "alpha3": "GMB",
    "countryCallingCodes": [
      "+220"
    ],
    "currencies": [
      "GMD"
    ],
    "ioc": "GAM",
    "languages": [
      "eng"
    ],
    "name": "Gambia",
    "status": "assigned"
  },
  {
    "alpha2": "GN",
    "alpha3": "GIN",
    "countryCallingCodes": [
      "+224"
    ],
    "currencies": [
      "GNF"
    ],
    "ioc": "GUI",
    "languages": [
      "fre"
    ],
    "name": "Guinea",
    "status": "assigned"
  },
  {
    "alpha2": "GP",
    "alpha3": "GLP",
    "countryCallingCodes": [
      "+590"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "Guadeloupe",
    "status": "assigned"
  },
  {
    "alpha2": "GQ",
    "alpha3": "GNQ",
    "countryCallingCodes": [
      "+240"
    ],
    "currencies": [
      "XAF"
    ],
    "ioc": "GEQ",
    "languages": [
      "spa",
      "fre",
      "por"
    ],
    "name": "Equatorial Guinea",
    "status": "assigned"
  },
  {
    "alpha2": "GR",
    "alpha3": "GRC",
    "countryCallingCodes": [
      "+30"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "GRE",
    "languages": [
      "gre"
    ],
    "name": "Greece",
    "status": "assigned"
  },
  {
    "alpha2": "GS",
    "alpha3": "SGS",
    "countryCallingCodes": [],
    "currencies": [
      "GBP"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "South Georgia And The South Sandwich Islands",
    "status": "assigned"
  },
  {
    "alpha2": "GT",
    "alpha3": "GTM",
    "countryCallingCodes": [
      "+502"
    ],
    "currencies": [
      "GTQ"
    ],
    "ioc": "GUA",
    "languages": [
      "spa"
    ],
    "name": "Guatemala",
    "status": "assigned"
  },
  {
    "alpha2": "GU",
    "alpha3": "GUM",
    "countryCallingCodes": [
      "+1 671"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "GUM",
    "languages": [
      "eng"
    ],
    "name": "Guam",
    "status": "assigned"
  },
  {
    "alpha2": "GW",
    "alpha3": "GNB",
    "countryCallingCodes": [
      "+245"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "GBS",
    "languages": [
      "por"
    ],
    "name": "Guinea-bissau",
    "status": "assigned"
  },
  {
    "alpha2": "GY",
    "alpha3": "GUY",
    "countryCallingCodes": [
      "+592"
    ],
    "currencies": [
      "GYD"
    ],
    "ioc": "GUY",
    "languages": [
      "eng"
    ],
    "name": "Guyana",
    "status": "assigned"
  },
  {
    "alpha2": "HK",
    "alpha3": "HKG",
    "countryCallingCodes": [
      "+852"
    ],
    "currencies": [
      "HKD"
    ],
    "ioc": "HKG",
    "languages": [
      "chi",
      "eng"
    ],
    "name": "Hong Kong",
    "status": "assigned"
  },
  {
    "alpha2": "HM",
    "alpha3": "HMD",
    "countryCallingCodes": [],
    "currencies": [
      "AUD"
    ],
    "ioc": "",
    "languages": [],
    "name": "Heard Island And McDonald Islands",
    "status": "assigned"
  },
  {
    "alpha2": "HN",
    "alpha3": "HND",
    "countryCallingCodes": [
      "+504"
    ],
    "currencies": [
      "HNL"
    ],
    "ioc": "HON",
    "languages": [
      "spa"
    ],
    "name": "Honduras",
    "status": "assigned"
  },
  {
    "alpha2": "HR",
    "alpha3": "HRV",
    "countryCallingCodes": [
      "+385"
    ],
    "currencies": [
      "HRK"
    ],
    "ioc": "CRO",
    "languages": [
      "hrv"
    ],
    "name": "Croatia",
    "status": "assigned"
  },
  {
    "alpha2": "HT",
    "alpha3": "HTI",
    "countryCallingCodes": [
      "+509"
    ],
    "currencies": [
      "HTG",
      "USD"
    ],
    "ioc": "HAI",
    "languages": [
      "fre",
      "hat"
    ],
    "name": "Haiti",
    "status": "assigned"
  },
  {
    "alpha2": "HU",
    "alpha3": "HUN",
    "countryCallingCodes": [
      "+36"
    ],
    "currencies": [
      "HUF"
    ],
    "ioc": "HUN",
    "languages": [
      "hun"
    ],
    "name": "Hungary",
    "status": "assigned"
  },
  {
    "alpha2": "IC",
    "alpha3": "",
    "countryCallingCodes": [],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [],
    "name": "Canary Islands",
    "status": "reserved"
  },
  {
    "alpha2": "ID",
    "alpha3": "IDN",
    "countryCallingCodes": [
      "+62"
    ],
    "currencies": [
      "IDR"
    ],
    "ioc": "INA",
    "languages": [
      "ind"
    ],
    "name": "Indonesia",
    "status": "assigned"
  },
  {
    "alpha2": "IE",
    "alpha3": "IRL",
    "countryCallingCodes": [
      "+353"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "IRL",
    "languages": [
      "eng",
      "gle"
    ],
    "name": "Ireland",
    "status": "assigned"
  },
  {
    "alpha2": "IL",
    "alpha3": "ISR",
    "countryCallingCodes": [
      "+972"
    ],
    "currencies": [
      "ILS"
    ],
    "ioc": "ISR",
    "languages": [
      "heb",
      "ara",
      "eng"
    ],
    "name": "Israel",
    "status": "assigned"
  },
  {
    "alpha2": "IM",
    "alpha3": "IMN",
    "countryCallingCodes": [
      "+44"
    ],
    "currencies": [
      "GBP"
    ],
    "ioc": "",
    "languages": [
      "eng",
      "glv"
    ],
    "name": "Isle Of Man",
    "status": "assigned"
  },
  {
    "alpha2": "IN",
    "alpha3": "IND",
    "countryCallingCodes": [
      "+91"
    ],
    "currencies": [
      "INR"
    ],
    "ioc": "IND",
    "languages": [
      "eng",
      "hin"
    ],
    "name": "India",
    "status": "assigned"
  },
  {
    "alpha2": "IO",
    "alpha3": "IOT",
    "countryCallingCodes": [
      "+246"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "British Indian Ocean Territory",
    "status": "assigned"
  },
  {
    "alpha2": "IQ",
    "alpha3": "IRQ",
    "countryCallingCodes": [
      "+964"
    ],
    "currencies": [
      "IQD"
    ],
    "ioc": "IRQ",
    "languages": [
      "ara",
      "kur"
    ],
    "name": "Iraq",
    "status": "assigned"
  },
  {
    "alpha2": "IR",
    "alpha3": "IRN",
    "countryCallingCodes": [
      "+98"
    ],
    "currencies": [
      "IRR"
    ],
    "ioc": "IRI",
    "languages": [
      "per"
    ],
    "name": "Iran, Islamic Republic Of",
    "status": "assigned"
  },
  {
    "alpha2": "IS",
    "alpha3": "ISL",
    "countryCallingCodes": [
      "+354"
    ],
    "currencies": [
      "ISK"
    ],
    "ioc": "ISL",
    "languages": [
      "ice"
    ],
    "name": "Iceland",
    "status": "assigned"
  },
  {
    "alpha2": "IT",
    "alpha3": "ITA",
    "countryCallingCodes": [
      "+39"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "ITA",
    "languages": [
      "ita"
    ],
    "name": "Italy",
    "status": "assigned"
  },
  {
    "alpha2": "JE",
    "alpha3": "JEY",
    "countryCallingCodes": [
      "+44"
    ],
    "currencies": [
      "GBP"
    ],
    "ioc": "JCI",
    "languages": [
      "eng",
      "fre"
    ],
    "name": "Jersey",
    "status": "assigned"
  },
  {
    "alpha2": "JM",
    "alpha3": "JAM",
    "countryCallingCodes": [
      "+1 876"
    ],
    "currencies": [
      "JMD"
    ],
    "ioc": "JAM",
    "languages": [
      "eng"
    ],
    "name": "Jamaica",
    "status": "assigned"
  },
  {
    "alpha2": "JO",
    "alpha3": "JOR",
    "countryCallingCodes": [
      "+962"
    ],
    "currencies": [
      "JOD"
    ],
    "ioc": "JOR",
    "languages": [
      "ara"
    ],
    "name": "Jordan",
    "status": "assigned"
  },
  {
    "alpha2": "JP",
    "alpha3": "JPN",
    "countryCallingCodes": [
      "+81"
    ],
    "currencies": [
      "JPY"
    ],
    "ioc": "JPN",
    "languages": [
      "jpn"
    ],
    "name": "Japan",
    "status": "assigned"
  },
  {
    "alpha2": "KE",
    "alpha3": "KEN",
    "countryCallingCodes": [
      "+254"
    ],
    "currencies": [
      "KES"
    ],
    "ioc": "KEN",
    "languages": [
      "eng",
      "swa"
    ],
    "name": "Kenya",
    "status": "assigned"
  },
  {
    "alpha2": "KG",
    "alpha3": "KGZ",
    "countryCallingCodes": [
      "+996"
    ],
    "currencies": [
      "KGS"
    ],
    "ioc": "KGZ",
    "languages": [
      "rus"
    ],
    "name": "Kyrgyzstan",
    "status": "assigned"
  },
  {
    "alpha2": "KH",
    "alpha3": "KHM",
    "countryCallingCodes": [
      "+855"
    ],
    "currencies": [
      "KHR"
    ],
    "ioc": "CAM",
    "languages": [
      "khm"
    ],
    "name": "Cambodia",
    "status": "assigned"
  },
  {
    "alpha2": "KI",
    "alpha3": "KIR",
    "countryCallingCodes": [
      "+686"
    ],
    "currencies": [
      "AUD"
    ],
    "ioc": "KIR",
    "languages": [
      "eng"
    ],
    "name": "Kiribati",
    "status": "assigned"
  },
  {
    "alpha2": "KM",
    "alpha3": "COM",
    "countryCallingCodes": [
      "+269"
    ],
    "currencies": [
      "KMF"
    ],
    "ioc": "COM",
    "languages": [
      "ara",
      "fre"
    ],
    "name": "Comoros",
    "status": "assigned"
  },
  {
    "alpha2": "KN",
    "alpha3": "KNA",
    "countryCallingCodes": [
      "+1 869"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "SKN",
    "languages": [
      "eng"
    ],
    "name": "Saint Kitts And Nevis",
    "status": "assigned"
  },
  {
    "alpha2": "KP",
    "alpha3": "PRK",
    "countryCallingCodes": [
      "+850"
    ],
    "currencies": [
      "KPW"
    ],
    "ioc": "PRK",
    "languages": [
      "kor"
    ],
    "name": "Korea, Democratic People's Republic Of",
    "status": "assigned"
  },
  {
    "alpha2": "KR",
    "alpha3": "KOR",
    "countryCallingCodes": [
      "+82"
    ],
    "currencies": [
      "KRW"
    ],
    "ioc": "KOR",
    "languages": [
      "kor"
    ],
    "name": "Korea, Republic Of",
    "status": "assigned"
  },
  {
    "alpha2": "KW",
    "alpha3": "KWT",
    "countryCallingCodes": [
      "+965"
    ],
    "currencies": [
      "KWD"
    ],
    "ioc": "KUW",
    "languages": [
      "ara"
    ],
    "name": "Kuwait",
    "status": "assigned"
  },
  {
    "alpha2": "KY",
    "alpha3": "CYM",
    "countryCallingCodes": [
      "+1 345"
    ],
    "currencies": [
      "KYD"
    ],
    "ioc": "CAY",
    "languages": [
      "eng"
    ],
    "name": "Cayman Islands",
    "status": "assigned"
  },
  {
    "alpha2": "KZ",
    "alpha3": "KAZ",
    "countryCallingCodes": [
      "+7",
      "+7 6",
      "+7 7"
    ],
    "currencies": [
      "KZT"
    ],
    "ioc": "KAZ",
    "languages": [
      "kaz",
      "rus"
    ],
    "name": "Kazakhstan",
    "status": "assigned"
  },
  {
    "alpha2": "LA",
    "alpha3": "LAO",
    "countryCallingCodes": [
      "+856"
    ],
    "currencies": [
      "LAK"
    ],
    "ioc": "LAO",
    "languages": [
      "lao"
    ],
    "name": "Lao People's Democratic Republic",
    "status": "assigned"
  },
  {
    "alpha2": "LB",
    "alpha3": "LBN",
    "countryCallingCodes": [
      "+961"
    ],
    "currencies": [
      "LBP"
    ],
    "ioc": "LIB",
    "languages": [
      "ara",
      "arm"
    ],
    "name": "Lebanon",
    "status": "assigned"
  },
  {
    "alpha2": "LC",
    "alpha3": "LCA",
    "countryCallingCodes": [
      "+1 758"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "LCA",
    "languages": [
      "eng"
    ],
    "name": "Saint Lucia",
    "status": "assigned"
  },
  {
    "alpha2": "LI",
    "alpha3": "LIE",
    "countryCallingCodes": [
      "+423"
    ],
    "currencies": [
      "CHF"
    ],
    "ioc": "LIE",
    "languages": [
      "ger"
    ],
    "name": "Liechtenstein",
    "status": "assigned"
  },
  {
    "alpha2": "LK",
    "alpha3": "LKA",
    "countryCallingCodes": [
      "+94"
    ],
    "currencies": [
      "LKR"
    ],
    "ioc": "SRI",
    "languages": [
      "sin",
      "tam"
    ],
    "name": "Sri Lanka",
    "status": "assigned"
  },
  {
    "alpha2": "LR",
    "alpha3": "LBR",
    "countryCallingCodes": [
      "+231"
    ],
    "currencies": [
      "LRD"
    ],
    "ioc": "LBR",
    "languages": [
      "eng"
    ],
    "name": "Liberia",
    "status": "assigned"
  },
  {
    "alpha2": "LS",
    "alpha3": "LSO",
    "countryCallingCodes": [
      "+266"
    ],
    "currencies": [
      "LSL",
      "ZAR"
    ],
    "ioc": "LES",
    "languages": [
      "eng",
      "sot"
    ],
    "name": "Lesotho",
    "status": "assigned"
  },
  {
    "alpha2": "LT",
    "alpha3": "LTU",
    "countryCallingCodes": [
      "+370"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "LTU",
    "languages": [
      "lit"
    ],
    "name": "Lithuania",
    "status": "assigned"
  },
  {
    "alpha2": "LU",
    "alpha3": "LUX",
    "countryCallingCodes": [
      "+352"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "LUX",
    "languages": [
      "fre",
      "ger",
      "ltz"
    ],
    "name": "Luxembourg",
    "status": "assigned"
  },
  {
    "alpha2": "LV",
    "alpha3": "LVA",
    "countryCallingCodes": [
      "+371"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "LAT",
    "languages": [
      "lav"
    ],
    "name": "Latvia",
    "status": "assigned"
  },
  {
    "alpha2": "LY",
    "alpha3": "LBY",
    "countryCallingCodes": [
      "+218"
    ],
    "currencies": [
      "LYD"
    ],
    "ioc": "LBA",
    "languages": [
      "ara"
    ],
    "name": "Libya",
    "status": "assigned"
  },
  {
    "alpha2": "MA",
    "alpha3": "MAR",
    "countryCallingCodes": [
      "+212"
    ],
    "currencies": [
      "MAD"
    ],
    "ioc": "MAR",
    "languages": [
      "ara"
    ],
    "name": "Morocco",
    "status": "assigned"
  },
  {
    "alpha2": "MC",
    "alpha3": "MCO",
    "countryCallingCodes": [
      "+377"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "MON",
    "languages": [
      "fre"
    ],
    "name": "Monaco",
    "status": "assigned"
  },
  {
    "alpha2": "MD",
    "alpha3": "MDA",
    "countryCallingCodes": [
      "+373"
    ],
    "currencies": [
      "MDL"
    ],
    "ioc": "MDA",
    "languages": [
      "rum"
    ],
    "name": "Moldova",
    "status": "assigned"
  },
  {
    "alpha2": "ME",
    "alpha3": "MNE",
    "countryCallingCodes": [
      "+382"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "MNE",
    "languages": [
      "mot"
    ],
    "name": "Montenegro",
    "status": "assigned"
  },
  {
    "alpha2": "MF",
    "alpha3": "MAF",
    "countryCallingCodes": [
      "+590"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "Saint Martin",
    "status": "assigned"
  },
  {
    "alpha2": "MG",
    "alpha3": "MDG",
    "countryCallingCodes": [
      "+261"
    ],
    "currencies": [
      "MGA"
    ],
    "ioc": "MAD",
    "languages": [
      "fre",
      "mlg"
    ],
    "name": "Madagascar",
    "status": "assigned"
  },
  {
    "alpha2": "MH",
    "alpha3": "MHL",
    "countryCallingCodes": [
      "+692"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "MHL",
    "languages": [
      "eng",
      "mah"
    ],
    "name": "Marshall Islands",
    "status": "assigned"
  },
  {
    "alpha2": "MK",
    "alpha3": "MKD",
    "countryCallingCodes": [
      "+389"
    ],
    "currencies": [
      "MKD"
    ],
    "ioc": "MKD",
    "languages": [
      "mac"
    ],
    "name": "Macedonia, The Former Yugoslav Republic Of",
    "status": "assigned"
  },
  {
    "alpha2": "ML",
    "alpha3": "MLI",
    "countryCallingCodes": [
      "+223"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "MLI",
    "languages": [
      "fre"
    ],
    "name": "Mali",
    "status": "assigned"
  },
  {
    "alpha2": "MM",
    "alpha3": "MMR",
    "countryCallingCodes": [
      "+95"
    ],
    "currencies": [
      "MMK"
    ],
    "ioc": "MYA",
    "languages": [
      "bur"
    ],
    "name": "Myanmar",
    "status": "assigned"
  },
  {
    "alpha2": "MN",
    "alpha3": "MNG",
    "countryCallingCodes": [
      "+976"
    ],
    "currencies": [
      "MNT"
    ],
    "ioc": "MGL",
    "languages": [
      "mon"
    ],
    "name": "Mongolia",
    "status": "assigned"
  },
  {
    "alpha2": "MO",
    "alpha3": "MAC",
    "countryCallingCodes": [
      "+853"
    ],
    "currencies": [
      "MOP"
    ],
    "ioc": "MAC",
    "languages": [
      "chi",
      "por"
    ],
    "name": "Macao",
    "status": "assigned"
  },
  {
    "alpha2": "MP",
    "alpha3": "MNP",
    "countryCallingCodes": [
      "+1 670"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Northern Mariana Islands",
    "status": "assigned"
  },
  {
    "alpha2": "MQ",
    "alpha3": "MTQ",
    "countryCallingCodes": [
      "+596"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [],
    "name": "Martinique",
    "status": "assigned"
  },
  {
    "alpha2": "MR",
    "alpha3": "MRT",
    "countryCallingCodes": [
      "+222"
    ],
    "currencies": [
      "MRO"
    ],
    "ioc": "MTN",
    "languages": [
      "ara",
      "fre"
    ],
    "name": "Mauritania",
    "status": "assigned"
  },
  {
    "alpha2": "MS",
    "alpha3": "MSR",
    "countryCallingCodes": [
      "+1 664"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "",
    "languages": [],
    "name": "Montserrat",
    "status": "assigned"
  },
  {
    "alpha2": "MT",
    "alpha3": "MLT",
    "countryCallingCodes": [
      "+356"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "MLT",
    "languages": [
      "mlt",
      "eng"
    ],
    "name": "Malta",
    "status": "assigned"
  },
  {
    "alpha2": "MU",
    "alpha3": "MUS",
    "countryCallingCodes": [
      "+230"
    ],
    "currencies": [
      "MUR"
    ],
    "ioc": "MRI",
    "languages": [
      "eng",
      "fre"
    ],
    "name": "Mauritius",
    "status": "assigned"
  },
  {
    "alpha2": "MV",
    "alpha3": "MDV",
    "countryCallingCodes": [
      "+960"
    ],
    "currencies": [
      "MVR"
    ],
    "ioc": "MDV",
    "languages": [
      "div"
    ],
    "name": "Maldives",
    "status": "assigned"
  },
  {
    "alpha2": "MW",
    "alpha3": "MWI",
    "countryCallingCodes": [
      "+265"
    ],
    "currencies": [
      "MWK"
    ],
    "ioc": "MAW",
    "languages": [
      "eng",
      "nya"
    ],
    "name": "Malawi",
    "status": "assigned"
  },
  {
    "alpha2": "MX",
    "alpha3": "MEX",
    "countryCallingCodes": [
      "+52",
      "+521"
    ],
    "currencies": [
      "MXN",
      "MXV"
    ],
    "ioc": "MEX",
    "languages": [
      "spa"
    ],
    "name": "Mexico",
    "status": "assigned"
  },
  {
    "alpha2": "MY",
    "alpha3": "MYS",
    "countryCallingCodes": [
      "+60"
    ],
    "currencies": [
      "MYR"
    ],
    "ioc": "MAS",
    "languages": [
      "eng"
    ],
    "name": "Malaysia",
    "status": "assigned"
  },
  {
    "alpha2": "MZ",
    "alpha3": "MOZ",
    "countryCallingCodes": [
      "+258"
    ],
    "currencies": [
      "MZN"
    ],
    "ioc": "MOZ",
    "languages": [
      "por"
    ],
    "name": "Mozambique",
    "status": "assigned"
  },
  {
    "alpha2": "NA",
    "alpha3": "NAM",
    "countryCallingCodes": [
      "+264"
    ],
    "currencies": [
      "NAD",
      "ZAR"
    ],
    "ioc": "NAM",
    "languages": [
      "eng"
    ],
    "name": "Namibia",
    "status": "assigned"
  },
  {
    "alpha2": "NC",
    "alpha3": "NCL",
    "countryCallingCodes": [
      "+687"
    ],
    "currencies": [
      "XPF"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "New Caledonia",
    "status": "assigned"
  },
  {
    "alpha2": "NE",
    "alpha3": "NER",
    "countryCallingCodes": [
      "+227"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "NIG",
    "languages": [
      "fre"
    ],
    "name": "Niger",
    "status": "assigned"
  },
  {
    "alpha2": "NF",
    "alpha3": "NFK",
    "countryCallingCodes": [
      "+672"
    ],
    "currencies": [
      "AUD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Norfolk Island",
    "status": "assigned"
  },
  {
    "alpha2": "NG",
    "alpha3": "NGA",
    "countryCallingCodes": [
      "+234"
    ],
    "currencies": [
      "NGN"
    ],
    "ioc": "NGR",
    "languages": [
      "eng"
    ],
    "name": "Nigeria",
    "status": "assigned"
  },
  {
    "alpha2": "NI",
    "alpha3": "NIC",
    "countryCallingCodes": [
      "+505"
    ],
    "currencies": [
      "NIO"
    ],
    "ioc": "NCA",
    "languages": [
      "spa"
    ],
    "name": "Nicaragua",
    "status": "assigned"
  },
  {
    "alpha2": "NL",
    "alpha3": "NLD",
    "countryCallingCodes": [
      "+31"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "NED",
    "languages": [
      "dut"
    ],
    "name": "Netherlands",
    "status": "assigned"
  },
  {
    "alpha2": "NO",
    "alpha3": "NOR",
    "countryCallingCodes": [
      "+47"
    ],
    "currencies": [
      "NOK"
    ],
    "ioc": "NOR",
    "languages": [
      "nor"
    ],
    "name": "Norway",
    "status": "assigned"
  },
  {
    "alpha2": "NP",
    "alpha3": "NPL",
    "countryCallingCodes": [
      "+977"
    ],
    "currencies": [
      "NPR"
    ],
    "ioc": "NEP",
    "languages": [
      "nep"
    ],
    "name": "Nepal",
    "status": "assigned"
  },
  {
    "alpha2": "NR",
    "alpha3": "NRU",
    "countryCallingCodes": [
      "+674"
    ],
    "currencies": [
      "AUD"
    ],
    "ioc": "NRU",
    "languages": [
      "eng",
      "nau"
    ],
    "name": "Nauru",
    "status": "assigned"
  },
  {
    "alpha2": "NU",
    "alpha3": "NIU",
    "countryCallingCodes": [
      "+683"
    ],
    "currencies": [
      "NZD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Niue",
    "status": "assigned"
  },
  {
    "alpha2": "NZ",
    "alpha3": "NZL",
    "countryCallingCodes": [
      "+64"
    ],
    "currencies": [
      "NZD"
    ],
    "ioc": "NZL",
    "languages": [
      "eng"
    ],
    "name": "New Zealand",
    "status": "assigned"
  },
  {
    "alpha2": "OM",
    "alpha3": "OMN",
    "countryCallingCodes": [
      "+968"
    ],
    "currencies": [
      "OMR"
    ],
    "ioc": "OMA",
    "languages": [
      "ara"
    ],
    "name": "Oman",
    "status": "assigned"
  },
  {
    "alpha2": "PA",
    "alpha3": "PAN",
    "countryCallingCodes": [
      "+507"
    ],
    "currencies": [
      "PAB",
      "USD"
    ],
    "ioc": "PAN",
    "languages": [
      "spa"
    ],
    "name": "Panama",
    "status": "assigned"
  },
  {
    "alpha2": "PE",
    "alpha3": "PER",
    "countryCallingCodes": [
      "+51"
    ],
    "currencies": [
      "PEN"
    ],
    "ioc": "PER",
    "languages": [
      "spa",
      "aym",
      "que"
    ],
    "name": "Peru",
    "status": "assigned"
  },
  {
    "alpha2": "PF",
    "alpha3": "PYF",
    "countryCallingCodes": [
      "+689"
    ],
    "currencies": [
      "XPF"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "French Polynesia",
    "status": "assigned"
  },
  {
    "alpha2": "PG",
    "alpha3": "PNG",
    "countryCallingCodes": [
      "+675"
    ],
    "currencies": [
      "PGK"
    ],
    "ioc": "PNG",
    "languages": [
      "eng"
    ],
    "name": "Papua New Guinea",
    "status": "assigned"
  },
  {
    "alpha2": "PH",
    "alpha3": "PHL",
    "countryCallingCodes": [
      "+63"
    ],
    "currencies": [
      "PHP"
    ],
    "ioc": "PHI",
    "languages": [
      "eng"
    ],
    "name": "Philippines",
    "status": "assigned"
  },
  {
    "alpha2": "PK",
    "alpha3": "PAK",
    "countryCallingCodes": [
      "+92"
    ],
    "currencies": [
      "PKR"
    ],
    "ioc": "PAK",
    "languages": [
      "urd",
      "eng"
    ],
    "name": "Pakistan",
    "status": "assigned"
  },
  {
    "alpha2": "PL",
    "alpha3": "POL",
    "countryCallingCodes": [
      "+48"
    ],
    "currencies": [
      "PLN"
    ],
    "ioc": "POL",
    "languages": [
      "pol"
    ],
    "name": "Poland",
    "status": "assigned"
  },
  {
    "alpha2": "PM",
    "alpha3": "SPM",
    "countryCallingCodes": [
      "+508"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Saint Pierre And Miquelon",
    "status": "assigned"
  },
  {
    "alpha2": "PN",
    "alpha3": "PCN",
    "countryCallingCodes": [
      "+872"
    ],
    "currencies": [
      "NZD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Pitcairn",
    "status": "assigned"
  },
  {
    "alpha2": "PR",
    "alpha3": "PRI",
    "countryCallingCodes": [
      "+1 787",
      "+1 939"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "PUR",
    "languages": [
      "spa",
      "eng"
    ],
    "name": "Puerto Rico",
    "status": "assigned"
  },
  {
    "alpha2": "PS",
    "alpha3": "PSE",
    "countryCallingCodes": [
      "+970"
    ],
    "currencies": [
      "JOD",
      "EGP",
      "ILS"
    ],
    "ioc": "PLE",
    "languages": [
      "ara"
    ],
    "name": "Palestinian Territory, Occupied",
    "status": "assigned"
  },
  {
    "alpha2": "PT",
    "alpha3": "PRT",
    "countryCallingCodes": [
      "+351"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "POR",
    "languages": [
      "por"
    ],
    "name": "Portugal",
    "status": "assigned"
  },
  {
    "alpha2": "PW",
    "alpha3": "PLW",
    "countryCallingCodes": [
      "+680"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "PLW",
    "languages": [
      "eng"
    ],
    "name": "Palau",
    "status": "assigned"
  },
  {
    "alpha2": "PY",
    "alpha3": "PRY",
    "countryCallingCodes": [
      "+595"
    ],
    "currencies": [
      "PYG"
    ],
    "ioc": "PAR",
    "languages": [
      "spa"
    ],
    "name": "Paraguay",
    "status": "assigned"
  },
  {
    "alpha2": "QA",
    "alpha3": "QAT",
    "countryCallingCodes": [
      "+974"
    ],
    "currencies": [
      "QAR"
    ],
    "ioc": "QAT",
    "languages": [
      "ara"
    ],
    "name": "Qatar",
    "status": "assigned"
  },
  {
    "alpha2": "RE",
    "alpha3": "REU",
    "countryCallingCodes": [
      "+262"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "Reunion",
    "status": "assigned"
  },
  {
    "alpha2": "RO",
    "alpha3": "ROU",
    "countryCallingCodes": [
      "+40"
    ],
    "currencies": [
      "RON"
    ],
    "ioc": "ROU",
    "languages": [
      "rum"
    ],
    "name": "Romania",
    "status": "assigned"
  },
  {
    "alpha2": "RS",
    "alpha3": "SRB",
    "countryCallingCodes": [
      "+381"
    ],
    "currencies": [
      "RSD"
    ],
    "ioc": "SRB",
    "languages": [
      "srp"
    ],
    "name": "Serbia",
    "status": "assigned"
  },
  {
    "alpha2": "RU",
    "alpha3": "RUS",
    "countryCallingCodes": [
      "+7",
      "+7 3",
      "+7 4",
      "+7 8"
    ],
    "currencies": [
      "RUB"
    ],
    "ioc": "RUS",
    "languages": [
      "rus"
    ],
    "name": "Russian Federation",
    "status": "assigned"
  },
  {
    "alpha2": "RW",
    "alpha3": "RWA",
    "countryCallingCodes": [
      "+250"
    ],
    "currencies": [
      "RWF"
    ],
    "ioc": "RWA",
    "languages": [
      "eng",
      "fre",
      "kin"
    ],
    "name": "Rwanda",
    "status": "assigned"
  },
  {
    "alpha2": "SA",
    "alpha3": "SAU",
    "countryCallingCodes": [
      "+966"
    ],
    "currencies": [
      "SAR"
    ],
    "ioc": "KSA",
    "languages": [
      "ara"
    ],
    "name": "Saudi Arabia",
    "status": "assigned"
  },
  {
    "alpha2": "SB",
    "alpha3": "SLB",
    "countryCallingCodes": [
      "+677"
    ],
    "currencies": [
      "SBD"
    ],
    "ioc": "SOL",
    "languages": [
      "eng"
    ],
    "name": "Solomon Islands",
    "status": "assigned"
  },
  {
    "alpha2": "SC",
    "alpha3": "SYC",
    "countryCallingCodes": [
      "+248"
    ],
    "currencies": [
      "SCR"
    ],
    "ioc": "SEY",
    "languages": [
      "eng",
      "fre"
    ],
    "name": "Seychelles",
    "status": "assigned"
  },
  {
    "alpha2": "SD",
    "alpha3": "SDN",
    "countryCallingCodes": [
      "+249"
    ],
    "currencies": [
      "SDG"
    ],
    "ioc": "SUD",
    "languages": [
      "ara",
      "eng"
    ],
    "name": "Sudan",
    "status": "assigned"
  },
  {
    "alpha2": "SE",
    "alpha3": "SWE",
    "countryCallingCodes": [
      "+46"
    ],
    "currencies": [
      "SEK"
    ],
    "ioc": "SWE",
    "languages": [
      "swe"
    ],
    "name": "Sweden",
    "status": "assigned"
  },
  {
    "alpha2": "SG",
    "alpha3": "SGP",
    "countryCallingCodes": [
      "+65"
    ],
    "currencies": [
      "SGD"
    ],
    "ioc": "SIN",
    "languages": [
      "eng",
      "chi",
      "may",
      "tam"
    ],
    "name": "Singapore",
    "status": "assigned"
  },
  {
    "alpha2": "SH",
    "alpha3": "SHN",
    "countryCallingCodes": [
      "+290"
    ],
    "currencies": [
      "SHP"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Saint Helena, Ascension And Tristan Da Cunha",
    "status": "assigned"
  },
  {
    "alpha2": "SI",
    "alpha3": "SVN",
    "countryCallingCodes": [
      "+386"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "SLO",
    "languages": [
      "slv"
    ],
    "name": "Slovenia",
    "status": "assigned"
  },
  {
    "alpha2": "SJ",
    "alpha3": "SJM",
    "countryCallingCodes": [
      "+47"
    ],
    "currencies": [
      "NOK"
    ],
    "ioc": "",
    "languages": [],
    "name": "Svalbard And Jan Mayen",
    "status": "assigned"
  },
  {
    "alpha2": "SK",
    "alpha3": "SVK",
    "countryCallingCodes": [
      "+421"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "SVK",
    "languages": [
      "slo"
    ],
    "name": "Slovakia",
    "status": "assigned"
  },
  {
    "alpha2": "SL",
    "alpha3": "SLE",
    "countryCallingCodes": [
      "+232"
    ],
    "currencies": [
      "SLL"
    ],
    "ioc": "SLE",
    "languages": [
      "eng"
    ],
    "name": "Sierra Leone",
    "status": "assigned"
  },
  {
    "alpha2": "SM",
    "alpha3": "SMR",
    "countryCallingCodes": [
      "+378"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "SMR",
    "languages": [
      "ita"
    ],
    "name": "San Marino",
    "status": "assigned"
  },
  {
    "alpha2": "SN",
    "alpha3": "SEN",
    "countryCallingCodes": [
      "+221"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "SEN",
    "languages": [
      "fre"
    ],
    "name": "Senegal",
    "status": "assigned"
  },
  {
    "alpha2": "SO",
    "alpha3": "SOM",
    "countryCallingCodes": [
      "+252"
    ],
    "currencies": [
      "SOS"
    ],
    "ioc": "SOM",
    "languages": [
      "som"
    ],
    "name": "Somalia",
    "status": "assigned"
  },
  {
    "alpha2": "SR",
    "alpha3": "SUR",
    "countryCallingCodes": [
      "+597"
    ],
    "currencies": [
      "SRD"
    ],
    "ioc": "SUR",
    "languages": [
      "dut"
    ],
    "name": "Suriname",
    "status": "assigned"
  },
  {
    "alpha2": "SS",
    "alpha3": "SSD",
    "countryCallingCodes": [
      "+211"
    ],
    "currencies": [
      "SSP"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "South Sudan",
    "status": "assigned"
  },
  {
    "alpha2": "ST",
    "alpha3": "STP",
    "countryCallingCodes": [
      "+239"
    ],
    "currencies": [
      "STD"
    ],
    "ioc": "STP",
    "languages": [
      "por"
    ],
    "name": "São Tomé and Príncipe",
    "status": "assigned"
  },
  {
    "alpha2": "SU",
    "alpha3": "",
    "countryCallingCodes": [],
    "currencies": [
      "RUB"
    ],
    "ioc": "",
    "languages": [
      "rus"
    ],
    "name": "USSR",
    "status": "reserved"
  },
  {
    "alpha2": "SV",
    "alpha3": "SLV",
    "countryCallingCodes": [
      "+503"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "ESA",
    "languages": [
      "spa"
    ],
    "name": "El Salvador",
    "status": "assigned"
  },
  {
    "alpha2": "SX",
    "alpha3": "SXM",
    "countryCallingCodes": [
      "+1 721"
    ],
    "currencies": [
      "ANG"
    ],
    "ioc": "",
    "languages": [
      "dut"
    ],
    "name": "Sint Maarten",
    "status": "assigned"
  },
  {
    "alpha2": "SY",
    "alpha3": "SYR",
    "countryCallingCodes": [
      "+963"
    ],
    "currencies": [
      "SYP"
    ],
    "ioc": "SYR",
    "languages": [
      "ara"
    ],
    "name": "Syrian Arab Republic",
    "status": "assigned"
  },
  {
    "alpha2": "SZ",
    "alpha3": "SWZ",
    "countryCallingCodes": [
      "+268"
    ],
    "currencies": [
      "SZL"
    ],
    "ioc": "SWZ",
    "languages": [
      "eng",
      "ssw"
    ],
    "name": "Swaziland",
    "status": "assigned"
  },
  {
    "alpha2": "TA",
    "alpha3": "",
    "countryCallingCodes": [
      "+290"
    ],
    "currencies": [
      "GBP"
    ],
    "ioc": "",
    "languages": [],
    "name": "Tristan de Cunha",
    "status": "reserved"
  },
  {
    "alpha2": "TC",
    "alpha3": "TCA",
    "countryCallingCodes": [
      "+1 649"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Turks And Caicos Islands",
    "status": "assigned"
  },
  {
    "alpha2": "TD",
    "alpha3": "TCD",
    "countryCallingCodes": [
      "+235"
    ],
    "currencies": [
      "XAF"
    ],
    "ioc": "CHA",
    "languages": [
      "ara",
      "fre"
    ],
    "name": "Chad",
    "status": "assigned"
  },
  {
    "alpha2": "TF",
    "alpha3": "ATF",
    "countryCallingCodes": [],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "French Southern Territories",
    "status": "assigned"
  },
  {
    "alpha2": "TG",
    "alpha3": "TGO",
    "countryCallingCodes": [
      "+228"
    ],
    "currencies": [
      "XOF"
    ],
    "ioc": "TOG",
    "languages": [
      "fre"
    ],
    "name": "Togo",
    "status": "assigned"
  },
  {
    "alpha2": "TH",
    "alpha3": "THA",
    "countryCallingCodes": [
      "+66"
    ],
    "currencies": [
      "THB"
    ],
    "ioc": "THA",
    "languages": [
      "tha"
    ],
    "name": "Thailand",
    "status": "assigned"
  },
  {
    "alpha2": "TJ",
    "alpha3": "TJK",
    "countryCallingCodes": [
      "+992"
    ],
    "currencies": [
      "TJS"
    ],
    "ioc": "TJK",
    "languages": [
      "tgk",
      "rus"
    ],
    "name": "Tajikistan",
    "status": "assigned"
  },
  {
    "alpha2": "TK",
    "alpha3": "TKL",
    "countryCallingCodes": [
      "+690"
    ],
    "currencies": [
      "NZD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "Tokelau",
    "status": "assigned"
  },
  {
    "alpha2": "TL",
    "alpha3": "TLS",
    "countryCallingCodes": [
      "+670"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "TLS",
    "languages": [
      "por"
    ],
    "name": "East Timor",
    "status": "assigned"
  },
  {
    "alpha2": "TM",
    "alpha3": "TKM",
    "countryCallingCodes": [
      "+993"
    ],
    "currencies": [
      "TMT"
    ],
    "ioc": "TKM",
    "languages": [
      "tuk",
      "rus"
    ],
    "name": "Turkmenistan",
    "status": "assigned"
  },
  {
    "alpha2": "TN",
    "alpha3": "TUN",
    "countryCallingCodes": [
      "+216"
    ],
    "currencies": [
      "TND"
    ],
    "ioc": "TUN",
    "languages": [
      "ara"
    ],
    "name": "Tunisia",
    "status": "assigned"
  },
  {
    "alpha2": "TO",
    "alpha3": "TON",
    "countryCallingCodes": [
      "+676"
    ],
    "currencies": [
      "TOP"
    ],
    "ioc": "TGA",
    "languages": [
      "eng"
    ],
    "name": "Tonga",
    "status": "assigned"
  },
  {
    "alpha2": "TR",
    "alpha3": "TUR",
    "countryCallingCodes": [
      "+90"
    ],
    "currencies": [
      "TRY"
    ],
    "ioc": "TUR",
    "languages": [
      "tur"
    ],
    "name": "Turkey",
    "status": "assigned"
  },
  {
    "alpha2": "TT",
    "alpha3": "TTO",
    "countryCallingCodes": [
      "+1 868"
    ],
    "currencies": [
      "TTD"
    ],
    "ioc": "TRI",
    "languages": [
      "eng"
    ],
    "name": "Trinidad And Tobago",
    "status": "assigned"
  },
  {
    "alpha2": "TV",
    "alpha3": "TUV",
    "countryCallingCodes": [
      "+688"
    ],
    "currencies": [
      "AUD"
    ],
    "ioc": "TUV",
    "languages": [
      "eng"
    ],
    "name": "Tuvalu",
    "status": "assigned"
  },
  {
    "alpha2": "TW",
    "alpha3": "TWN",
    "countryCallingCodes": [
      "+886"
    ],
    "currencies": [
      "TWD"
    ],
    "ioc": "TPE",
    "languages": [
      "chi"
    ],
    "name": "Taiwan, Province Of China",
    "status": "assigned"
  },
  {
    "alpha2": "TZ",
    "alpha3": "TZA",
    "countryCallingCodes": [
      "+255"
    ],
    "currencies": [
      "TZS"
    ],
    "ioc": "TAN",
    "languages": [
      "swa",
      "eng"
    ],
    "name": "Tanzania, United Republic Of",
    "status": "assigned"
  },
  {
    "alpha2": "UA",
    "alpha3": "UKR",
    "countryCallingCodes": [
      "+380"
    ],
    "currencies": [
      "UAH"
    ],
    "ioc": "UKR",
    "languages": [
      "ukr",
      "rus"
    ],
    "name": "Ukraine",
    "status": "assigned"
  },
  {
    "alpha2": "UG",
    "alpha3": "UGA",
    "countryCallingCodes": [
      "+256"
    ],
    "currencies": [
      "UGX"
    ],
    "ioc": "UGA",
    "languages": [
      "eng",
      "swa"
    ],
    "name": "Uganda",
    "status": "assigned"
  },
  {
    "alpha2": "UK",
    "alpha3": "",
    "countryCallingCodes": [],
    "currencies": [
      "GBP"
    ],
    "ioc": "",
    "languages": [
      "eng",
      "cor",
      "gle",
      "gla",
      "wel"
    ],
    "name": "United Kingdom",
    "status": "reserved"
  },
  {
    "alpha2": "UM",
    "alpha3": "UMI",
    "countryCallingCodes": [
      "+1"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "",
    "languages": [
      "eng"
    ],
    "name": "United States Minor Outlying Islands",
    "status": "assigned"
  },
  {
    "alpha2": "US",
    "alpha3": "USA",
    "countryCallingCodes": [
      "+1"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "USA",
    "languages": [
      "eng"
    ],
    "name": "United States",
    "status": "assigned"
  },
  {
    "alpha2": "UY",
    "alpha3": "URY",
    "countryCallingCodes": [
      "+598"
    ],
    "currencies": [
      "UYU",
      "UYI"
    ],
    "ioc": "URU",
    "languages": [
      "spa"
    ],
    "name": "Uruguay",
    "status": "assigned"
  },
  {
    "alpha2": "UZ",
    "alpha3": "UZB",
    "countryCallingCodes": [
      "+998"
    ],
    "currencies": [
      "UZS"
    ],
    "ioc": "UZB",
    "languages": [
      "uzb",
      "rus"
    ],
    "name": "Uzbekistan",
    "status": "assigned"
  },
  {
    "alpha2": "VA",
    "alpha3": "VAT",
    "countryCallingCodes": [
      "+379",
      "+39"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "ita"
    ],
    "name": "Vatican City State",
    "status": "assigned"
  },
  {
    "alpha2": "VC",
    "alpha3": "VCT",
    "countryCallingCodes": [
      "+1 784"
    ],
    "currencies": [
      "XCD"
    ],
    "ioc": "VIN",
    "languages": [
      "eng"
    ],
    "name": "Saint Vincent And The Grenadines",
    "status": "assigned"
  },
  {
    "alpha2": "VE",
    "alpha3": "VEN",
    "countryCallingCodes": [
      "+58"
    ],
    "currencies": [
      "VEF"
    ],
    "ioc": "VEN",
    "languages": [
      "spa"
    ],
    "name": "Venezuela, Bolivarian Republic Of",
    "status": "assigned"
  },
  {
    "alpha2": "VG",
    "alpha3": "VGB",
    "countryCallingCodes": [
      "+1 284"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "ISV",
    "languages": [
      "eng"
    ],
    "name": "Virgin Islands (British)",
    "status": "assigned"
  },
  {
    "alpha2": "VI",
    "alpha3": "VIR",
    "countryCallingCodes": [
      "+1 340"
    ],
    "currencies": [
      "USD"
    ],
    "ioc": "ISV",
    "languages": [
      "eng"
    ],
    "name": "Virgin Islands (US)",
    "status": "assigned"
  },
  {
    "alpha2": "VN",
    "alpha3": "VNM",
    "countryCallingCodes": [
      "+84"
    ],
    "currencies": [
      "VND"
    ],
    "ioc": "VIE",
    "languages": [
      "vie"
    ],
    "name": "Viet Nam",
    "status": "assigned"
  },
  {
    "alpha2": "VU",
    "alpha3": "VUT",
    "countryCallingCodes": [
      "+678"
    ],
    "currencies": [
      "VUV"
    ],
    "ioc": "VAN",
    "languages": [
      "bis",
      "eng",
      "fre"
    ],
    "name": "Vanuatu",
    "status": "assigned"
  },
  {
    "alpha2": "WF",
    "alpha3": "WLF",
    "countryCallingCodes": [
      "+681"
    ],
    "currencies": [
      "XPF"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "Wallis And Futuna",
    "status": "assigned"
  },
  {
    "alpha2": "WS",
    "alpha3": "WSM",
    "countryCallingCodes": [
      "+685"
    ],
    "currencies": [
      "WST"
    ],
    "ioc": "SAM",
    "languages": [
      "eng",
      "smo"
    ],
    "name": "Samoa",
    "status": "assigned"
  },
  {
    "alpha2": "YE",
    "alpha3": "YEM",
    "countryCallingCodes": [
      "+967"
    ],
    "currencies": [
      "YER"
    ],
    "ioc": "YEM",
    "languages": [
      "ara"
    ],
    "name": "Yemen",
    "status": "assigned"
  },
  {
    "alpha2": "YT",
    "alpha3": "MYT",
    "countryCallingCodes": [
      "+262"
    ],
    "currencies": [
      "EUR"
    ],
    "ioc": "",
    "languages": [
      "fre"
    ],
    "name": "Mayotte",
    "status": "assigned"
  },
  {
    "alpha2": "ZA",
    "alpha3": "ZAF",
    "countryCallingCodes": [
      "+27"
    ],
    "currencies": [
      "ZAR"
    ],
    "ioc": "RSA",
    "languages": [
      "afr",
      "eng",
      "nbl",
      "som",
      "tso",
      "ven",
      "xho",
      "zul"
    ],
    "name": "South Africa",
    "status": "assigned"
  },
  {
    "alpha2": "ZM",
    "alpha3": "ZMB",
    "countryCallingCodes": [
      "+260"
    ],
    "currencies": [
      "ZMW"
    ],
    "ioc": "ZAM",
    "languages": [
      "eng"
    ],
    "name": "Zambia",
    "status": "assigned"
  },
  {
    "alpha2": "ZW",
    "alpha3": "ZWE",
    "countryCallingCodes": [
      "+263"
    ],
    "currencies": [
      "USD",
      "ZAR",
      "BWP",
      "GBP",
      "EUR"
    ],
    "ioc": "ZIM",
    "languages": [
      "eng",
      "sna",
      "nde"
    ],
    "name": "Zimbabwe",
    "status": "assigned"
  }
]

},{}],3:[function(require,module,exports){
module.exports=[
  {
    "code": "AED",
    "decimals": 2,
    "name": "United Arab Emirates dirham",
    "number": "784"
  },
  {
    "code": "AFN",
    "decimals": 2,
    "name": "Afghan afghani",
    "number": "971"
  },
  {
    "code": "ALL",
    "decimals": 2,
    "name": "Albanian lek",
    "number": "8"
  },
  {
    "code": "AMD",
    "decimals": 2,
    "name": "Armenian dram",
    "number": "51"
  },
  {
    "code": "ANG",
    "decimals": 2,
    "name": "Netherlands Antillean guilder",
    "number": "532"
  },
  {
    "code": "AOA",
    "decimals": 2,
    "name": "Angolan kwanza",
    "number": "973"
  },
  {
    "code": "ARS",
    "decimals": 2,
    "name": "Argentine peso",
    "number": "32"
  },
  {
    "code": "AUD",
    "decimals": 2,
    "name": "Australian dollar",
    "number": "36"
  },
  {
    "code": "AWG",
    "decimals": 2,
    "name": "Aruban florin",
    "number": "533"
  },
  {
    "code": "AZN",
    "decimals": 2,
    "name": "Azerbaijani manat",
    "number": "944"
  },
  {
    "code": "BAM",
    "decimals": 2,
    "name": "Bosnia and Herzegovina convertible mark",
    "number": "977"
  },
  {
    "code": "BBD",
    "decimals": 2,
    "name": "Barbados dollar",
    "number": "52"
  },
  {
    "code": "BDT",
    "decimals": 2,
    "name": "Bangladeshi taka",
    "number": "50"
  },
  {
    "code": "BGN",
    "decimals": 2,
    "name": "Bulgarian lev",
    "number": "975"
  },
  {
    "code": "BHD",
    "decimals": 3,
    "name": "Bahraini dinar",
    "number": "48"
  },
  {
    "code": "BIF",
    "decimals": 0,
    "name": "Burundian franc",
    "number": "108"
  },
  {
    "code": "BMD",
    "decimals": 2,
    "name": "Bermudian dollar (customarily known as Bermuda dollar)",
    "number": "60"
  },
  {
    "code": "BND",
    "decimals": 2,
    "name": "Brunei dollar",
    "number": "96"
  },
  {
    "code": "BOB",
    "decimals": 2,
    "name": "Boliviano",
    "number": "68"
  },
  {
    "code": "BOV",
    "decimals": 2,
    "name": "Bolivian Mvdol (funds code)",
    "number": "984"
  },
  {
    "code": "BRL",
    "decimals": 2,
    "name": "Brazilian real",
    "number": "986"
  },
  {
    "code": "BSD",
    "decimals": 2,
    "name": "Bahamian dollar",
    "number": "44"
  },
  {
    "code": "BTN",
    "decimals": 2,
    "name": "Bhutanese ngultrum",
    "number": "64"
  },
  {
    "code": "BWP",
    "decimals": 2,
    "name": "Botswana pula",
    "number": "72"
  },
  {
    "code": "BYR",
    "decimals": 0,
    "name": "Belarusian ruble",
    "number": "974"
  },
  {
    "code": "BZD",
    "decimals": 2,
    "name": "Belize dollar",
    "number": "84"
  },
  {
    "code": "CAD",
    "decimals": 2,
    "name": "Canadian dollar",
    "number": "124"
  },
  {
    "code": "CDF",
    "decimals": 2,
    "name": "Congolese franc",
    "number": "976"
  },
  {
    "code": "CHE",
    "decimals": 2,
    "name": "WIR Euro (complementary currency)",
    "number": "947"
  },
  {
    "code": "CHF",
    "decimals": 2,
    "name": "Swiss franc",
    "number": "756"
  },
  {
    "code": "CHW",
    "decimals": 2,
    "name": "WIR Franc (complementary currency)",
    "number": "948"
  },
  {
    "code": "CLF",
    "decimals": 0,
    "name": "Unidad de Fomento (funds code)",
    "number": "990"
  },
  {
    "code": "CLP",
    "decimals": 0,
    "name": "Chilean peso",
    "number": "152"
  },
  {
    "code": "CNY",
    "decimals": 2,
    "name": "Chinese yuan",
    "number": "156"
  },
  {
    "code": "COP",
    "decimals": 2,
    "name": "Colombian peso",
    "number": "170"
  },
  {
    "code": "COU",
    "decimals": 2,
    "name": "Unidad de Valor Real",
    "number": "970"
  },
  {
    "code": "CRC",
    "decimals": 2,
    "name": "Costa Rican colon",
    "number": "188"
  },
  {
    "code": "CUC",
    "decimals": 2,
    "name": "Cuban convertible peso",
    "number": "931"
  },
  {
    "code": "CUP",
    "decimals": 2,
    "name": "Cuban peso",
    "number": "192"
  },
  {
    "code": "CVE",
    "decimals": 0,
    "name": "Cape Verde escudo",
    "number": "132"
  },
  {
    "code": "CZK",
    "decimals": 2,
    "name": "Czech koruna",
    "number": "203"
  },
  {
    "code": "DJF",
    "decimals": 0,
    "name": "Djiboutian franc",
    "number": "262"
  },
  {
    "code": "DKK",
    "decimals": 2,
    "name": "Danish krone",
    "number": "208"
  },
  {
    "code": "DOP",
    "decimals": 2,
    "name": "Dominican peso",
    "number": "214"
  },
  {
    "code": "DZD",
    "decimals": 2,
    "name": "Algerian dinar",
    "number": "12"
  },
  {
    "code": "EGP",
    "decimals": 2,
    "name": "Egyptian pound",
    "number": "818"
  },
  {
    "code": "ERN",
    "decimals": 2,
    "name": "Eritrean nakfa",
    "number": "232"
  },
  {
    "code": "ETB",
    "decimals": 2,
    "name": "Ethiopian birr",
    "number": "230"
  },
  {
    "code": "EUR",
    "decimals": 2,
    "name": "Euro",
    "number": "978"
  },
  {
    "code": "FJD",
    "decimals": 2,
    "name": "Fiji dollar",
    "number": "242"
  },
  {
    "code": "FKP",
    "decimals": 2,
    "name": "Falkland Islands pound",
    "number": "238"
  },
  {
    "code": "GBP",
    "decimals": 2,
    "name": "Pound sterling",
    "number": "826"
  },
  {
    "code": "GEL",
    "decimals": 2,
    "name": "Georgian lari",
    "number": "981"
  },
  {
    "code": "GHS",
    "decimals": 2,
    "name": "Ghanaian cedi",
    "number": "936"
  },
  {
    "code": "GIP",
    "decimals": 2,
    "name": "Gibraltar pound",
    "number": "292"
  },
  {
    "code": "GMD",
    "decimals": 2,
    "name": "Gambian dalasi",
    "number": "270"
  },
  {
    "code": "GNF",
    "decimals": 0,
    "name": "Guinean franc",
    "number": "324"
  },
  {
    "code": "GTQ",
    "decimals": 2,
    "name": "Guatemalan quetzal",
    "number": "320"
  },
  {
    "code": "GYD",
    "decimals": 2,
    "name": "Guyanese dollar",
    "number": "328"
  },
  {
    "code": "HKD",
    "decimals": 2,
    "name": "Hong Kong dollar",
    "number": "344"
  },
  {
    "code": "HNL",
    "decimals": 2,
    "name": "Honduran lempira",
    "number": "340"
  },
  {
    "code": "HRK",
    "decimals": 2,
    "name": "Croatian kuna",
    "number": "191"
  },
  {
    "code": "HTG",
    "decimals": 2,
    "name": "Haitian gourde",
    "number": "332"
  },
  {
    "code": "HUF",
    "decimals": 2,
    "name": "Hungarian forint",
    "number": "348"
  },
  {
    "code": "IDR",
    "decimals": 2,
    "name": "Indonesian rupiah",
    "number": "360"
  },
  {
    "code": "ILS",
    "decimals": 2,
    "name": "Israeli new shekel",
    "number": "376"
  },
  {
    "code": "INR",
    "decimals": 2,
    "name": "Indian rupee",
    "number": "356"
  },
  {
    "code": "IQD",
    "decimals": 3,
    "name": "Iraqi dinar",
    "number": "368"
  },
  {
    "code": "IRR",
    "decimals": 0,
    "name": "Iranian rial",
    "number": "364"
  },
  {
    "code": "ISK",
    "decimals": 0,
    "name": "Icelandic króna",
    "number": "352"
  },
  {
    "code": "JMD",
    "decimals": 2,
    "name": "Jamaican dollar",
    "number": "388"
  },
  {
    "code": "JOD",
    "decimals": 3,
    "name": "Jordanian dinar",
    "number": "400"
  },
  {
    "code": "JPY",
    "decimals": 0,
    "name": "Japanese yen",
    "number": "392"
  },
  {
    "code": "KES",
    "decimals": 2,
    "name": "Kenyan shilling",
    "number": "404"
  },
  {
    "code": "KGS",
    "decimals": 2,
    "name": "Kyrgyzstani som",
    "number": "417"
  },
  {
    "code": "KHR",
    "decimals": 2,
    "name": "Cambodian riel",
    "number": "116"
  },
  {
    "code": "KMF",
    "decimals": 0,
    "name": "Comoro franc",
    "number": "174"
  },
  {
    "code": "KPW",
    "decimals": 0,
    "name": "North Korean won",
    "number": "408"
  },
  {
    "code": "KRW",
    "decimals": 0,
    "name": "South Korean won",
    "number": "410"
  },
  {
    "code": "KWD",
    "decimals": 3,
    "name": "Kuwaiti dinar",
    "number": "414"
  },
  {
    "code": "KYD",
    "decimals": 2,
    "name": "Cayman Islands dollar",
    "number": "136"
  },
  {
    "code": "KZT",
    "decimals": 2,
    "name": "Kazakhstani tenge",
    "number": "398"
  },
  {
    "code": "LAK",
    "decimals": 0,
    "name": "Lao kip",
    "number": "418"
  },
  {
    "code": "LBP",
    "decimals": 0,
    "name": "Lebanese pound",
    "number": "422"
  },
  {
    "code": "LKR",
    "decimals": 2,
    "name": "Sri Lankan rupee",
    "number": "144"
  },
  {
    "code": "LRD",
    "decimals": 2,
    "name": "Liberian dollar",
    "number": "430"
  },
  {
    "code": "LSL",
    "decimals": 2,
    "name": "Lesotho loti",
    "number": "426"
  },
  {
    "code": "LTL",
    "decimals": 2,
    "name": "Lithuanian litas",
    "number": "440"
  },
  {
    "code": "LVL",
    "decimals": 2,
    "name": "Latvian lats",
    "number": "428"
  },
  {
    "code": "LYD",
    "decimals": 3,
    "name": "Libyan dinar",
    "number": "434"
  },
  {
    "code": "MAD",
    "decimals": 2,
    "name": "Moroccan dirham",
    "number": "504"
  },
  {
    "code": "MDL",
    "decimals": 2,
    "name": "Moldovan leu",
    "number": "498"
  },
  {
    "code": "MGA",
    "decimals": 0,
    "name": "Malagasy ariary",
    "number": "969"
  },
  {
    "code": "MKD",
    "decimals": 0,
    "name": "Macedonian denar",
    "number": "807"
  },
  {
    "code": "MMK",
    "decimals": 0,
    "name": "Myanma kyat",
    "number": "104"
  },
  {
    "code": "MNT",
    "decimals": 2,
    "name": "Mongolian tugrik",
    "number": "496"
  },
  {
    "code": "MOP",
    "decimals": 2,
    "name": "Macanese pataca",
    "number": "446"
  },
  {
    "code": "MRO",
    "decimals": 0,
    "name": "Mauritanian ouguiya",
    "number": "478"
  },
  {
    "code": "MUR",
    "decimals": 2,
    "name": "Mauritian rupee",
    "number": "480"
  },
  {
    "code": "MVR",
    "decimals": 2,
    "name": "Maldivian rufiyaa",
    "number": "462"
  },
  {
    "code": "MWK",
    "decimals": 2,
    "name": "Malawian kwacha",
    "number": "454"
  },
  {
    "code": "MXN",
    "decimals": 2,
    "name": "Mexican peso",
    "number": "484"
  },
  {
    "code": "MXV",
    "decimals": 2,
    "name": "Mexican Unidad de Inversion (UDI) (funds code)",
    "number": "979"
  },
  {
    "code": "MYR",
    "decimals": 2,
    "name": "Malaysian ringgit",
    "number": "458"
  },
  {
    "code": "MZN",
    "decimals": 2,
    "name": "Mozambican metical",
    "number": "943"
  },
  {
    "code": "NAD",
    "decimals": 2,
    "name": "Namibian dollar",
    "number": "516"
  },
  {
    "code": "NGN",
    "decimals": 2,
    "name": "Nigerian naira",
    "number": "566"
  },
  {
    "code": "NIO",
    "decimals": 2,
    "name": "Nicaraguan córdoba",
    "number": "558"
  },
  {
    "code": "NOK",
    "decimals": 2,
    "name": "Norwegian krone",
    "number": "578"
  },
  {
    "code": "NPR",
    "decimals": 2,
    "name": "Nepalese rupee",
    "number": "524"
  },
  {
    "code": "NZD",
    "decimals": 2,
    "name": "New Zealand dollar",
    "number": "554"
  },
  {
    "code": "OMR",
    "decimals": 3,
    "name": "Omani rial",
    "number": "512"
  },
  {
    "code": "PAB",
    "decimals": 2,
    "name": "Panamanian balboa",
    "number": "590"
  },
  {
    "code": "PEN",
    "decimals": 2,
    "name": "Peruvian nuevo sol",
    "number": "604"
  },
  {
    "code": "PGK",
    "decimals": 2,
    "name": "Papua New Guinean kina",
    "number": "598"
  },
  {
    "code": "PHP",
    "decimals": 2,
    "name": "Philippine peso",
    "number": "608"
  },
  {
    "code": "PKR",
    "decimals": 2,
    "name": "Pakistani rupee",
    "number": "586"
  },
  {
    "code": "PLN",
    "decimals": 2,
    "name": "Polish złoty",
    "number": "985"
  },
  {
    "code": "PYG",
    "decimals": 0,
    "name": "Paraguayan guaraní",
    "number": "600"
  },
  {
    "code": "QAR",
    "decimals": 2,
    "name": "Qatari riyal",
    "number": "634"
  },
  {
    "code": "RON",
    "decimals": 2,
    "name": "Romanian new leu",
    "number": "946"
  },
  {
    "code": "RSD",
    "decimals": 2,
    "name": "Serbian dinar",
    "number": "941"
  },
  {
    "code": "RUB",
    "decimals": 2,
    "name": "Russian rouble",
    "number": "643"
  },
  {
    "code": "RWF",
    "decimals": 0,
    "name": "Rwandan franc",
    "number": "646"
  },
  {
    "code": "SAR",
    "decimals": 2,
    "name": "Saudi riyal",
    "number": "682"
  },
  {
    "code": "SBD",
    "decimals": 2,
    "name": "Solomon Islands dollar",
    "number": "90"
  },
  {
    "code": "SCR",
    "decimals": 2,
    "name": "Seychelles rupee",
    "number": "690"
  },
  {
    "code": "SDG",
    "decimals": 2,
    "name": "Sudanese pound",
    "number": "938"
  },
  {
    "code": "SEK",
    "decimals": 2,
    "name": "Swedish krona/kronor",
    "number": "752"
  },
  {
    "code": "SGD",
    "decimals": 2,
    "name": "Singapore dollar",
    "number": "702"
  },
  {
    "code": "SHP",
    "decimals": 2,
    "name": "Saint Helena pound",
    "number": "654"
  },
  {
    "code": "SLL",
    "decimals": 0,
    "name": "Sierra Leonean leone",
    "number": "694"
  },
  {
    "code": "SOS",
    "decimals": 2,
    "name": "Somali shilling",
    "number": "706"
  },
  {
    "code": "SRD",
    "decimals": 2,
    "name": "Surinamese dollar",
    "number": "968"
  },
  {
    "code": "SSP",
    "decimals": 2,
    "name": "South Sudanese pound",
    "number": "728"
  },
  {
    "code": "STD",
    "decimals": 0,
    "name": "São Tomé and Príncipe dobra",
    "number": "678"
  },
  {
    "code": "SYP",
    "decimals": 2,
    "name": "Syrian pound",
    "number": "760"
  },
  {
    "code": "SZL",
    "decimals": 2,
    "name": "Swazi lilangeni",
    "number": "748"
  },
  {
    "code": "THB",
    "decimals": 2,
    "name": "Thai baht",
    "number": "764"
  },
  {
    "code": "TJS",
    "decimals": 2,
    "name": "Tajikistani somoni",
    "number": "972"
  },
  {
    "code": "TMT",
    "decimals": 2,
    "name": "Turkmenistani manat",
    "number": "934"
  },
  {
    "code": "TND",
    "decimals": 3,
    "name": "Tunisian dinar",
    "number": "788"
  },
  {
    "code": "TOP",
    "decimals": 2,
    "name": "Tongan paʻanga",
    "number": "776"
  },
  {
    "code": "TRY",
    "decimals": 2,
    "name": "Turkish lira",
    "number": "949"
  },
  {
    "code": "TTD",
    "decimals": 2,
    "name": "Trinidad and Tobago dollar",
    "number": "780"
  },
  {
    "code": "TWD",
    "decimals": 2,
    "name": "New Taiwan dollar",
    "number": "901"
  },
  {
    "code": "TZS",
    "decimals": 2,
    "name": "Tanzanian shilling",
    "number": "834"
  },
  {
    "code": "UAH",
    "decimals": 2,
    "name": "Ukrainian hryvnia",
    "number": "980"
  },
  {
    "code": "UGX",
    "decimals": 2,
    "name": "Ugandan shilling",
    "number": "800"
  },
  {
    "code": "USD",
    "decimals": 2,
    "name": "United States dollar",
    "number": "840"
  },
  {
    "code": "USN",
    "decimals": 2,
    "name": "United States dollar (next day) (funds code)",
    "number": "997"
  },
  {
    "code": "USS",
    "decimals": 2,
    "name": "United States dollar (same day) (funds code) (one source[who?] claims it is no longer used, but it is still on the ISO 4217-MA list)",
    "number": "998"
  },
  {
    "code": "UYI",
    "decimals": 0,
    "name": "Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)",
    "number": "940"
  },
  {
    "code": "UYU",
    "decimals": 2,
    "name": "Uruguayan peso",
    "number": "858"
  },
  {
    "code": "UZS",
    "decimals": 2,
    "name": "Uzbekistan som",
    "number": "860"
  },
  {
    "code": "VEF",
    "decimals": 2,
    "name": "Venezuelan bolívar fuerte",
    "number": "937"
  },
  {
    "code": "VND",
    "decimals": 0,
    "name": "Vietnamese dong",
    "number": "704"
  },
  {
    "code": "VUV",
    "decimals": 0,
    "name": "Vanuatu vatu",
    "number": "548"
  },
  {
    "code": "WST",
    "decimals": 2,
    "name": "Samoan tala",
    "number": "882"
  },
  {
    "code": "XAF",
    "decimals": 0,
    "name": "CFA franc BEAC",
    "number": "950"
  },
  {
    "code": "XAG",
    "decimals": null,
    "name": "Silver (one troy ounce)",
    "number": "961"
  },
  {
    "code": "XAU",
    "decimals": null,
    "name": "Gold (one troy ounce)",
    "number": "959"
  },
  {
    "code": "XBA",
    "decimals": null,
    "name": "European Composite Unit (EURCO) (bond market unit)",
    "number": "955"
  },
  {
    "code": "XBB",
    "decimals": null,
    "name": "European Monetary Unit (E.M.U.-6) (bond market unit)",
    "number": "956"
  },
  {
    "code": "XBC",
    "decimals": null,
    "name": "European Unit of Account 9 (E.U.A.-9) (bond market unit)",
    "number": "957"
  },
  {
    "code": "XBD",
    "decimals": null,
    "name": "European Unit of Account 17 (E.U.A.-17) (bond market unit)",
    "number": "958"
  },
  {
    "code": "XCD",
    "decimals": 2,
    "name": "East Caribbean dollar",
    "number": "951"
  },
  {
    "code": "XDR",
    "decimals": null,
    "name": "Special drawing rights",
    "number": "960"
  },
  {
    "code": "XFU",
    "decimals": null,
    "name": "UIC franc (special settlement currency)",
    "number": "Nil"
  },
  {
    "code": "XOF",
    "decimals": 0,
    "name": "CFA franc BCEAO",
    "number": "952"
  },
  {
    "code": "XPD",
    "decimals": null,
    "name": "Palladium (one troy ounce)",
    "number": "964"
  },
  {
    "code": "XPF",
    "decimals": 0,
    "name": "CFP franc",
    "number": "953"
  },
  {
    "code": "XPT",
    "decimals": null,
    "name": "Platinum (one troy ounce)",
    "number": "962"
  },
  {
    "code": "XTS",
    "decimals": null,
    "name": "Code reserved for testing purposes",
    "number": "963"
  },
  {
    "code": "XXX",
    "decimals": null,
    "name": "No currency",
    "number": "999"
  },
  {
    "code": "YER",
    "decimals": 2,
    "name": "Yemeni rial",
    "number": "886"
  },
  {
    "code": "ZAR",
    "decimals": 2,
    "name": "South African rand",
    "number": "710"
  },
  {
    "code": "ZMW",
    "decimals": 2,
    "name": "Zambian kwacha",
    "number": "967"
  }
]

},{}],4:[function(require,module,exports){
module.exports=[
  {
    "alpha2": "aa",
    "alpha3": "aar",
    "bibliographic": "",
    "name": "Afar"
  },
  {
    "alpha2": "ab",
    "alpha3": "abk",
    "bibliographic": "",
    "name": "Abkhazian"
  },
  {
    "alpha2": "",
    "alpha3": "ace",
    "bibliographic": "",
    "name": "Achinese"
  },
  {
    "alpha2": "",
    "alpha3": "ach",
    "bibliographic": "",
    "name": "Acoli"
  },
  {
    "alpha2": "",
    "alpha3": "ada",
    "bibliographic": "",
    "name": "Adangme"
  },
  {
    "alpha2": "",
    "alpha3": "ady",
    "bibliographic": "",
    "name": "Adygei"
  },
  {
    "alpha2": "",
    "alpha3": "ady",
    "bibliographic": "",
    "name": "Adyghe"
  },
  {
    "alpha2": "",
    "alpha3": "afa",
    "bibliographic": "",
    "name": "Afro-Asiatic languages"
  },
  {
    "alpha2": "",
    "alpha3": "afh",
    "bibliographic": "",
    "name": "Afrihili"
  },
  {
    "alpha2": "af",
    "alpha3": "afr",
    "bibliographic": "",
    "name": "Afrikaans"
  },
  {
    "alpha2": "",
    "alpha3": "ain",
    "bibliographic": "",
    "name": "Ainu"
  },
  {
    "alpha2": "ak",
    "alpha3": "aka",
    "bibliographic": "",
    "name": "Akan"
  },
  {
    "alpha2": "",
    "alpha3": "akk",
    "bibliographic": "",
    "name": "Akkadian"
  },
  {
    "alpha2": "",
    "alpha3": "ale",
    "bibliographic": "",
    "name": "Aleut"
  },
  {
    "alpha2": "",
    "alpha3": "alg",
    "bibliographic": "",
    "name": "Algonquian languages"
  },
  {
    "alpha2": "",
    "alpha3": "alt",
    "bibliographic": "",
    "name": "Southern Altai"
  },
  {
    "alpha2": "am",
    "alpha3": "amh",
    "bibliographic": "",
    "name": "Amharic"
  },
  {
    "alpha2": "",
    "alpha3": "ang",
    "bibliographic": "",
    "name": "English, Old (ca.450-1100)"
  },
  {
    "alpha2": "",
    "alpha3": "anp",
    "bibliographic": "",
    "name": "Angika"
  },
  {
    "alpha2": "",
    "alpha3": "apa",
    "bibliographic": "",
    "name": "Apache languages"
  },
  {
    "alpha2": "ar",
    "alpha3": "ara",
    "bibliographic": "",
    "name": "Arabic"
  },
  {
    "alpha2": "",
    "alpha3": "arc",
    "bibliographic": "",
    "name": "Imperial Aramaic (700-300 BCE)"
  },
  {
    "alpha2": "",
    "alpha3": "arc",
    "bibliographic": "",
    "name": "Official Aramaic (700-300 BCE)"
  },
  {
    "alpha2": "an",
    "alpha3": "arg",
    "bibliographic": "",
    "name": "Aragonese"
  },
  {
    "alpha2": "",
    "alpha3": "arn",
    "bibliographic": "",
    "name": "Mapuche"
  },
  {
    "alpha2": "",
    "alpha3": "arn",
    "bibliographic": "",
    "name": "Mapudungun"
  },
  {
    "alpha2": "",
    "alpha3": "arp",
    "bibliographic": "",
    "name": "Arapaho"
  },
  {
    "alpha2": "",
    "alpha3": "art",
    "bibliographic": "",
    "name": "Artificial languages"
  },
  {
    "alpha2": "",
    "alpha3": "arw",
    "bibliographic": "",
    "name": "Arawak"
  },
  {
    "alpha2": "as",
    "alpha3": "asm",
    "bibliographic": "",
    "name": "Assamese"
  },
  {
    "alpha2": "",
    "alpha3": "ast",
    "bibliographic": "",
    "name": "Asturian"
  },
  {
    "alpha2": "",
    "alpha3": "ast",
    "bibliographic": "",
    "name": "Asturleonese"
  },
  {
    "alpha2": "",
    "alpha3": "ast",
    "bibliographic": "",
    "name": "Bable"
  },
  {
    "alpha2": "",
    "alpha3": "ast",
    "bibliographic": "",
    "name": "Leonese"
  },
  {
    "alpha2": "",
    "alpha3": "ath",
    "bibliographic": "",
    "name": "Athapascan languages"
  },
  {
    "alpha2": "",
    "alpha3": "aus",
    "bibliographic": "",
    "name": "Australian languages"
  },
  {
    "alpha2": "av",
    "alpha3": "ava",
    "bibliographic": "",
    "name": "Avaric"
  },
  {
    "alpha2": "ae",
    "alpha3": "ave",
    "bibliographic": "",
    "name": "Avestan"
  },
  {
    "alpha2": "",
    "alpha3": "awa",
    "bibliographic": "",
    "name": "Awadhi"
  },
  {
    "alpha2": "ay",
    "alpha3": "aym",
    "bibliographic": "",
    "name": "Aymara"
  },
  {
    "alpha2": "az",
    "alpha3": "aze",
    "bibliographic": "",
    "name": "Azerbaijani"
  },
  {
    "alpha2": "",
    "alpha3": "bad",
    "bibliographic": "",
    "name": "Banda languages"
  },
  {
    "alpha2": "",
    "alpha3": "bai",
    "bibliographic": "",
    "name": "Bamileke languages"
  },
  {
    "alpha2": "ba",
    "alpha3": "bak",
    "bibliographic": "",
    "name": "Bashkir"
  },
  {
    "alpha2": "",
    "alpha3": "bal",
    "bibliographic": "",
    "name": "Baluchi"
  },
  {
    "alpha2": "bm",
    "alpha3": "bam",
    "bibliographic": "",
    "name": "Bambara"
  },
  {
    "alpha2": "",
    "alpha3": "ban",
    "bibliographic": "",
    "name": "Balinese"
  },
  {
    "alpha2": "",
    "alpha3": "bas",
    "bibliographic": "",
    "name": "Basa"
  },
  {
    "alpha2": "",
    "alpha3": "bat",
    "bibliographic": "",
    "name": "Baltic languages"
  },
  {
    "alpha2": "",
    "alpha3": "bej",
    "bibliographic": "",
    "name": "Bedawiyet"
  },
  {
    "alpha2": "",
    "alpha3": "bej",
    "bibliographic": "",
    "name": "Beja"
  },
  {
    "alpha2": "be",
    "alpha3": "bel",
    "bibliographic": "",
    "name": "Belarusian"
  },
  {
    "alpha2": "",
    "alpha3": "bem",
    "bibliographic": "",
    "name": "Bemba"
  },
  {
    "alpha2": "bn",
    "alpha3": "ben",
    "bibliographic": "",
    "name": "Bengali"
  },
  {
    "alpha2": "",
    "alpha3": "ber",
    "bibliographic": "",
    "name": "Berber languages"
  },
  {
    "alpha2": "",
    "alpha3": "bho",
    "bibliographic": "",
    "name": "Bhojpuri"
  },
  {
    "alpha2": "bh",
    "alpha3": "bih",
    "bibliographic": "",
    "name": "Bihari languages"
  },
  {
    "alpha2": "",
    "alpha3": "bik",
    "bibliographic": "",
    "name": "Bikol"
  },
  {
    "alpha2": "",
    "alpha3": "bin",
    "bibliographic": "",
    "name": "Bini"
  },
  {
    "alpha2": "",
    "alpha3": "bin",
    "bibliographic": "",
    "name": "Edo"
  },
  {
    "alpha2": "bi",
    "alpha3": "bis",
    "bibliographic": "",
    "name": "Bislama"
  },
  {
    "alpha2": "",
    "alpha3": "bla",
    "bibliographic": "",
    "name": "Siksika"
  },
  {
    "alpha2": "",
    "alpha3": "bnt",
    "bibliographic": "",
    "name": "Bantu languages"
  },
  {
    "alpha2": "bo",
    "alpha3": "bod",
    "bibliographic": "tib",
    "name": "Tibetan"
  },
  {
    "alpha2": "bs",
    "alpha3": "bos",
    "bibliographic": "",
    "name": "Bosnian"
  },
  {
    "alpha2": "",
    "alpha3": "bra",
    "bibliographic": "",
    "name": "Braj"
  },
  {
    "alpha2": "br",
    "alpha3": "bre",
    "bibliographic": "",
    "name": "Breton"
  },
  {
    "alpha2": "",
    "alpha3": "btk",
    "bibliographic": "",
    "name": "Batak languages"
  },
  {
    "alpha2": "",
    "alpha3": "bua",
    "bibliographic": "",
    "name": "Buriat"
  },
  {
    "alpha2": "",
    "alpha3": "bug",
    "bibliographic": "",
    "name": "Buginese"
  },
  {
    "alpha2": "bg",
    "alpha3": "bul",
    "bibliographic": "",
    "name": "Bulgarian"
  },
  {
    "alpha2": "",
    "alpha3": "byn",
    "bibliographic": "",
    "name": "Bilin"
  },
  {
    "alpha2": "",
    "alpha3": "byn",
    "bibliographic": "",
    "name": "Blin"
  },
  {
    "alpha2": "",
    "alpha3": "cad",
    "bibliographic": "",
    "name": "Caddo"
  },
  {
    "alpha2": "",
    "alpha3": "cai",
    "bibliographic": "",
    "name": "Central American Indian languages"
  },
  {
    "alpha2": "",
    "alpha3": "car",
    "bibliographic": "",
    "name": "Galibi Carib"
  },
  {
    "alpha2": "ca",
    "alpha3": "cat",
    "bibliographic": "",
    "name": "Catalan"
  },
  {
    "alpha2": "ca",
    "alpha3": "cat",
    "bibliographic": "",
    "name": "Valencian"
  },
  {
    "alpha2": "",
    "alpha3": "cau",
    "bibliographic": "",
    "name": "Caucasian languages"
  },
  {
    "alpha2": "",
    "alpha3": "ceb",
    "bibliographic": "",
    "name": "Cebuano"
  },
  {
    "alpha2": "",
    "alpha3": "cel",
    "bibliographic": "",
    "name": "Celtic languages"
  },
  {
    "alpha2": "cs",
    "alpha3": "ces",
    "bibliographic": "cze",
    "name": "Czech"
  },
  {
    "alpha2": "ch",
    "alpha3": "cha",
    "bibliographic": "",
    "name": "Chamorro"
  },
  {
    "alpha2": "",
    "alpha3": "chb",
    "bibliographic": "",
    "name": "Chibcha"
  },
  {
    "alpha2": "ce",
    "alpha3": "che",
    "bibliographic": "",
    "name": "Chechen"
  },
  {
    "alpha2": "",
    "alpha3": "chg",
    "bibliographic": "",
    "name": "Chagatai"
  },
  {
    "alpha2": "",
    "alpha3": "chk",
    "bibliographic": "",
    "name": "Chuukese"
  },
  {
    "alpha2": "",
    "alpha3": "chm",
    "bibliographic": "",
    "name": "Mari"
  },
  {
    "alpha2": "",
    "alpha3": "chn",
    "bibliographic": "",
    "name": "Chinook jargon"
  },
  {
    "alpha2": "",
    "alpha3": "cho",
    "bibliographic": "",
    "name": "Choctaw"
  },
  {
    "alpha2": "",
    "alpha3": "chp",
    "bibliographic": "",
    "name": "Chipewyan"
  },
  {
    "alpha2": "",
    "alpha3": "chp",
    "bibliographic": "",
    "name": "Dene Suline"
  },
  {
    "alpha2": "",
    "alpha3": "chr",
    "bibliographic": "",
    "name": "Cherokee"
  },
  {
    "alpha2": "cu",
    "alpha3": "chu",
    "bibliographic": "",
    "name": "Church Slavic"
  },
  {
    "alpha2": "cu",
    "alpha3": "chu",
    "bibliographic": "",
    "name": "Church Slavonic"
  },
  {
    "alpha2": "cu",
    "alpha3": "chu",
    "bibliographic": "",
    "name": "Old Bulgarian"
  },
  {
    "alpha2": "cu",
    "alpha3": "chu",
    "bibliographic": "",
    "name": "Old Church Slavonic"
  },
  {
    "alpha2": "cu",
    "alpha3": "chu",
    "bibliographic": "",
    "name": "Old Slavonic"
  },
  {
    "alpha2": "cv",
    "alpha3": "chv",
    "bibliographic": "",
    "name": "Chuvash"
  },
  {
    "alpha2": "",
    "alpha3": "chy",
    "bibliographic": "",
    "name": "Cheyenne"
  },
  {
    "alpha2": "",
    "alpha3": "cmc",
    "bibliographic": "",
    "name": "Chamic languages"
  },
  {
    "alpha2": "",
    "alpha3": "cop",
    "bibliographic": "",
    "name": "Coptic"
  },
  {
    "alpha2": "kw",
    "alpha3": "cor",
    "bibliographic": "",
    "name": "Cornish"
  },
  {
    "alpha2": "co",
    "alpha3": "cos",
    "bibliographic": "",
    "name": "Corsican"
  },
  {
    "alpha2": "",
    "alpha3": "cpe",
    "bibliographic": "",
    "name": "Creoles and pidgins, English based"
  },
  {
    "alpha2": "",
    "alpha3": "cpf",
    "bibliographic": "",
    "name": "Creoles and pidgins, French-based"
  },
  {
    "alpha2": "",
    "alpha3": "cpp",
    "bibliographic": "",
    "name": "Creoles and pidgins, Portuguese-based"
  },
  {
    "alpha2": "cr",
    "alpha3": "cre",
    "bibliographic": "",
    "name": "Cree"
  },
  {
    "alpha2": "",
    "alpha3": "crh",
    "bibliographic": "",
    "name": "Crimean Tatar"
  },
  {
    "alpha2": "",
    "alpha3": "crh",
    "bibliographic": "",
    "name": "Crimean Turkish"
  },
  {
    "alpha2": "",
    "alpha3": "crp",
    "bibliographic": "",
    "name": "Creoles and pidgins"
  },
  {
    "alpha2": "",
    "alpha3": "csb",
    "bibliographic": "",
    "name": "Kashubian"
  },
  {
    "alpha2": "",
    "alpha3": "cus",
    "bibliographic": "",
    "name": "Cushitic languages"
  },
  {
    "alpha2": "cy",
    "alpha3": "cym",
    "bibliographic": "wel",
    "name": "Welsh"
  },
  {
    "alpha2": "",
    "alpha3": "dak",
    "bibliographic": "",
    "name": "Dakota"
  },
  {
    "alpha2": "da",
    "alpha3": "dan",
    "bibliographic": "",
    "name": "Danish"
  },
  {
    "alpha2": "",
    "alpha3": "dar",
    "bibliographic": "",
    "name": "Dargwa"
  },
  {
    "alpha2": "",
    "alpha3": "day",
    "bibliographic": "",
    "name": "Land Dayak languages"
  },
  {
    "alpha2": "",
    "alpha3": "del",
    "bibliographic": "",
    "name": "Delaware"
  },
  {
    "alpha2": "",
    "alpha3": "den",
    "bibliographic": "",
    "name": "Slave (Athapascan)"
  },
  {
    "alpha2": "de",
    "alpha3": "deu",
    "bibliographic": "ger",
    "name": "German"
  },
  {
    "alpha2": "",
    "alpha3": "dgr",
    "bibliographic": "",
    "name": "Dogrib"
  },
  {
    "alpha2": "",
    "alpha3": "din",
    "bibliographic": "",
    "name": "Dinka"
  },
  {
    "alpha2": "dv",
    "alpha3": "div",
    "bibliographic": "",
    "name": "Dhivehi"
  },
  {
    "alpha2": "dv",
    "alpha3": "div",
    "bibliographic": "",
    "name": "Divehi"
  },
  {
    "alpha2": "dv",
    "alpha3": "div",
    "bibliographic": "",
    "name": "Maldivian"
  },
  {
    "alpha2": "",
    "alpha3": "doi",
    "bibliographic": "",
    "name": "Dogri"
  },
  {
    "alpha2": "",
    "alpha3": "dra",
    "bibliographic": "",
    "name": "Dravidian languages"
  },
  {
    "alpha2": "",
    "alpha3": "dsb",
    "bibliographic": "",
    "name": "Lower Sorbian"
  },
  {
    "alpha2": "",
    "alpha3": "dua",
    "bibliographic": "",
    "name": "Duala"
  },
  {
    "alpha2": "",
    "alpha3": "dum",
    "bibliographic": "",
    "name": "Dutch, Middle (ca.1050-1350)"
  },
  {
    "alpha2": "",
    "alpha3": "dyu",
    "bibliographic": "",
    "name": "Dyula"
  },
  {
    "alpha2": "dz",
    "alpha3": "dzo",
    "bibliographic": "",
    "name": "Dzongkha"
  },
  {
    "alpha2": "",
    "alpha3": "efi",
    "bibliographic": "",
    "name": "Efik"
  },
  {
    "alpha2": "",
    "alpha3": "egy",
    "bibliographic": "",
    "name": "Egyptian (Ancient)"
  },
  {
    "alpha2": "",
    "alpha3": "eka",
    "bibliographic": "",
    "name": "Ekajuk"
  },
  {
    "alpha2": "el",
    "alpha3": "ell",
    "bibliographic": "gre",
    "name": "Greek, Modern (1453-)"
  },
  {
    "alpha2": "",
    "alpha3": "elx",
    "bibliographic": "",
    "name": "Elamite"
  },
  {
    "alpha2": "en",
    "alpha3": "eng",
    "bibliographic": "",
    "name": "English"
  },
  {
    "alpha2": "",
    "alpha3": "enm",
    "bibliographic": "",
    "name": "English, Middle (1100-1500)"
  },
  {
    "alpha2": "eo",
    "alpha3": "epo",
    "bibliographic": "",
    "name": "Esperanto"
  },
  {
    "alpha2": "et",
    "alpha3": "est",
    "bibliographic": "",
    "name": "Estonian"
  },
  {
    "alpha2": "eu",
    "alpha3": "eus",
    "bibliographic": "baq",
    "name": "Basque"
  },
  {
    "alpha2": "ee",
    "alpha3": "ewe",
    "bibliographic": "",
    "name": "Ewe"
  },
  {
    "alpha2": "",
    "alpha3": "ewo",
    "bibliographic": "",
    "name": "Ewondo"
  },
  {
    "alpha2": "",
    "alpha3": "fan",
    "bibliographic": "",
    "name": "Fang"
  },
  {
    "alpha2": "fo",
    "alpha3": "fao",
    "bibliographic": "",
    "name": "Faroese"
  },
  {
    "alpha2": "fa",
    "alpha3": "fas",
    "bibliographic": "per",
    "name": "Persian"
  },
  {
    "alpha2": "",
    "alpha3": "fat",
    "bibliographic": "",
    "name": "Fanti"
  },
  {
    "alpha2": "fj",
    "alpha3": "fij",
    "bibliographic": "",
    "name": "Fijian"
  },
  {
    "alpha2": "",
    "alpha3": "fil",
    "bibliographic": "",
    "name": "Filipino"
  },
  {
    "alpha2": "",
    "alpha3": "fil",
    "bibliographic": "",
    "name": "Pilipino"
  },
  {
    "alpha2": "fi",
    "alpha3": "fin",
    "bibliographic": "",
    "name": "Finnish"
  },
  {
    "alpha2": "",
    "alpha3": "fiu",
    "bibliographic": "",
    "name": "Finno-Ugrian languages"
  },
  {
    "alpha2": "",
    "alpha3": "fon",
    "bibliographic": "",
    "name": "Fon"
  },
  {
    "alpha2": "fr",
    "alpha3": "fra",
    "bibliographic": "fre",
    "name": "French"
  },
  {
    "alpha2": "",
    "alpha3": "frm",
    "bibliographic": "",
    "name": "French, Middle (ca.1400-1600)"
  },
  {
    "alpha2": "",
    "alpha3": "fro",
    "bibliographic": "",
    "name": "French, Old (842-ca.1400)"
  },
  {
    "alpha2": "",
    "alpha3": "frr",
    "bibliographic": "",
    "name": "Northern Frisian"
  },
  {
    "alpha2": "",
    "alpha3": "frs",
    "bibliographic": "",
    "name": "Eastern Frisian"
  },
  {
    "alpha2": "fy",
    "alpha3": "fry",
    "bibliographic": "",
    "name": "Western Frisian"
  },
  {
    "alpha2": "ff",
    "alpha3": "ful",
    "bibliographic": "",
    "name": "Fulah"
  },
  {
    "alpha2": "",
    "alpha3": "fur",
    "bibliographic": "",
    "name": "Friulian"
  },
  {
    "alpha2": "",
    "alpha3": "gaa",
    "bibliographic": "",
    "name": "Ga"
  },
  {
    "alpha2": "",
    "alpha3": "gay",
    "bibliographic": "",
    "name": "Gayo"
  },
  {
    "alpha2": "",
    "alpha3": "gba",
    "bibliographic": "",
    "name": "Gbaya"
  },
  {
    "alpha2": "",
    "alpha3": "gem",
    "bibliographic": "",
    "name": "Germanic languages"
  },
  {
    "alpha2": "",
    "alpha3": "gez",
    "bibliographic": "",
    "name": "Geez"
  },
  {
    "alpha2": "",
    "alpha3": "gil",
    "bibliographic": "",
    "name": "Gilbertese"
  },
  {
    "alpha2": "gd",
    "alpha3": "gla",
    "bibliographic": "",
    "name": "Gaelic"
  },
  {
    "alpha2": "gd",
    "alpha3": "gla",
    "bibliographic": "",
    "name": "Scottish Gaelic"
  },
  {
    "alpha2": "ga",
    "alpha3": "gle",
    "bibliographic": "",
    "name": "Irish"
  },
  {
    "alpha2": "gl",
    "alpha3": "glg",
    "bibliographic": "",
    "name": "Galician"
  },
  {
    "alpha2": "gv",
    "alpha3": "glv",
    "bibliographic": "",
    "name": "Manx"
  },
  {
    "alpha2": "",
    "alpha3": "gmh",
    "bibliographic": "",
    "name": "German, Middle High (ca.1050-1500)"
  },
  {
    "alpha2": "",
    "alpha3": "goh",
    "bibliographic": "",
    "name": "German, Old High (ca.750-1050)"
  },
  {
    "alpha2": "",
    "alpha3": "gon",
    "bibliographic": "",
    "name": "Gondi"
  },
  {
    "alpha2": "",
    "alpha3": "gor",
    "bibliographic": "",
    "name": "Gorontalo"
  },
  {
    "alpha2": "",
    "alpha3": "got",
    "bibliographic": "",
    "name": "Gothic"
  },
  {
    "alpha2": "",
    "alpha3": "grb",
    "bibliographic": "",
    "name": "Grebo"
  },
  {
    "alpha2": "",
    "alpha3": "grc",
    "bibliographic": "",
    "name": "Greek, Ancient (to 1453)"
  },
  {
    "alpha2": "gn",
    "alpha3": "grn",
    "bibliographic": "",
    "name": "Guarani"
  },
  {
    "alpha2": "",
    "alpha3": "gsw",
    "bibliographic": "",
    "name": "Alemannic"
  },
  {
    "alpha2": "",
    "alpha3": "gsw",
    "bibliographic": "",
    "name": "Alsatian"
  },
  {
    "alpha2": "",
    "alpha3": "gsw",
    "bibliographic": "",
    "name": "Swiss German"
  },
  {
    "alpha2": "gu",
    "alpha3": "guj",
    "bibliographic": "",
    "name": "Gujarati"
  },
  {
    "alpha2": "",
    "alpha3": "gwi",
    "bibliographic": "",
    "name": "Gwich'in"
  },
  {
    "alpha2": "",
    "alpha3": "hai",
    "bibliographic": "",
    "name": "Haida"
  },
  {
    "alpha2": "ht",
    "alpha3": "hat",
    "bibliographic": "",
    "name": "Haitian"
  },
  {
    "alpha2": "ht",
    "alpha3": "hat",
    "bibliographic": "",
    "name": "Haitian Creole"
  },
  {
    "alpha2": "ha",
    "alpha3": "hau",
    "bibliographic": "",
    "name": "Hausa"
  },
  {
    "alpha2": "",
    "alpha3": "haw",
    "bibliographic": "",
    "name": "Hawaiian"
  },
  {
    "alpha2": "he",
    "alpha3": "heb",
    "bibliographic": "",
    "name": "Hebrew"
  },
  {
    "alpha2": "hz",
    "alpha3": "her",
    "bibliographic": "",
    "name": "Herero"
  },
  {
    "alpha2": "",
    "alpha3": "hil",
    "bibliographic": "",
    "name": "Hiligaynon"
  },
  {
    "alpha2": "",
    "alpha3": "him",
    "bibliographic": "",
    "name": "Himachali languages"
  },
  {
    "alpha2": "",
    "alpha3": "him",
    "bibliographic": "",
    "name": "Western Pahari languages"
  },
  {
    "alpha2": "hi",
    "alpha3": "hin",
    "bibliographic": "",
    "name": "Hindi"
  },
  {
    "alpha2": "",
    "alpha3": "hit",
    "bibliographic": "",
    "name": "Hittite"
  },
  {
    "alpha2": "",
    "alpha3": "hmn",
    "bibliographic": "",
    "name": "Hmong"
  },
  {
    "alpha2": "",
    "alpha3": "hmn",
    "bibliographic": "",
    "name": "Mong"
  },
  {
    "alpha2": "ho",
    "alpha3": "hmo",
    "bibliographic": "",
    "name": "Hiri Motu"
  },
  {
    "alpha2": "hr",
    "alpha3": "hrv",
    "bibliographic": "",
    "name": "Croatian"
  },
  {
    "alpha2": "",
    "alpha3": "hsb",
    "bibliographic": "",
    "name": "Upper Sorbian"
  },
  {
    "alpha2": "hu",
    "alpha3": "hun",
    "bibliographic": "",
    "name": "Hungarian"
  },
  {
    "alpha2": "",
    "alpha3": "hup",
    "bibliographic": "",
    "name": "Hupa"
  },
  {
    "alpha2": "hy",
    "alpha3": "hye",
    "bibliographic": "arm",
    "name": "Armenian"
  },
  {
    "alpha2": "",
    "alpha3": "iba",
    "bibliographic": "",
    "name": "Iban"
  },
  {
    "alpha2": "ig",
    "alpha3": "ibo",
    "bibliographic": "",
    "name": "Igbo"
  },
  {
    "alpha2": "io",
    "alpha3": "ido",
    "bibliographic": "",
    "name": "Ido"
  },
  {
    "alpha2": "ii",
    "alpha3": "iii",
    "bibliographic": "",
    "name": "Nuosu"
  },
  {
    "alpha2": "ii",
    "alpha3": "iii",
    "bibliographic": "",
    "name": "Sichuan Yi"
  },
  {
    "alpha2": "",
    "alpha3": "ijo",
    "bibliographic": "",
    "name": "Ijo languages"
  },
  {
    "alpha2": "iu",
    "alpha3": "iku",
    "bibliographic": "",
    "name": "Inuktitut"
  },
  {
    "alpha2": "ie",
    "alpha3": "ile",
    "bibliographic": "",
    "name": "Interlingue"
  },
  {
    "alpha2": "ie",
    "alpha3": "ile",
    "bibliographic": "",
    "name": "Occidental"
  },
  {
    "alpha2": "",
    "alpha3": "ilo",
    "bibliographic": "",
    "name": "Iloko"
  },
  {
    "alpha2": "ia",
    "alpha3": "ina",
    "bibliographic": "",
    "name": "Interlingua (International Auxiliary Language Association)"
  },
  {
    "alpha2": "",
    "alpha3": "inc",
    "bibliographic": "",
    "name": "Indic languages"
  },
  {
    "alpha2": "id",
    "alpha3": "ind",
    "bibliographic": "",
    "name": "Indonesian"
  },
  {
    "alpha2": "",
    "alpha3": "ine",
    "bibliographic": "",
    "name": "Indo-European languages"
  },
  {
    "alpha2": "",
    "alpha3": "inh",
    "bibliographic": "",
    "name": "Ingush"
  },
  {
    "alpha2": "ik",
    "alpha3": "ipk",
    "bibliographic": "",
    "name": "Inupiaq"
  },
  {
    "alpha2": "",
    "alpha3": "ira",
    "bibliographic": "",
    "name": "Iranian languages"
  },
  {
    "alpha2": "",
    "alpha3": "iro",
    "bibliographic": "",
    "name": "Iroquoian languages"
  },
  {
    "alpha2": "is",
    "alpha3": "isl",
    "bibliographic": "ice",
    "name": "Icelandic"
  },
  {
    "alpha2": "it",
    "alpha3": "ita",
    "bibliographic": "",
    "name": "Italian"
  },
  {
    "alpha2": "jv",
    "alpha3": "jav",
    "bibliographic": "",
    "name": "Javanese"
  },
  {
    "alpha2": "",
    "alpha3": "jbo",
    "bibliographic": "",
    "name": "Lojban"
  },
  {
    "alpha2": "ja",
    "alpha3": "jpn",
    "bibliographic": "",
    "name": "Japanese"
  },
  {
    "alpha2": "",
    "alpha3": "jpr",
    "bibliographic": "",
    "name": "Judeo-Persian"
  },
  {
    "alpha2": "",
    "alpha3": "jrb",
    "bibliographic": "",
    "name": "Judeo-Arabic"
  },
  {
    "alpha2": "",
    "alpha3": "kaa",
    "bibliographic": "",
    "name": "Kara-Kalpak"
  },
  {
    "alpha2": "",
    "alpha3": "kab",
    "bibliographic": "",
    "name": "Kabyle"
  },
  {
    "alpha2": "",
    "alpha3": "kac",
    "bibliographic": "",
    "name": "Jingpho"
  },
  {
    "alpha2": "",
    "alpha3": "kac",
    "bibliographic": "",
    "name": "Kachin"
  },
  {
    "alpha2": "kl",
    "alpha3": "kal",
    "bibliographic": "",
    "name": "Greenlandic"
  },
  {
    "alpha2": "kl",
    "alpha3": "kal",
    "bibliographic": "",
    "name": "Kalaallisut"
  },
  {
    "alpha2": "",
    "alpha3": "kam",
    "bibliographic": "",
    "name": "Kamba"
  },
  {
    "alpha2": "kn",
    "alpha3": "kan",
    "bibliographic": "",
    "name": "Kannada"
  },
  {
    "alpha2": "",
    "alpha3": "kar",
    "bibliographic": "",
    "name": "Karen languages"
  },
  {
    "alpha2": "ks",
    "alpha3": "kas",
    "bibliographic": "",
    "name": "Kashmiri"
  },
  {
    "alpha2": "ka",
    "alpha3": "kat",
    "bibliographic": "geo",
    "name": "Georgian"
  },
  {
    "alpha2": "kr",
    "alpha3": "kau",
    "bibliographic": "",
    "name": "Kanuri"
  },
  {
    "alpha2": "",
    "alpha3": "kaw",
    "bibliographic": "",
    "name": "Kawi"
  },
  {
    "alpha2": "kk",
    "alpha3": "kaz",
    "bibliographic": "",
    "name": "Kazakh"
  },
  {
    "alpha2": "",
    "alpha3": "kbd",
    "bibliographic": "",
    "name": "Kabardian"
  },
  {
    "alpha2": "",
    "alpha3": "kha",
    "bibliographic": "",
    "name": "Khasi"
  },
  {
    "alpha2": "",
    "alpha3": "khi",
    "bibliographic": "",
    "name": "Khoisan languages"
  },
  {
    "alpha2": "km",
    "alpha3": "khm",
    "bibliographic": "",
    "name": "Central Khmer"
  },
  {
    "alpha2": "",
    "alpha3": "kho",
    "bibliographic": "",
    "name": "Khotanese"
  },
  {
    "alpha2": "",
    "alpha3": "kho",
    "bibliographic": "",
    "name": "Sakan"
  },
  {
    "alpha2": "ki",
    "alpha3": "kik",
    "bibliographic": "",
    "name": "Gikuyu"
  },
  {
    "alpha2": "ki",
    "alpha3": "kik",
    "bibliographic": "",
    "name": "Kikuyu"
  },
  {
    "alpha2": "rw",
    "alpha3": "kin",
    "bibliographic": "",
    "name": "Kinyarwanda"
  },
  {
    "alpha2": "ky",
    "alpha3": "kir",
    "bibliographic": "",
    "name": "Kirghiz"
  },
  {
    "alpha2": "ky",
    "alpha3": "kir",
    "bibliographic": "",
    "name": "Kyrgyz"
  },
  {
    "alpha2": "",
    "alpha3": "kmb",
    "bibliographic": "",
    "name": "Kimbundu"
  },
  {
    "alpha2": "",
    "alpha3": "kok",
    "bibliographic": "",
    "name": "Konkani"
  },
  {
    "alpha2": "kv",
    "alpha3": "kom",
    "bibliographic": "",
    "name": "Komi"
  },
  {
    "alpha2": "kg",
    "alpha3": "kon",
    "bibliographic": "",
    "name": "Kongo"
  },
  {
    "alpha2": "ko",
    "alpha3": "kor",
    "bibliographic": "",
    "name": "Korean"
  },
  {
    "alpha2": "",
    "alpha3": "kos",
    "bibliographic": "",
    "name": "Kosraean"
  },
  {
    "alpha2": "",
    "alpha3": "kpe",
    "bibliographic": "",
    "name": "Kpelle"
  },
  {
    "alpha2": "",
    "alpha3": "krc",
    "bibliographic": "",
    "name": "Karachay-Balkar"
  },
  {
    "alpha2": "",
    "alpha3": "krl",
    "bibliographic": "",
    "name": "Karelian"
  },
  {
    "alpha2": "",
    "alpha3": "kro",
    "bibliographic": "",
    "name": "Kru languages"
  },
  {
    "alpha2": "",
    "alpha3": "kru",
    "bibliographic": "",
    "name": "Kurukh"
  },
  {
    "alpha2": "kj",
    "alpha3": "kua",
    "bibliographic": "",
    "name": "Kuanyama"
  },
  {
    "alpha2": "kj",
    "alpha3": "kua",
    "bibliographic": "",
    "name": "Kwanyama"
  },
  {
    "alpha2": "",
    "alpha3": "kum",
    "bibliographic": "",
    "name": "Kumyk"
  },
  {
    "alpha2": "ku",
    "alpha3": "kur",
    "bibliographic": "",
    "name": "Kurdish"
  },
  {
    "alpha2": "",
    "alpha3": "kut",
    "bibliographic": "",
    "name": "Kutenai"
  },
  {
    "alpha2": "",
    "alpha3": "lad",
    "bibliographic": "",
    "name": "Ladino"
  },
  {
    "alpha2": "",
    "alpha3": "lah",
    "bibliographic": "",
    "name": "Lahnda"
  },
  {
    "alpha2": "",
    "alpha3": "lam",
    "bibliographic": "",
    "name": "Lamba"
  },
  {
    "alpha2": "lo",
    "alpha3": "lao",
    "bibliographic": "",
    "name": "Lao"
  },
  {
    "alpha2": "la",
    "alpha3": "lat",
    "bibliographic": "",
    "name": "Latin"
  },
  {
    "alpha2": "lv",
    "alpha3": "lav",
    "bibliographic": "",
    "name": "Latvian"
  },
  {
    "alpha2": "",
    "alpha3": "lez",
    "bibliographic": "",
    "name": "Lezghian"
  },
  {
    "alpha2": "li",
    "alpha3": "lim",
    "bibliographic": "",
    "name": "Limburgan"
  },
  {
    "alpha2": "li",
    "alpha3": "lim",
    "bibliographic": "",
    "name": "Limburger"
  },
  {
    "alpha2": "li",
    "alpha3": "lim",
    "bibliographic": "",
    "name": "Limburgish"
  },
  {
    "alpha2": "ln",
    "alpha3": "lin",
    "bibliographic": "",
    "name": "Lingala"
  },
  {
    "alpha2": "lt",
    "alpha3": "lit",
    "bibliographic": "",
    "name": "Lithuanian"
  },
  {
    "alpha2": "",
    "alpha3": "lol",
    "bibliographic": "",
    "name": "Mongo"
  },
  {
    "alpha2": "",
    "alpha3": "loz",
    "bibliographic": "",
    "name": "Lozi"
  },
  {
    "alpha2": "lb",
    "alpha3": "ltz",
    "bibliographic": "",
    "name": "Letzeburgesch"
  },
  {
    "alpha2": "lb",
    "alpha3": "ltz",
    "bibliographic": "",
    "name": "Luxembourgish"
  },
  {
    "alpha2": "",
    "alpha3": "lua",
    "bibliographic": "",
    "name": "Luba-Lulua"
  },
  {
    "alpha2": "lu",
    "alpha3": "lub",
    "bibliographic": "",
    "name": "Luba-Katanga"
  },
  {
    "alpha2": "lg",
    "alpha3": "lug",
    "bibliographic": "",
    "name": "Ganda"
  },
  {
    "alpha2": "",
    "alpha3": "lui",
    "bibliographic": "",
    "name": "Luiseno"
  },
  {
    "alpha2": "",
    "alpha3": "lun",
    "bibliographic": "",
    "name": "Lunda"
  },
  {
    "alpha2": "",
    "alpha3": "luo",
    "bibliographic": "",
    "name": "Luo (Kenya and Tanzania)"
  },
  {
    "alpha2": "",
    "alpha3": "lus",
    "bibliographic": "",
    "name": "Lushai"
  },
  {
    "alpha2": "",
    "alpha3": "mad",
    "bibliographic": "",
    "name": "Madurese"
  },
  {
    "alpha2": "",
    "alpha3": "mag",
    "bibliographic": "",
    "name": "Magahi"
  },
  {
    "alpha2": "mh",
    "alpha3": "mah",
    "bibliographic": "",
    "name": "Marshallese"
  },
  {
    "alpha2": "",
    "alpha3": "mai",
    "bibliographic": "",
    "name": "Maithili"
  },
  {
    "alpha2": "",
    "alpha3": "mak",
    "bibliographic": "",
    "name": "Makasar"
  },
  {
    "alpha2": "ml",
    "alpha3": "mal",
    "bibliographic": "",
    "name": "Malayalam"
  },
  {
    "alpha2": "",
    "alpha3": "man",
    "bibliographic": "",
    "name": "Mandingo"
  },
  {
    "alpha2": "",
    "alpha3": "map",
    "bibliographic": "",
    "name": "Austronesian languages"
  },
  {
    "alpha2": "mr",
    "alpha3": "mar",
    "bibliographic": "",
    "name": "Marathi"
  },
  {
    "alpha2": "",
    "alpha3": "mas",
    "bibliographic": "",
    "name": "Masai"
  },
  {
    "alpha2": "",
    "alpha3": "mdf",
    "bibliographic": "",
    "name": "Moksha"
  },
  {
    "alpha2": "",
    "alpha3": "mdr",
    "bibliographic": "",
    "name": "Mandar"
  },
  {
    "alpha2": "",
    "alpha3": "men",
    "bibliographic": "",
    "name": "Mende"
  },
  {
    "alpha2": "",
    "alpha3": "mga",
    "bibliographic": "",
    "name": "Irish, Middle (900-1200)"
  },
  {
    "alpha2": "",
    "alpha3": "mic",
    "bibliographic": "",
    "name": "Mi'kmaq"
  },
  {
    "alpha2": "",
    "alpha3": "mic",
    "bibliographic": "",
    "name": "Micmac"
  },
  {
    "alpha2": "",
    "alpha3": "min",
    "bibliographic": "",
    "name": "Minangkabau"
  },
  {
    "alpha2": "",
    "alpha3": "mis",
    "bibliographic": "",
    "name": "Uncoded languages"
  },
  {
    "alpha2": "mk",
    "alpha3": "mkd",
    "bibliographic": "mac",
    "name": "Macedonian"
  },
  {
    "alpha2": "",
    "alpha3": "mkh",
    "bibliographic": "",
    "name": "Mon-Khmer languages"
  },
  {
    "alpha2": "mg",
    "alpha3": "mlg",
    "bibliographic": "",
    "name": "Malagasy"
  },
  {
    "alpha2": "mt",
    "alpha3": "mlt",
    "bibliographic": "",
    "name": "Maltese"
  },
  {
    "alpha2": "",
    "alpha3": "mnc",
    "bibliographic": "",
    "name": "Manchu"
  },
  {
    "alpha2": "",
    "alpha3": "mni",
    "bibliographic": "",
    "name": "Manipuri"
  },
  {
    "alpha2": "",
    "alpha3": "mno",
    "bibliographic": "",
    "name": "Manobo languages"
  },
  {
    "alpha2": "",
    "alpha3": "moh",
    "bibliographic": "",
    "name": "Mohawk"
  },
  {
    "alpha2": "mn",
    "alpha3": "mon",
    "bibliographic": "",
    "name": "Mongolian"
  },
  {
    "alpha2": "",
    "alpha3": "mos",
    "bibliographic": "",
    "name": "Mossi"
  },
  {
    "alpha2": "",
    "alpha3": "mot",
    "bibliographic": "",
    "name": "Montenegrin"
  },
  {
    "alpha2": "mi",
    "alpha3": "mri",
    "bibliographic": "mao",
    "name": "Maori"
  },
  {
    "alpha2": "ms",
    "alpha3": "msa",
    "bibliographic": "may",
    "name": "Malay"
  },
  {
    "alpha2": "",
    "alpha3": "mul",
    "bibliographic": "",
    "name": "Multiple languages"
  },
  {
    "alpha2": "",
    "alpha3": "mun",
    "bibliographic": "",
    "name": "Munda languages"
  },
  {
    "alpha2": "",
    "alpha3": "mus",
    "bibliographic": "",
    "name": "Creek"
  },
  {
    "alpha2": "",
    "alpha3": "mwl",
    "bibliographic": "",
    "name": "Mirandese"
  },
  {
    "alpha2": "",
    "alpha3": "mwr",
    "bibliographic": "",
    "name": "Marwari"
  },
  {
    "alpha2": "my",
    "alpha3": "mya",
    "bibliographic": "bur",
    "name": "Burmese"
  },
  {
    "alpha2": "",
    "alpha3": "myn",
    "bibliographic": "",
    "name": "Mayan languages"
  },
  {
    "alpha2": "",
    "alpha3": "myv",
    "bibliographic": "",
    "name": "Erzya"
  },
  {
    "alpha2": "",
    "alpha3": "nah",
    "bibliographic": "",
    "name": "Nahuatl languages"
  },
  {
    "alpha2": "",
    "alpha3": "nai",
    "bibliographic": "",
    "name": "North American Indian languages"
  },
  {
    "alpha2": "",
    "alpha3": "nap",
    "bibliographic": "",
    "name": "Neapolitan"
  },
  {
    "alpha2": "na",
    "alpha3": "nau",
    "bibliographic": "",
    "name": "Nauru"
  },
  {
    "alpha2": "nv",
    "alpha3": "nav",
    "bibliographic": "",
    "name": "Navaho"
  },
  {
    "alpha2": "nv",
    "alpha3": "nav",
    "bibliographic": "",
    "name": "Navajo"
  },
  {
    "alpha2": "nr",
    "alpha3": "nbl",
    "bibliographic": "",
    "name": "Ndebele, South"
  },
  {
    "alpha2": "nr",
    "alpha3": "nbl",
    "bibliographic": "",
    "name": "South Ndebele"
  },
  {
    "alpha2": "nd",
    "alpha3": "nde",
    "bibliographic": "",
    "name": "Ndebele, North"
  },
  {
    "alpha2": "nd",
    "alpha3": "nde",
    "bibliographic": "",
    "name": "North Ndebele"
  },
  {
    "alpha2": "ng",
    "alpha3": "ndo",
    "bibliographic": "",
    "name": "Ndonga"
  },
  {
    "alpha2": "",
    "alpha3": "nds",
    "bibliographic": "",
    "name": "German, Low"
  },
  {
    "alpha2": "",
    "alpha3": "nds",
    "bibliographic": "",
    "name": "Low German"
  },
  {
    "alpha2": "",
    "alpha3": "nds",
    "bibliographic": "",
    "name": "Low Saxon"
  },
  {
    "alpha2": "",
    "alpha3": "nds",
    "bibliographic": "",
    "name": "Saxon, Low"
  },
  {
    "alpha2": "ne",
    "alpha3": "nep",
    "bibliographic": "",
    "name": "Nepali"
  },
  {
    "alpha2": "",
    "alpha3": "new",
    "bibliographic": "",
    "name": "Nepal Bhasa"
  },
  {
    "alpha2": "",
    "alpha3": "new",
    "bibliographic": "",
    "name": "Newari"
  },
  {
    "alpha2": "",
    "alpha3": "nia",
    "bibliographic": "",
    "name": "Nias"
  },
  {
    "alpha2": "",
    "alpha3": "nic",
    "bibliographic": "",
    "name": "Niger-Kordofanian languages"
  },
  {
    "alpha2": "",
    "alpha3": "niu",
    "bibliographic": "",
    "name": "Niuean"
  },
  {
    "alpha2": "nl",
    "alpha3": "nld",
    "bibliographic": "dut",
    "name": "Dutch"
  },
  {
    "alpha2": "nl",
    "alpha3": "nld",
    "bibliographic": "dut",
    "name": "Flemish"
  },
  {
    "alpha2": "nn",
    "alpha3": "nno",
    "bibliographic": "",
    "name": "Norwegian Nynorsk"
  },
  {
    "alpha2": "nn",
    "alpha3": "nno",
    "bibliographic": "",
    "name": "Nynorsk, Norwegian"
  },
  {
    "alpha2": "nb",
    "alpha3": "nob",
    "bibliographic": "",
    "name": "Bokmål, Norwegian"
  },
  {
    "alpha2": "nb",
    "alpha3": "nob",
    "bibliographic": "",
    "name": "Norwegian Bokmål"
  },
  {
    "alpha2": "",
    "alpha3": "nog",
    "bibliographic": "",
    "name": "Nogai"
  },
  {
    "alpha2": "",
    "alpha3": "non",
    "bibliographic": "",
    "name": "Norse, Old"
  },
  {
    "alpha2": "no",
    "alpha3": "nor",
    "bibliographic": "",
    "name": "Norwegian"
  },
  {
    "alpha2": "",
    "alpha3": "nqo",
    "bibliographic": "",
    "name": "N'Ko"
  },
  {
    "alpha2": "",
    "alpha3": "nso",
    "bibliographic": "",
    "name": "Northern Sotho"
  },
  {
    "alpha2": "",
    "alpha3": "nso",
    "bibliographic": "",
    "name": "Pedi"
  },
  {
    "alpha2": "",
    "alpha3": "nso",
    "bibliographic": "",
    "name": "Sepedi"
  },
  {
    "alpha2": "",
    "alpha3": "nso",
    "bibliographic": "",
    "name": "Sotho, Northern"
  },
  {
    "alpha2": "",
    "alpha3": "nub",
    "bibliographic": "",
    "name": "Nubian languages"
  },
  {
    "alpha2": "",
    "alpha3": "nwc",
    "bibliographic": "",
    "name": "Classical Nepal Bhasa"
  },
  {
    "alpha2": "",
    "alpha3": "nwc",
    "bibliographic": "",
    "name": "Classical Newari"
  },
  {
    "alpha2": "",
    "alpha3": "nwc",
    "bibliographic": "",
    "name": "Old Newari"
  },
  {
    "alpha2": "ny",
    "alpha3": "nya",
    "bibliographic": "",
    "name": "Chewa"
  },
  {
    "alpha2": "ny",
    "alpha3": "nya",
    "bibliographic": "",
    "name": "Chichewa"
  },
  {
    "alpha2": "ny",
    "alpha3": "nya",
    "bibliographic": "",
    "name": "Nyanja"
  },
  {
    "alpha2": "",
    "alpha3": "nym",
    "bibliographic": "",
    "name": "Nyamwezi"
  },
  {
    "alpha2": "",
    "alpha3": "nyn",
    "bibliographic": "",
    "name": "Nyankole"
  },
  {
    "alpha2": "",
    "alpha3": "nyo",
    "bibliographic": "",
    "name": "Nyoro"
  },
  {
    "alpha2": "",
    "alpha3": "nzi",
    "bibliographic": "",
    "name": "Nzima"
  },
  {
    "alpha2": "oc",
    "alpha3": "oci",
    "bibliographic": "",
    "name": "Occitan (post 1500)"
  },
  {
    "alpha2": "oj",
    "alpha3": "oji",
    "bibliographic": "",
    "name": "Ojibwa"
  },
  {
    "alpha2": "or",
    "alpha3": "ori",
    "bibliographic": "",
    "name": "Oriya"
  },
  {
    "alpha2": "om",
    "alpha3": "orm",
    "bibliographic": "",
    "name": "Oromo"
  },
  {
    "alpha2": "",
    "alpha3": "osa",
    "bibliographic": "",
    "name": "Osage"
  },
  {
    "alpha2": "os",
    "alpha3": "oss",
    "bibliographic": "",
    "name": "Ossetian"
  },
  {
    "alpha2": "os",
    "alpha3": "oss",
    "bibliographic": "",
    "name": "Ossetic"
  },
  {
    "alpha2": "",
    "alpha3": "ota",
    "bibliographic": "",
    "name": "Turkish, Ottoman (1500-1928)"
  },
  {
    "alpha2": "",
    "alpha3": "oto",
    "bibliographic": "",
    "name": "Otomian languages"
  },
  {
    "alpha2": "",
    "alpha3": "paa",
    "bibliographic": "",
    "name": "Papuan languages"
  },
  {
    "alpha2": "",
    "alpha3": "pag",
    "bibliographic": "",
    "name": "Pangasinan"
  },
  {
    "alpha2": "",
    "alpha3": "pal",
    "bibliographic": "",
    "name": "Pahlavi"
  },
  {
    "alpha2": "",
    "alpha3": "pam",
    "bibliographic": "",
    "name": "Kapampangan"
  },
  {
    "alpha2": "",
    "alpha3": "pam",
    "bibliographic": "",
    "name": "Pampanga"
  },
  {
    "alpha2": "pa",
    "alpha3": "pan",
    "bibliographic": "",
    "name": "Panjabi"
  },
  {
    "alpha2": "pa",
    "alpha3": "pan",
    "bibliographic": "",
    "name": "Punjabi"
  },
  {
    "alpha2": "",
    "alpha3": "pap",
    "bibliographic": "",
    "name": "Papiamento"
  },
  {
    "alpha2": "",
    "alpha3": "pau",
    "bibliographic": "",
    "name": "Palauan"
  },
  {
    "alpha2": "",
    "alpha3": "peo",
    "bibliographic": "",
    "name": "Persian, Old (ca.600-400 B.C.)"
  },
  {
    "alpha2": "",
    "alpha3": "phi",
    "bibliographic": "",
    "name": "Philippine languages"
  },
  {
    "alpha2": "",
    "alpha3": "phn",
    "bibliographic": "",
    "name": "Phoenician"
  },
  {
    "alpha2": "pi",
    "alpha3": "pli",
    "bibliographic": "",
    "name": "Pali"
  },
  {
    "alpha2": "pl",
    "alpha3": "pol",
    "bibliographic": "",
    "name": "Polish"
  },
  {
    "alpha2": "",
    "alpha3": "pon",
    "bibliographic": "",
    "name": "Pohnpeian"
  },
  {
    "alpha2": "pt",
    "alpha3": "por",
    "bibliographic": "",
    "name": "Portuguese"
  },
  {
    "alpha2": "",
    "alpha3": "pra",
    "bibliographic": "",
    "name": "Prakrit languages"
  },
  {
    "alpha2": "",
    "alpha3": "pro",
    "bibliographic": "",
    "name": "Occitan, Old (to 1500)"
  },
  {
    "alpha2": "",
    "alpha3": "pro",
    "bibliographic": "",
    "name": "Provençal, Old (to 1500)"
  },
  {
    "alpha2": "ps",
    "alpha3": "pus",
    "bibliographic": "",
    "name": "Pashto"
  },
  {
    "alpha2": "ps",
    "alpha3": "pus",
    "bibliographic": "",
    "name": "Pushto"
  },
  {
    "alpha2": "qu",
    "alpha3": "que",
    "bibliographic": "",
    "name": "Quechua"
  },
  {
    "alpha2": "",
    "alpha3": "raj",
    "bibliographic": "",
    "name": "Rajasthani"
  },
  {
    "alpha2": "",
    "alpha3": "rap",
    "bibliographic": "",
    "name": "Rapanui"
  },
  {
    "alpha2": "",
    "alpha3": "rar",
    "bibliographic": "",
    "name": "Cook Islands Maori"
  },
  {
    "alpha2": "",
    "alpha3": "rar",
    "bibliographic": "",
    "name": "Rarotongan"
  },
  {
    "alpha2": "",
    "alpha3": "roa",
    "bibliographic": "",
    "name": "Romance languages"
  },
  {
    "alpha2": "rm",
    "alpha3": "roh",
    "bibliographic": "",
    "name": "Romansh"
  },
  {
    "alpha2": "",
    "alpha3": "rom",
    "bibliographic": "",
    "name": "Romany"
  },
  {
    "alpha2": "ro",
    "alpha3": "ron",
    "bibliographic": "rum",
    "name": "Moldavian"
  },
  {
    "alpha2": "ro",
    "alpha3": "ron",
    "bibliographic": "rum",
    "name": "Romanian"
  },
  {
    "alpha2": "rn",
    "alpha3": "run",
    "bibliographic": "",
    "name": "Rundi"
  },
  {
    "alpha2": "",
    "alpha3": "rup",
    "bibliographic": "",
    "name": "Aromanian"
  },
  {
    "alpha2": "",
    "alpha3": "rup",
    "bibliographic": "",
    "name": "Arumanian"
  },
  {
    "alpha2": "",
    "alpha3": "rup",
    "bibliographic": "",
    "name": "Macedo-Romanian"
  },
  {
    "alpha2": "ru",
    "alpha3": "rus",
    "bibliographic": "",
    "name": "Russian"
  },
  {
    "alpha2": "",
    "alpha3": "sad",
    "bibliographic": "",
    "name": "Sandawe"
  },
  {
    "alpha2": "sg",
    "alpha3": "sag",
    "bibliographic": "",
    "name": "Sango"
  },
  {
    "alpha2": "",
    "alpha3": "sah",
    "bibliographic": "",
    "name": "Yakut"
  },
  {
    "alpha2": "",
    "alpha3": "sai",
    "bibliographic": "",
    "name": "South American Indian languages"
  },
  {
    "alpha2": "",
    "alpha3": "sal",
    "bibliographic": "",
    "name": "Salishan languages"
  },
  {
    "alpha2": "",
    "alpha3": "sam",
    "bibliographic": "",
    "name": "Samaritan Aramaic"
  },
  {
    "alpha2": "sa",
    "alpha3": "san",
    "bibliographic": "",
    "name": "Sanskrit"
  },
  {
    "alpha2": "",
    "alpha3": "sas",
    "bibliographic": "",
    "name": "Sasak"
  },
  {
    "alpha2": "",
    "alpha3": "sat",
    "bibliographic": "",
    "name": "Santali"
  },
  {
    "alpha2": "",
    "alpha3": "scn",
    "bibliographic": "",
    "name": "Sicilian"
  },
  {
    "alpha2": "",
    "alpha3": "sco",
    "bibliographic": "",
    "name": "Scots"
  },
  {
    "alpha2": "",
    "alpha3": "sel",
    "bibliographic": "",
    "name": "Selkup"
  },
  {
    "alpha2": "",
    "alpha3": "sem",
    "bibliographic": "",
    "name": "Semitic languages"
  },
  {
    "alpha2": "",
    "alpha3": "sga",
    "bibliographic": "",
    "name": "Irish, Old (to 900)"
  },
  {
    "alpha2": "",
    "alpha3": "sgn",
    "bibliographic": "",
    "name": "Sign Languages"
  },
  {
    "alpha2": "",
    "alpha3": "shn",
    "bibliographic": "",
    "name": "Shan"
  },
  {
    "alpha2": "",
    "alpha3": "sid",
    "bibliographic": "",
    "name": "Sidamo"
  },
  {
    "alpha2": "si",
    "alpha3": "sin",
    "bibliographic": "",
    "name": "Sinhala"
  },
  {
    "alpha2": "si",
    "alpha3": "sin",
    "bibliographic": "",
    "name": "Sinhalese"
  },
  {
    "alpha2": "",
    "alpha3": "sio",
    "bibliographic": "",
    "name": "Siouan languages"
  },
  {
    "alpha2": "",
    "alpha3": "sit",
    "bibliographic": "",
    "name": "Sino-Tibetan languages"
  },
  {
    "alpha2": "",
    "alpha3": "sla",
    "bibliographic": "",
    "name": "Slavic languages"
  },
  {
    "alpha2": "sk",
    "alpha3": "slk",
    "bibliographic": "slo",
    "name": "Slovak"
  },
  {
    "alpha2": "sl",
    "alpha3": "slv",
    "bibliographic": "",
    "name": "Slovenian"
  },
  {
    "alpha2": "",
    "alpha3": "sma",
    "bibliographic": "",
    "name": "Southern Sami"
  },
  {
    "alpha2": "se",
    "alpha3": "sme",
    "bibliographic": "",
    "name": "Northern Sami"
  },
  {
    "alpha2": "",
    "alpha3": "smi",
    "bibliographic": "",
    "name": "Sami languages"
  },
  {
    "alpha2": "",
    "alpha3": "smj",
    "bibliographic": "",
    "name": "Lule Sami"
  },
  {
    "alpha2": "",
    "alpha3": "smn",
    "bibliographic": "",
    "name": "Inari Sami"
  },
  {
    "alpha2": "sm",
    "alpha3": "smo",
    "bibliographic": "",
    "name": "Samoan"
  },
  {
    "alpha2": "",
    "alpha3": "sms",
    "bibliographic": "",
    "name": "Skolt Sami"
  },
  {
    "alpha2": "sn",
    "alpha3": "sna",
    "bibliographic": "",
    "name": "Shona"
  },
  {
    "alpha2": "sd",
    "alpha3": "snd",
    "bibliographic": "",
    "name": "Sindhi"
  },
  {
    "alpha2": "",
    "alpha3": "snk",
    "bibliographic": "",
    "name": "Soninke"
  },
  {
    "alpha2": "",
    "alpha3": "sog",
    "bibliographic": "",
    "name": "Sogdian"
  },
  {
    "alpha2": "so",
    "alpha3": "som",
    "bibliographic": "",
    "name": "Somali"
  },
  {
    "alpha2": "",
    "alpha3": "son",
    "bibliographic": "",
    "name": "Songhai languages"
  },
  {
    "alpha2": "st",
    "alpha3": "sot",
    "bibliographic": "",
    "name": "Sotho, Southern"
  },
  {
    "alpha2": "es",
    "alpha3": "spa",
    "bibliographic": "",
    "name": "Castilian"
  },
  {
    "alpha2": "es",
    "alpha3": "spa",
    "bibliographic": "",
    "name": "Spanish"
  },
  {
    "alpha2": "sq",
    "alpha3": "sqi",
    "bibliographic": "alb",
    "name": "Albanian"
  },
  {
    "alpha2": "sc",
    "alpha3": "srd",
    "bibliographic": "",
    "name": "Sardinian"
  },
  {
    "alpha2": "",
    "alpha3": "srn",
    "bibliographic": "",
    "name": "Sranan Tongo"
  },
  {
    "alpha2": "sr",
    "alpha3": "srp",
    "bibliographic": "",
    "name": "Serbian"
  },
  {
    "alpha2": "",
    "alpha3": "srr",
    "bibliographic": "",
    "name": "Serer"
  },
  {
    "alpha2": "",
    "alpha3": "ssa",
    "bibliographic": "",
    "name": "Nilo-Saharan languages"
  },
  {
    "alpha2": "ss",
    "alpha3": "ssw",
    "bibliographic": "",
    "name": "Swati"
  },
  {
    "alpha2": "",
    "alpha3": "suk",
    "bibliographic": "",
    "name": "Sukuma"
  },
  {
    "alpha2": "su",
    "alpha3": "sun",
    "bibliographic": "",
    "name": "Sundanese"
  },
  {
    "alpha2": "",
    "alpha3": "sus",
    "bibliographic": "",
    "name": "Susu"
  },
  {
    "alpha2": "",
    "alpha3": "sux",
    "bibliographic": "",
    "name": "Sumerian"
  },
  {
    "alpha2": "sw",
    "alpha3": "swa",
    "bibliographic": "",
    "name": "Swahili"
  },
  {
    "alpha2": "sv",
    "alpha3": "swe",
    "bibliographic": "",
    "name": "Swedish"
  },
  {
    "alpha2": "",
    "alpha3": "syc",
    "bibliographic": "",
    "name": "Classical Syriac"
  },
  {
    "alpha2": "",
    "alpha3": "syr",
    "bibliographic": "",
    "name": "Syriac"
  },
  {
    "alpha2": "ty",
    "alpha3": "tah",
    "bibliographic": "",
    "name": "Tahitian"
  },
  {
    "alpha2": "",
    "alpha3": "tai",
    "bibliographic": "",
    "name": "Tai languages"
  },
  {
    "alpha2": "ta",
    "alpha3": "tam",
    "bibliographic": "",
    "name": "Tamil"
  },
  {
    "alpha2": "tt",
    "alpha3": "tat",
    "bibliographic": "",
    "name": "Tatar"
  },
  {
    "alpha2": "te",
    "alpha3": "tel",
    "bibliographic": "",
    "name": "Telugu"
  },
  {
    "alpha2": "",
    "alpha3": "tem",
    "bibliographic": "",
    "name": "Timne"
  },
  {
    "alpha2": "",
    "alpha3": "ter",
    "bibliographic": "",
    "name": "Tereno"
  },
  {
    "alpha2": "",
    "alpha3": "tet",
    "bibliographic": "",
    "name": "Tetum"
  },
  {
    "alpha2": "tg",
    "alpha3": "tgk",
    "bibliographic": "",
    "name": "Tajik"
  },
  {
    "alpha2": "tl",
    "alpha3": "tgl",
    "bibliographic": "",
    "name": "Tagalog"
  },
  {
    "alpha2": "th",
    "alpha3": "tha",
    "bibliographic": "",
    "name": "Thai"
  },
  {
    "alpha2": "",
    "alpha3": "tig",
    "bibliographic": "",
    "name": "Tigre"
  },
  {
    "alpha2": "ti",
    "alpha3": "tir",
    "bibliographic": "",
    "name": "Tigrinya"
  },
  {
    "alpha2": "",
    "alpha3": "tiv",
    "bibliographic": "",
    "name": "Tiv"
  },
  {
    "alpha2": "",
    "alpha3": "tkl",
    "bibliographic": "",
    "name": "Tokelau"
  },
  {
    "alpha2": "",
    "alpha3": "tlh",
    "bibliographic": "",
    "name": "Klingon"
  },
  {
    "alpha2": "",
    "alpha3": "tlh",
    "bibliographic": "",
    "name": "tlhIngan-Hol"
  },
  {
    "alpha2": "",
    "alpha3": "tli",
    "bibliographic": "",
    "name": "Tlingit"
  },
  {
    "alpha2": "",
    "alpha3": "tmh",
    "bibliographic": "",
    "name": "Tamashek"
  },
  {
    "alpha2": "",
    "alpha3": "tog",
    "bibliographic": "",
    "name": "Tonga (Nyasa)"
  },
  {
    "alpha2": "to",
    "alpha3": "ton",
    "bibliographic": "",
    "name": "Tonga (Tonga Islands)"
  },
  {
    "alpha2": "",
    "alpha3": "tpi",
    "bibliographic": "",
    "name": "Tok Pisin"
  },
  {
    "alpha2": "",
    "alpha3": "tsi",
    "bibliographic": "",
    "name": "Tsimshian"
  },
  {
    "alpha2": "tn",
    "alpha3": "tsn",
    "bibliographic": "",
    "name": "Tswana"
  },
  {
    "alpha2": "ts",
    "alpha3": "tso",
    "bibliographic": "",
    "name": "Tsonga"
  },
  {
    "alpha2": "tk",
    "alpha3": "tuk",
    "bibliographic": "",
    "name": "Turkmen"
  },
  {
    "alpha2": "",
    "alpha3": "tum",
    "bibliographic": "",
    "name": "Tumbuka"
  },
  {
    "alpha2": "",
    "alpha3": "tup",
    "bibliographic": "",
    "name": "Tupi languages"
  },
  {
    "alpha2": "tr",
    "alpha3": "tur",
    "bibliographic": "",
    "name": "Turkish"
  },
  {
    "alpha2": "",
    "alpha3": "tut",
    "bibliographic": "",
    "name": "Altaic languages"
  },
  {
    "alpha2": "",
    "alpha3": "tvl",
    "bibliographic": "",
    "name": "Tuvalu"
  },
  {
    "alpha2": "tw",
    "alpha3": "twi",
    "bibliographic": "",
    "name": "Twi"
  },
  {
    "alpha2": "",
    "alpha3": "tyv",
    "bibliographic": "",
    "name": "Tuvinian"
  },
  {
    "alpha2": "",
    "alpha3": "udm",
    "bibliographic": "",
    "name": "Udmurt"
  },
  {
    "alpha2": "",
    "alpha3": "uga",
    "bibliographic": "",
    "name": "Ugaritic"
  },
  {
    "alpha2": "ug",
    "alpha3": "uig",
    "bibliographic": "",
    "name": "Uighur"
  },
  {
    "alpha2": "ug",
    "alpha3": "uig",
    "bibliographic": "",
    "name": "Uyghur"
  },
  {
    "alpha2": "uk",
    "alpha3": "ukr",
    "bibliographic": "",
    "name": "Ukrainian"
  },
  {
    "alpha2": "",
    "alpha3": "umb",
    "bibliographic": "",
    "name": "Umbundu"
  },
  {
    "alpha2": "",
    "alpha3": "und",
    "bibliographic": "",
    "name": "Undetermined"
  },
  {
    "alpha2": "ur",
    "alpha3": "urd",
    "bibliographic": "",
    "name": "Urdu"
  },
  {
    "alpha2": "uz",
    "alpha3": "uzb",
    "bibliographic": "",
    "name": "Uzbek"
  },
  {
    "alpha2": "",
    "alpha3": "vai",
    "bibliographic": "",
    "name": "Vai"
  },
  {
    "alpha2": "ve",
    "alpha3": "ven",
    "bibliographic": "",
    "name": "Venda"
  },
  {
    "alpha2": "vi",
    "alpha3": "vie",
    "bibliographic": "",
    "name": "Vietnamese"
  },
  {
    "alpha2": "vo",
    "alpha3": "vol",
    "bibliographic": "",
    "name": "Volapük"
  },
  {
    "alpha2": "",
    "alpha3": "vot",
    "bibliographic": "",
    "name": "Votic"
  },
  {
    "alpha2": "",
    "alpha3": "wak",
    "bibliographic": "",
    "name": "Wakashan languages"
  },
  {
    "alpha2": "",
    "alpha3": "wal",
    "bibliographic": "",
    "name": "Wolaitta"
  },
  {
    "alpha2": "",
    "alpha3": "wal",
    "bibliographic": "",
    "name": "Wolaytta"
  },
  {
    "alpha2": "",
    "alpha3": "war",
    "bibliographic": "",
    "name": "Waray"
  },
  {
    "alpha2": "",
    "alpha3": "was",
    "bibliographic": "",
    "name": "Washo"
  },
  {
    "alpha2": "",
    "alpha3": "wen",
    "bibliographic": "",
    "name": "Sorbian languages"
  },
  {
    "alpha2": "wa",
    "alpha3": "wln",
    "bibliographic": "",
    "name": "Walloon"
  },
  {
    "alpha2": "wo",
    "alpha3": "wol",
    "bibliographic": "",
    "name": "Wolof"
  },
  {
    "alpha2": "",
    "alpha3": "xal",
    "bibliographic": "",
    "name": "Kalmyk"
  },
  {
    "alpha2": "",
    "alpha3": "xal",
    "bibliographic": "",
    "name": "Oirat"
  },
  {
    "alpha2": "xh",
    "alpha3": "xho",
    "bibliographic": "",
    "name": "Xhosa"
  },
  {
    "alpha2": "",
    "alpha3": "yao",
    "bibliographic": "",
    "name": "Yao"
  },
  {
    "alpha2": "",
    "alpha3": "yap",
    "bibliographic": "",
    "name": "Yapese"
  },
  {
    "alpha2": "yi",
    "alpha3": "yid",
    "bibliographic": "",
    "name": "Yiddish"
  },
  {
    "alpha2": "yo",
    "alpha3": "yor",
    "bibliographic": "",
    "name": "Yoruba"
  },
  {
    "alpha2": "",
    "alpha3": "ypk",
    "bibliographic": "",
    "name": "Yupik languages"
  },
  {
    "alpha2": "",
    "alpha3": "zap",
    "bibliographic": "",
    "name": "Zapotec"
  },
  {
    "alpha2": "",
    "alpha3": "zbl",
    "bibliographic": "",
    "name": "Bliss"
  },
  {
    "alpha2": "",
    "alpha3": "zbl",
    "bibliographic": "",
    "name": "Blissymbolics"
  },
  {
    "alpha2": "",
    "alpha3": "zbl",
    "bibliographic": "",
    "name": "Blissymbols"
  },
  {
    "alpha2": "",
    "alpha3": "zen",
    "bibliographic": "",
    "name": "Zenaga"
  },
  {
    "alpha2": "",
    "alpha3": "zgh",
    "bibliographic": "",
    "name": "Standard Moroccan Tamazight"
  },
  {
    "alpha2": "za",
    "alpha3": "zha",
    "bibliographic": "",
    "name": "Chuang"
  },
  {
    "alpha2": "za",
    "alpha3": "zha",
    "bibliographic": "",
    "name": "Zhuang"
  },
  {
    "alpha2": "zh",
    "alpha3": "zho",
    "bibliographic": "chi",
    "name": "Chinese"
  },
  {
    "alpha2": "",
    "alpha3": "znd",
    "bibliographic": "",
    "name": "Zande languages"
  },
  {
    "alpha2": "zu",
    "alpha3": "zul",
    "bibliographic": "",
    "name": "Zulu"
  },
  {
    "alpha2": "",
    "alpha3": "zun",
    "bibliographic": "",
    "name": "Zuni"
  },
  {
    "alpha2": "",
    "alpha3": "zxx",
    "bibliographic": "",
    "name": "No linguistic content"
  },
  {
    "alpha2": "",
    "alpha3": "zxx",
    "bibliographic": "",
    "name": "Not applicable"
  },
  {
    "alpha2": "",
    "alpha3": "zza",
    "bibliographic": "",
    "name": "Dimili"
  },
  {
    "alpha2": "",
    "alpha3": "zza",
    "bibliographic": "",
    "name": "Dimli"
  },
  {
    "alpha2": "",
    "alpha3": "zza",
    "bibliographic": "",
    "name": "Kirdki"
  },
  {
    "alpha2": "",
    "alpha3": "zza",
    "bibliographic": "",
    "name": "Kirmanjki"
  },
  {
    "alpha2": "",
    "alpha3": "zza",
    "bibliographic": "",
    "name": "Zaza"
  },
  {
    "alpha2": "",
    "alpha3": "zza",
    "bibliographic": "",
    "name": "Zazaki"
  }
]

},{}],5:[function(require,module,exports){
"use strict";

var _ = require("underscore");
var regions = {};

regions.centralAsia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Central_Asia
    'KZ', // Kazakhstan
    'KG', // Kyrgyzstan
    'TJ', // Tajikistan
    'TM', // Turkmenistan
    'UZ', // Uzbekistan
  ]
}

regions.southernAsia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/South_Asia
    'AF', // Afghanistan
    'BD', // Bangladesh
    'BT', // Bhutan
    'IO', // British Indian Ocean Territory
    'IN', // India
    'IR', // Iran
    'MV', // Maldives
    'NP', // Nepal
    'PK', // Pakistan
    'LK', // Sri Lanka
  ]
}

regions.southeastAsia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Southeast_Asia
    'BN', // Brunei
    'KH', // Cambodia
    'CX', // Christmas Island
    'CC', // Cocos (Keeling) Islands
    'TL', // East Timor
    'ID', // Indonesia
    'LA', // Laos
    'MY', // Malaysia
    'MM', // Myanmar (Burma)
    'PH', // Philippines
    'SG', // Singapore
    'TH', // Thailand
    'VN', // Vietnam
  ]
}

regions.eastAsia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/East_Asia
    'CN', // China
    'HK', // Hong Kong
    'JP', // Japan
    'KP', // North Korea
    'KR', // South Korea
    'MO', // Macao
    'MN', // Mongolia
    'TW', // Taiwan
  ]
}

regions.westernAsia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Western_Asia
    'AM', // Armenia
    'AZ', // Azerbaijan
    'BH', // Bahrain
    'IQ', // Iraq
    'IL', // Israel
    'JO', // Jordan
    'KW', // Kuwait
    'LB', // Lebanon
    'OM', // Oman
    'PS', // Palestinian territories
    'QA', // Qatar
    'SA', // Saudi Arabia
    'SY', // Syria
    'TR', // Turkey
    'AE', // United Arab Emirates
    'YE', // Yemen
  ]
}

regions.asia = {
  'asia': {
    countries: _.flatten([
      regions.centralAsia.countries,
      regions.southernAsia.countries,
      regions.southeastAsia.countries,
      regions.eastAsia.countries,
      regions.westernAsia.countries,
    ])
    .sort()
  }
};

regions.centralAfrica = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Central_Africa
    'AO', // Angola
    'CM', // Cameroon
    'CF', // Central African Republic
    'TD', // Chad
    'CG', // Republic of the Congo
    'CD', // Democratic Republic of the Congo
    'GQ', // Equatorial Guinea
    'GA', // Gabon
    'ST', // São Tomé and Príncipe
  ]
};

regions.northAfrica = {
  countries: [
    // source is http://en.wikipedia.org/wiki/North_Africa
    'DZ', // Algeria
    'EG', // Egypt
    'LY', // Libya
    'MA', // Morocco
    'SD', // Sudan
    'TN', // Tunisia
    'EH', // Western Sahara
  ]
};

regions.southernAfrica = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Southern_Africa
    'BW', // Botswana
    'LS', // Lesotho
    'NA', // Namibia
    'ZA', // South Africa
    'SZ', // Swaziland
  ]
};

regions.eastAfrica = {
  countries: [
    // source is http://en.wikipedia.org/wiki/East_Africa
    'BI', // Burundi
    'KM', // Comoros
    'DJ', // Djibouti
    'ER', // Eritrea
    'ET', // Ethiopia
    'KE', // Kenya
    'MG', // Madagascar
    'MW', // Malawi
    'MU', // Mauritius
    'YT', // Mayotte (France)
    'MZ', // Mozambique
    'RE', // Réunion (France)
    'RW', // Rwanda
    'SC', // Seychelles
    'SO', // Somalia
    'SS', // South Sudan
    'TZ', // Tanzania
    'UG', // Uganda
    'ZM', // Zambia
    'ZW', // Zimbabwe
  ]
};

regions.westAfrica = {
  countries: [
    // source is http://en.wikipedia.org/wiki/West_Africa
    'BJ', // Benin
    'BF', // Burkina Faso
    'CV', // Cabo Verde
    'CI', // Côte d'Ivoire
    'GM', // Gambia
    'GH', // Ghana
    'GN', // Guinea
    'GW', // Guinea-Bissau
    'LR', // Liberia
    'ML', // Mali
    'MR', // Mauritania
    'NE', // Niger
    'NG', // Nigeria
    'SH', // Saint Helena, Ascension and Tristan da Cunha (United Kingdom)
    'SN', // Senegal
    'SL', // Sierra Leone
    'TG', // Togo
  ]
};

regions.africa = {
  'africa': {
    countries: _.flatten([
        regions.centralAfrica.countries,
        regions.northAfrica.countries,
        regions.southernAfrica.countries,
        regions.eastAfrica.countries,
        regions.westAfrica.countries
    ])
    .sort()
  }
};

regions.centralAmerica = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Central_America
    'BZ', // Belize
    'CR', // Costa Rica
    'SV', // El Salvador
    'GT', // Guatemala
    'HN', // Honduras
    'NI', // Nicaragua
    'PA', // Panama
  ]
}

regions.northernAmerica = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Northern_America
    'BM', // Bermuda
    'CA', // Canada
    'GL', // Greenland
    'MX', // Mexico
    'PM', // Saint Pierre and Miquelon
    'US', // United States
  ]
}

regions.caribbean = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Caribbean
    'AI', // Anguilla
    'AG', // Antigua and Barbuda
    'AW', // Aruba
    'BS', // Bahamas
    'BB', // Barbados
    'BQ', // Bonaire, Sint Eustatius & Saba
    'VG', // British Virgin Islands
    'KY', // Cayman Islands
    'CU', // Cuba
    'CW', // Curaçao
    'DM', // Dominica
    'DO', // Dominican Republic
    'GD', // Grenada
    'GP', // Guadeloupe
    'HT', // Haiti
    'JM', // Jamaica
    'MQ', // Martinique
    'MS', // Montserrat
    'PR', // Puerto Rico
    'BL', // Saint Barthélemy
    'KN', // St. Kitts & Nevis
    'LC', // Saint Lucia
    'MF', // Saint Martin
    'VC', // Saint Vincent and the Grenadines
    'SX', // Sint Maarten
    'TT', // Trinidad and Tobago
    'TC', // Turks & Caicos
    'VI', // United States Virgin Islands
  ]
}

regions.northAmerica = {
  'northAmerica': {
    countries: _.flatten([
      regions.centralAmerica.countries,
      regions.northernAmerica.countries,
      regions.caribbean.countries
    ])
    .sort()
  }
};

regions.southAmerica = {
  'southAmerica': {    
    countries: [
      // source is http://en.wikipedia.org/wiki/South_America
      'AR', // Argentina
      'BO', // Bolivia
      'BR', // Brazil
      // 'CL', // Chile
      'CO', // Colombia
      'EC', // Ecuador
      'FK', // Falkland Islands
      'GF', // French Guiana
      'GY', // Guyana
      'PY', // Paraguay
      'PE', // Peru
      'SR', // Suriname
      'UY', // Uruguay
      'VE', // Venezuela
    ].sort()
  }
}

regions.antartica = {
  'antartica': {
    countries: [
      // source is http://en.wikipedia.org/wiki/Antarctica
      'AQ', // Antarctica
      'BV', // Bouvet Island
      'TF', // French Southern Territories
      'HM', // Heard Island and McDonald Islands
      'GS', // South Georgia and the South Sandwich Islands
    ].sort()
  }
}

regions.northernEurope = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Northern_Europe
    'AX', // Åland
    'DK', // Denmark
    'EE', // Estonia
    'FO', // Faroe Islands
    'FI', // Finland
    'GG', // Guernsey
    'IS', // Iceland
    'IE', // Republic of Ireland
    'JE', // Jersey (UK)
    'IM', // Isle of Man
    'LV', // Latvia
    'LT', // Lithuania
    'NO', // Norway
    'SJ', // Svalbard and Jan Mayen
    'SE', // Sweden
    'GB', // United Kingdom
  ]
}

regions.southernEurope = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Southern_Europe
    'AL', // Albania
    'AD', // Andorra
    'BA', // Bosnia and Herzegovina
    'HR', // Croatia
    'CY', // Cyprus
    'GI', // Gibraltar
    'GR', // Greece
    'IT', // Italy
    'MK', // Republic of Macedonia
    'VA', // Vatican City
    'MT', // Malta
    'ME', // Montenegro
    'PT', // Portugal
    'SM', // San Marino
    'RS', // Serbia
    'SI', // Slovenia
    'ES', // Spain
  ]
}

regions.easternEurope = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Eastern_Europe
    'BY', // Belarus
    'BG', // Bulgaria
    'CZ', // Czech Republic
    'GE', // Georgia
    'HU', // Hungary
    'MD', // Moldova
    'PL', // Poland
    'RO', // Romania
    'RU', // Russia
    'SK', // Slovakia
    'UA', // Ukraine
  ]
}

regions.westernEurope = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Western_Europe
    'AT', // Austria
    'BE', // Belgium
    'FR', // France
    'DE', // Germany
    'LI', // Liechtenstein
    'LU', // Luxembourg
    'MC', // Monaco
    'NL', // Netherlands
    'CH', // Switzerland
  ],
};

regions.europe = {
  'europe': {
    countries: _.flatten([
      regions.northernEurope.countries,
      regions.southernEurope.countries,
      regions.easternEurope.countries,
      regions.westernEurope.countries,
    ])
    .sort()
  }
}
 
regions.australia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Oceania
    'AU', // Australia
    'NF', // Norfolk Island
    'NZ', // New Zealand
  ]
};

regions.melanesia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Oceania
    'FJ', // Fiji
    'NC', //  New Caledonia
    'PG', // Papua New Guinea
    'SB', // Solomon Islands
    'VU', // Vanuatu
  ]
};    

regions.micronesia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Oceania
    'GU', // Guam
    'KI', // Kiribati
    'MH', // Marshall Islands
    'FM', // Micronesia, Fed. Sts.
    'NR', // Nauru
    'MP', // Northern Mariana Islands
    'PW', // Palau
    'UM', // United States Minor Outlying Islands
  ]
};    

regions.polynesia = {
  countries: [
    // source is http://en.wikipedia.org/wiki/Oceania
    'AS', // American Samoa
    'CK', // Cook Islands
    'CL', // Easter Island (Chile)
    'PF', // French Polynesia
    'NU', // Niue
    'PN', // Pitcairn Islands
    'WS', // Samoa
    'TK', // Tokelau
    'TO', // Tonga
    'TV', // Tuvalu
    'WF', // Wallis and Futuna
  ]
};

regions.oceania = {
  'oceania': {
    countries: _.flatten([
      regions.australia.countries,
      regions.melanesia.countries,
      regions.micronesia.countries,
      regions.polynesia.countries,
    ])
    .sort()
  }
};

module.exports = regions;

},{"underscore":8}],6:[function(require,module,exports){
'use strict';

var _ = require('underscore');
var regions = require('./data/regions');
var countriesAll = require('./data/countries.json');
var currenciesAll = require('./data/currencies.json');
var languagesAll = require('./data/languages.json');
var lookup = require('./lookup');

exports.countries = {
  all: countriesAll,
};

_.each(countriesAll, function (country) {
  exports.countries[country.alpha2] = country;
  exports.countries[country.alpha3] = country;
});

exports.currencies = {
  all: currenciesAll,
};

_.each(currenciesAll, function (currency) {
  exports.currencies[currency.code] = currency;
});

exports.languages = {
  all: languagesAll,
};

// Note that for the languages there are several entries with the same alpha3 -
// eg Dutch and Flemish. Not sure how to best deal with that - here whichever
// comes last wins.
_.each(languagesAll, function (language) {
  exports.languages[language.alpha2] = language;
  exports.languages[language.bibliographic] = language;
  exports.languages[language.alpha3] = language;
});

exports.regions = regions;

exports.lookup = lookup({
    countries: countriesAll,
    currencies: currenciesAll,
    languages: languagesAll
});

var callingCodesAll = _.reduce(countriesAll, function (codes, country) {
  if (country.countryCallingCodes && country.countryCallingCodes.length) {
    _.each(country.countryCallingCodes, function (code) {
      if (codes.indexOf(code) == -1) {
        codes.push(code);
      }
    });
  }
  return codes;
}, []);

callingCodesAll.sort(function (a, b) {
  var parse = function (str) { return parseInt(str) };
  var splitA = _.map(a.split(' '), parse);
  var splitB = _.map(b.split(' '), parse);

  if (splitA[0] < splitB[0]) {
    return -1;
  } else if (splitA[0] > splitB[0]) {
    return 1;
  } else {
    // Same - check split[1]
    if (splitA[1] === undefined && splitB[1] !== undefined) {
      return -1;
    } else if (splitA[1] !== undefined && splitB[1] === undefined) {
      return 1;
    } else if (splitA[1] < splitB[1]) {
      return -1;
    } else if (splitA[1] > splitB[1]) {
      return 1;
    } else {
      return 0;
    }
  }
});

exports.callingCodes = {
  all: callingCodesAll
};

},{"./data/countries.json":2,"./data/currencies.json":3,"./data/languages.json":4,"./data/regions":5,"./lookup":7,"underscore":8}],7:[function(require,module,exports){
var _ = require('underscore');

module.exports = init;

function init(o) {
  return {
    countries: search.bind(null, o.countries),
    currencies: search.bind(null, o.currencies),
    languages: search.bind(null, o.languages)
  };
}

function search(data, query) {
  var q = _.pairs(query);

  return data.filter(function(d) {
    return q.filter(function(v) {
      var prop = d[v[0]];

      if(_.isArray(prop)) return prop.indexOf(v[1]) >= 0;

      return prop == v[1];
    }).length == q.length;
  });
}
},{"underscore":8}],8:[function(require,module,exports){
//     Underscore.js 1.4.4
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `global` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Establish the object that gets returned to break out of a loop iteration.
  var breaker = {};

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var push             = ArrayProto.push,
      slice            = ArrayProto.slice,
      concat           = ArrayProto.concat,
      toString         = ObjProto.toString,
      hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeForEach      = ArrayProto.forEach,
    nativeMap          = ArrayProto.map,
    nativeReduce       = ArrayProto.reduce,
    nativeReduceRight  = ArrayProto.reduceRight,
    nativeFilter       = ArrayProto.filter,
    nativeEvery        = ArrayProto.every,
    nativeSome         = ArrayProto.some,
    nativeIndexOf      = ArrayProto.indexOf,
    nativeLastIndexOf  = ArrayProto.lastIndexOf,
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.4.4';

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.
  var each = _.each = _.forEach = function(obj, iterator, context) {
    if (obj == null) return;
    if (nativeForEach && obj.forEach === nativeForEach) {
      obj.forEach(iterator, context);
    } else if (obj.length === +obj.length) {
      for (var i = 0, l = obj.length; i < l; i++) {
        if (iterator.call(context, obj[i], i, obj) === breaker) return;
      }
    } else {
      for (var key in obj) {
        if (_.has(obj, key)) {
          if (iterator.call(context, obj[key], key, obj) === breaker) return;
        }
      }
    }
  };

  // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.
  _.map = _.collect = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
    each(obj, function(value, index, list) {
      results[results.length] = iterator.call(context, value, index, list);
    });
    return results;
  };

  var reduceError = 'Reduce of empty array with no initial value';

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }
    each(obj, function(value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }
    var length = obj.length;
    if (length !== +length) {
      var keys = _.keys(obj);
      length = keys.length;
    }
    each(obj, function(value, index, list) {
      index = keys ? keys[--length] : --length;
      if (!initial) {
        memo = obj[index];
        initial = true;
      } else {
        memo = iterator.call(context, memo, obj[index], index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, iterator, context) {
    var result;
    any(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };

  // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.
  _.filter = _.select = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);
    each(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) results[results.length] = value;
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, iterator, context) {
    return _.filter(obj, function(value, index, list) {
      return !iterator.call(context, value, index, list);
    }, context);
  };

  // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.
  _.every = _.all = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = true;
    if (obj == null) return result;
    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);
    each(obj, function(value, index, list) {
      if (!(result = result && iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.
  var any = _.some = _.any = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = false;
    if (obj == null) return result;
    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);
    each(obj, function(value, index, list) {
      if (result || (result = iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function(obj, target) {
    if (obj == null) return false;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
    return any(obj, function(value) {
      return value === target;
    });
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, function(value){ return value[key]; });
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs, first) {
    if (_.isEmpty(attrs)) return first ? null : [];
    return _[first ? 'find' : 'filter'](obj, function(value) {
      for (var key in attrs) {
        if (attrs[key] !== value[key]) return false;
      }
      return true;
    });
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.where(obj, attrs, true);
  };

  // Return the maximum element or (element-based computation).
  // Can't optimize arrays of integers longer than 65,535 elements.
  // See: https://bugs.webkit.org/show_bug.cgi?id=80797
  _.max = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.max.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj)) return -Infinity;
    var result = {computed : -Infinity, value: -Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed >= result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.min.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj)) return Infinity;
    var result = {computed : Infinity, value: Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed < result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Shuffle an array.
  _.shuffle = function(obj) {
    var rand;
    var index = 0;
    var shuffled = [];
    each(obj, function(value) {
      rand = _.random(index++);
      shuffled[index - 1] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  };

  // An internal function to generate lookup iterators.
  var lookupIterator = function(value) {
    return _.isFunction(value) ? value : function(obj){ return obj[value]; };
  };

  // Sort the object's values by a criterion produced by an iterator.
  _.sortBy = function(obj, value, context) {
    var iterator = lookupIterator(value);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value : value,
        index : index,
        criteria : iterator.call(context, value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index < right.index ? -1 : 1;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(obj, value, context, behavior) {
    var result = {};
    var iterator = lookupIterator(value || _.identity);
    each(obj, function(value, index) {
      var key = iterator.call(context, value, index, obj);
      behavior(result, key, value);
    });
    return result;
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = function(obj, value, context) {
    return group(obj, value, context, function(result, key, value) {
      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);
    });
  };

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = function(obj, value, context) {
    return group(obj, value, context, function(result, key) {
      if (!_.has(result, key)) result[key] = 0;
      result[key]++;
    });
  };

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iterator, context) {
    iterator = iterator == null ? _.identity : lookupIterator(iterator);
    var value = iterator.call(context, obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = (low + high) >>> 1;
      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
    }
    return low;
  };

  // Safely convert anything iterable into a real, live array.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (obj.length === +obj.length) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if ((n != null) && !guard) {
      return slice.call(array, Math.max(array.length - n, 0));
    } else {
      return array[array.length - 1];
    }
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, (n == null) || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, output) {
    each(input, function(value) {
      if (_.isArray(value)) {
        shallow ? push.apply(output, value) : flatten(value, shallow, output);
      } else {
        output.push(value);
      }
    });
    return output;
  };

  // Return a completely flattened version of an array.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, []);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iterator, context) {
    if (_.isFunction(isSorted)) {
      context = iterator;
      iterator = isSorted;
      isSorted = false;
    }
    var initial = iterator ? _.map(array, iterator, context) : array;
    var results = [];
    var seen = [];
    each(initial, function(value, index) {
      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {
        seen.push(value);
        results.push(array[index]);
      }
    });
    return results;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(concat.apply(ArrayProto, arguments));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function(item) {
      return _.every(rest, function(other) {
        return _.indexOf(other, item) >= 0;
      });
    });
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
    return _.filter(array, function(value){ return !_.contains(rest, value); });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    var args = slice.call(arguments);
    var length = _.max(_.pluck(args, 'length'));
    var results = new Array(length);
    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(args, "" + i);
    }
    return results;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    if (list == null) return {};
    var result = {};
    for (var i = 0, l = list.length; i < l; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    if (array == null) return -1;
    var i = 0, l = array.length;
    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);
    for (; i < l; i++) if (array[i] === item) return i;
    return -1;
  };

  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
  _.lastIndexOf = function(array, item, from) {
    if (array == null) return -1;
    var hasIndex = from != null;
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {
      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
    }
    var i = (hasIndex ? from : array.length);
    while (i--) if (array[i] === item) return i;
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = arguments[2] || 1;

    var len = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(len);

    while(idx < len) {
      range[idx++] = start;
      start += step;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    var args = slice.call(arguments, 2);
    return function() {
      return func.apply(context, args.concat(slice.call(arguments)));
    };
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context.
  _.partial = function(func) {
    var args = slice.call(arguments, 1);
    return function() {
      return func.apply(this, args.concat(slice.call(arguments)));
    };
  };

  // Bind all of an object's methods to that object. Useful for ensuring that
  // all callbacks defined on an object belong to it.
  _.bindAll = function(obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length === 0) funcs = _.functions(obj);
    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function() {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));
    };
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){ return func.apply(null, args); }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time.
  _.throttle = function(func, wait) {
    var context, args, timeout, result;
    var previous = 0;
    var later = function() {
      previous = new Date;
      timeout = null;
      result = func.apply(context, args);
    };
    return function() {
      var now = new Date;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
      } else if (!timeout) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, result;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) result = func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) result = func.apply(context, args);
      return result;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = function(func) {
    var ran = false, memo;
    return function() {
      if (ran) return memo;
      ran = true;
      memo = func.apply(this, arguments);
      func = null;
      return memo;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return function() {
      var args = [func];
      push.apply(args, arguments);
      return wrapper.apply(this, args);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var funcs = arguments;
    return function() {
      var args = arguments;
      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }
      return args[0];
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    if (times <= 0) return func();
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Object Functions
  // ----------------

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = nativeKeys || function(obj) {
    if (obj !== Object(obj)) throw new TypeError('Invalid object');
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var values = [];
    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);
    return values;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var pairs = [];
    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    each(keys, function(key) {
      if (key in obj) copy[key] = obj[key];
    });
    return copy;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    for (var key in obj) {
      if (!_.contains(keys, key)) copy[key] = obj[key];
    }
    return copy;
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          if (obj[prop] == null) obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.
    if (a === b) return a !== 0 || 1 / a == 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className != toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, dates, and booleans are compared by value.
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return a == String(b);
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
        // other numeric values.
        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a == +b;
      // RegExps are compared by their source patterns and flags.
      case '[object RegExp]':
        return a.source == b.source &&
               a.global == b.global &&
               a.multiline == b.multiline &&
               a.ignoreCase == b.ignoreCase;
    }
    if (typeof a != 'object' || typeof b != 'object') return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] == a) return bStack[length] == b;
    }
    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size = 0, result = true;
    // Recursively compare objects and arrays.
    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
        }
      }
    } else {
      // Objects with different constructors are not equivalent, but `Object`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&
                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {
        return false;
      }
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++;
          // Deep compare each member.
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
        }
      }
      // Ensure that both objects contain the same number of properties.
      if (result) {
        for (key in b) {
          if (_.has(b, key) && !(size--)) break;
        }
        result = !size;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, [], []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) == '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    return obj === Object(obj);
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) == '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  }

  // Optimize `isFunction` if appropriate.
  if (typeof (/./) !== 'function') {
    _.isFunction = function(obj) {
      return typeof obj === 'function';
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj != +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iterators.
  _.identity = function(value) {
    return value;
  };

  // Run a function **n** times.
  _.times = function(n, iterator, context) {
    var accum = Array(n);
    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // List of HTML entities for escaping.
  var entityMap = {
    escape: {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '/': '&#x2F;'
    }
  };
  entityMap.unescape = _.invert(entityMap.escape);

  // Regexes containing the keys and values listed immediately above.
  var entityRegexes = {
    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),
    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')
  };

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  _.each(['escape', 'unescape'], function(method) {
    _[method] = function(string) {
      if (string == null) return '';
      return ('' + string).replace(entityRegexes[method], function(match) {
        return entityMap[method][match];
      });
    };
  });

  // If the value of the named property is a function then invoke it;
  // otherwise, return it.
  _.result = function(object, property) {
    if (object == null) return null;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    each(_.functions(obj), function(name){
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\t':     't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  _.template = function(text, data, settings) {
    var render;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = new RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset)
        .replace(escaper, function(match) { return '\\' + escapes[match]; });

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      }
      if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      }
      if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }
      index = offset + match.length;
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + "return __p;\n";

    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    if (data) return render(data, _);
    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled function source as a convenience for precompilation.
    template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function, which will delegate to the wrapper.
  _.chain = function(obj) {
    return _(obj).chain();
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(obj) {
    return this._chain ? _(obj).chain() : obj;
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];
      return result.call(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });

  _.extend(_.prototype, {

    // Start chaining a wrapped Underscore object.
    chain: function() {
      this._chain = true;
      return this;
    },

    // Extracts the result from a wrapped and chained object.
    value: function() {
      return this._wrapped;
    }

  });

}).call(this);

},{}],9:[function(require,module,exports){
/*
* loglevel - https://github.com/pimterry/loglevel
*
* Copyright (c) 2013 Tim Perry
* Licensed under the MIT license.
*/
(function (root, definition) {
    if (typeof module === 'object' && module.exports && typeof require === 'function') {
        module.exports = definition();
    } else if (typeof define === 'function' && typeof define.amd === 'object') {
        define(definition);
    } else {
        root.log = definition();
    }
}(this, function () {
    var self = {};
    var noop = function() {};
    var undefinedType = "undefined";

    function realMethod(methodName) {
        if (typeof console === undefinedType) {
            return false; // We can't build a real method without a console to log to
        } else if (console[methodName] !== undefined) {
            return bindMethod(console, methodName);
        } else if (console.log !== undefined) {
            return bindMethod(console, 'log');
        } else {
            return noop;
        }
    }

    function bindMethod(obj, methodName) {
        var method = obj[methodName];
        if (typeof method.bind === 'function') {
            return method.bind(obj);
        } else {
            try {
                return Function.prototype.bind.call(method, obj);
            } catch (e) {
                // Missing bind shim or IE8 + Modernizr, fallback to wrapping
                return function() {
                    return Function.prototype.apply.apply(method, [obj, arguments]);
                };
            }
        }
    }

    function enableLoggingWhenConsoleArrives(methodName, level) {
        return function () {
            if (typeof console !== undefinedType) {
                replaceLoggingMethods(level);
                self[methodName].apply(self, arguments);
            }
        };
    }

    var logMethods = [
        "trace",
        "debug",
        "info",
        "warn",
        "error"
    ];

    function replaceLoggingMethods(level) {
        for (var i = 0; i < logMethods.length; i++) {
            var methodName = logMethods[i];
            self[methodName] = (i < level) ? noop : self.methodFactory(methodName, level);
        }
    }

    function persistLevelIfPossible(levelNum) {
        var levelName = (logMethods[levelNum] || 'silent').toUpperCase();

        // Use localStorage if available
        try {
            window.localStorage['loglevel'] = levelName;
            return;
        } catch (ignore) {}

        // Use session cookie as fallback
        try {
            window.document.cookie = "loglevel=" + levelName + ";";
        } catch (ignore) {}
    }

    function loadPersistedLevel() {
        var storedLevel;

        try {
            storedLevel = window.localStorage['loglevel'];
        } catch (ignore) {}

        if (typeof storedLevel === undefinedType) {
            try {
                storedLevel = /loglevel=([^;]+)/.exec(window.document.cookie)[1];
            } catch (ignore) {}
        }
        
        if (self.levels[storedLevel] === undefined) {
            storedLevel = "WARN";
        }

        self.setLevel(self.levels[storedLevel]);
    }

    /*
     *
     * Public API
     *
     */

    self.levels = { "TRACE": 0, "DEBUG": 1, "INFO": 2, "WARN": 3,
        "ERROR": 4, "SILENT": 5};

    self.methodFactory = function (methodName, level) {
        return realMethod(methodName) ||
               enableLoggingWhenConsoleArrives(methodName, level);
    };

    self.setLevel = function (level) {
        if (typeof level === "string" && self.levels[level.toUpperCase()] !== undefined) {
            level = self.levels[level.toUpperCase()];
        }
        if (typeof level === "number" && level >= 0 && level <= self.levels.SILENT) {
            persistLevelIfPossible(level);
            replaceLoggingMethods(level);
            if (typeof console === undefinedType && level < self.levels.SILENT) {
                return "No console available for logging";
            }
        } else {
            throw "log.setLevel() called with invalid level: " + level;
        }
    };

    self.enableAll = function() {
        self.setLevel(self.levels.TRACE);
    };

    self.disableAll = function() {
        self.setLevel(self.levels.SILENT);
    };

    // Grab the current global log variable in case of overwrite
    var _log = (typeof window !== undefinedType) ? window.log : undefined;
    self.noConflict = function() {
        if (typeof window !== undefinedType &&
               window.log === self) {
            window.log = _log;
        }

        return self;
    };

    loadPersistedLevel();
    return self;
}));

},{}],10:[function(require,module,exports){
/*
Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk
License: MIT - http://mrgnrdrck.mit-license.org

https://github.com/mroderick/PubSubJS
*/
(function (root, factory){
	'use strict';

    if (typeof define === 'function' && define.amd){
        // AMD. Register as an anonymous module.
        define(['exports'], factory);

    } else if (typeof exports === 'object'){
        // CommonJS
        factory(exports);

    } else {
        // Browser globals
        var PubSub = {};
        root.PubSub = PubSub;
        factory(PubSub);
    }
}(( typeof window === 'object' && window ) || this, function (PubSub){
	'use strict';

	var messages = {},
		lastUid = -1;

	function hasKeys(obj){
		var key;

		for (key in obj){
			if ( obj.hasOwnProperty(key) ){
				return true;
			}
		}
		return false;
	}

	/**
	 *	Returns a function that throws the passed exception, for use as argument for setTimeout
	 *	@param { Object } ex An Error object
	 */
	function throwException( ex ){
		return function reThrowException(){
			throw ex;
		};
	}

	function callSubscriberWithDelayedExceptions( subscriber, message, data ){
		try {
			subscriber( message, data );
		} catch( ex ){
			setTimeout( throwException( ex ), 0);
		}
	}

	function callSubscriberWithImmediateExceptions( subscriber, message, data ){
		subscriber( message, data );
	}

	function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){
		var subscribers = messages[matchedMessage],
			callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,
			s;

		if ( !messages.hasOwnProperty( matchedMessage ) ) {
			return;
		}

		for (s in subscribers){
			if ( subscribers.hasOwnProperty(s)){
				callSubscriber( subscribers[s], originalMessage, data );
			}
		}
	}

	function createDeliveryFunction( message, data, immediateExceptions ){
		return function deliverNamespaced(){
			var topic = String( message ),
				position = topic.lastIndexOf( '.' );

			// deliver the message as it is now
			deliverMessage(message, message, data, immediateExceptions);

			// trim the hierarchy and deliver message to each level
			while( position !== -1 ){
				topic = topic.substr( 0, position );
				position = topic.lastIndexOf('.');
				deliverMessage( message, topic, data, immediateExceptions );
			}
		};
	}

	function messageHasSubscribers( message ){
		var topic = String( message ),
			found = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic])),
			position = topic.lastIndexOf( '.' );

		while ( !found && position !== -1 ){
			topic = topic.substr( 0, position );
			position = topic.lastIndexOf( '.' );
			found = Boolean(messages.hasOwnProperty( topic ) && hasKeys(messages[topic]));
		}

		return found;
	}

	function publish( message, data, sync, immediateExceptions ){
		var deliver = createDeliveryFunction( message, data, immediateExceptions ),
			hasSubscribers = messageHasSubscribers( message );

		if ( !hasSubscribers ){
			return false;
		}

		if ( sync === true ){
			deliver();
		} else {
			setTimeout( deliver, 0 );
		}
		return true;
	}

	/**
	 *	PubSub.publish( message[, data] ) -> Boolean
	 *	- message (String): The message to publish
	 *	- data: The data to pass to subscribers
	 *	Publishes the the message, passing the data to it's subscribers
	**/
	PubSub.publish = function( message, data ){
		return publish( message, data, false, PubSub.immediateExceptions );
	};

	/**
	 *	PubSub.publishSync( message[, data] ) -> Boolean
	 *	- message (String): The message to publish
	 *	- data: The data to pass to subscribers
	 *	Publishes the the message synchronously, passing the data to it's subscribers
	**/
	PubSub.publishSync = function( message, data ){
		return publish( message, data, true, PubSub.immediateExceptions );
	};

	/**
	 *	PubSub.subscribe( message, func ) -> String
	 *	- message (String): The message to subscribe to
	 *	- func (Function): The function to call when a new message is published
	 *	Subscribes the passed function to the passed message. Every returned token is unique and should be stored if
	 *	you need to unsubscribe
	**/
	PubSub.subscribe = function( message, func ){
		if ( typeof func !== 'function'){
			return false;
		}

		// message is not registered yet
		if ( !messages.hasOwnProperty( message ) ){
			messages[message] = {};
		}

		// forcing token as String, to allow for future expansions without breaking usage
		// and allow for easy use as key names for the 'messages' object
		var token = 'uid_' + String(++lastUid);
		messages[message][token] = func;

		// return token for unsubscribing
		return token;
	};

	/* Public: Clears all subscriptions
	 */
	PubSub.clearAllSubscriptions = function clearAllSubscriptions(){
		messages = {};
	};

	/*Public: Clear subscriptions by the topic
	*/
	PubSub.clearSubscriptions = function clearSubscriptions(topic){
		var m; 
		for (m in messages){
			if (messages.hasOwnProperty(m) && m.indexOf(topic) === 0){
				delete messages[m];
			}
		}
	};

	/* Public: removes subscriptions.
	 * When passed a token, removes a specific subscription.
	 * When passed a function, removes all subscriptions for that function
	 * When passed a topic, removes all subscriptions for that topic (hierarchy)
	 *
	 * value - A token, function or topic to unsubscribe.
	 *
	 * Examples
	 *
	 *		// Example 1 - unsubscribing with a token
	 *		var token = PubSub.subscribe('mytopic', myFunc);
	 *		PubSub.unsubscribe(token);
	 *
	 *		// Example 2 - unsubscribing with a function
	 *		PubSub.unsubscribe(myFunc);
	 *
	 *		// Example 3 - unsubscribing a topic
	 *		PubSub.unsubscribe('mytopic');
	 */
	PubSub.unsubscribe = function(value){
		var isTopic    = typeof value === 'string' && messages.hasOwnProperty(value),
			isToken    = !isTopic && typeof value === 'string',
			isFunction = typeof value === 'function',
			result = false,
			m, message, t;

		if (isTopic){
			delete messages[value];
			return;
		}

		for ( m in messages ){
			if ( messages.hasOwnProperty( m ) ){
				message = messages[m];

				if ( isToken && message[value] ){
					delete message[value];
					result = value;
					// tokens are unique, so we can just stop here
					break;
				}

				if (isFunction) {
					for ( t in message ){
						if (message.hasOwnProperty(t) && message[t] === value){
							delete message[t];
							result = true;
						}
					}
				}
			}
		}

		return result;
	};
}));

},{}],11:[function(require,module,exports){
/*!
	query-string
	Parse and stringify URL query strings
	https://github.com/sindresorhus/query-string
	by Sindre Sorhus
	MIT License
*/
(function () {
	'use strict';
	var queryString = {};

	queryString.parse = function (str) {
		if (typeof str !== 'string') {
			return {};
		}

		str = str.trim().replace(/^(\?|#)/, '');

		if (!str) {
			return {};
		}

		return str.trim().split('&').reduce(function (ret, param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			var key = parts[0];
			var val = parts[1];

			key = decodeURIComponent(key);
			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);

			if (!ret.hasOwnProperty(key)) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}

			return ret;
		}, {});
	};

	queryString.stringify = function (obj) {
		return obj ? Object.keys(obj).map(function (key) {
			var val = obj[key];

			if (Array.isArray(val)) {
				return val.map(function (val2) {
					return encodeURIComponent(key) + '=' + encodeURIComponent(val2);
				}).join('&');
			}

			return encodeURIComponent(key) + '=' + encodeURIComponent(val);
		}).join('&') : '';
	};

	if (typeof define === 'function' && define.amd) {
		define(function() { return queryString; });
	} else if (typeof module !== 'undefined' && module.exports) {
		module.exports = queryString;
	} else {
		window.queryString = queryString;
	}
})();

},{}],12:[function(require,module,exports){
"use strict";

var invariant               = require('react/lib/invariant');
var Preloaded               = require('./lib/Preloaded');
var getComponentFingerprint = require('./lib/getComponentFingerprint');
var prefetchAsyncState      = require('./lib/prefetchAsyncState');
var isAsyncComponent        = require('./lib/isAsyncComponent');

var Mixin = {

  getInitialState: function() {
    if (this.props.asyncState) {
      return this.props.asyncState;
    }

    if (window.__reactAsyncStatePacket === undefined) {
      this._fetchAsyncState = true;
      return {};
    }

    var fingerprint = getComponentFingerprint(this);

    if (window.__reactAsyncStatePacket[fingerprint] === undefined) {
      this._fetchAsyncState = true;
      return {};
    }

    var asyncState = window.__reactAsyncStatePacket[fingerprint];
    delete window.__reactAsyncStatePacket[fingerprint];

    if (typeof this.stateFromJSON === 'function') {
      asyncState = this.stateFromJSON(asyncState);
    }

    return asyncState;
  },

  componentDidMount: function() {

    invariant(
      typeof this.getInitialStateAsync === 'function',
      "%s uses ReactAsync.Mixin and should provide getInitialStateAsync(cb) method",
      this.displayName
    );

    if (this._fetchAsyncState) {
      var cb = this._onStateReady;
      var promise = this.getInitialStateAsync(cb);

      if (promise && promise.then) {
        promise.then(cb.bind(this, null), cb);
      }
    }
  },

  componentWillUnmount: function() {
    delete this._fetchAsyncState;
  },

  _onStateReady: function(err, asyncState) {
    if (err) {
      throw err;
    }

    if (this.isMounted()) {
      this.setState(asyncState || {});
    }
  }
};

module.exports = {
  prefetchAsyncState: prefetchAsyncState,
  isAsyncComponent: isAsyncComponent,
  Mixin: Mixin,
  Preloaded: Preloaded
};

},{"./lib/Preloaded":13,"./lib/getComponentFingerprint":14,"./lib/isAsyncComponent":15,"./lib/prefetchAsyncState":16,"react/lib/invariant":213}],13:[function(require,module,exports){
"use strict";

var React               = require('react');
var cloneWithProps      = require('react/lib/cloneWithProps');
var ReactUpdates        = require('react/lib/ReactUpdates');
var emptyFunction       = require('react/lib/emptyFunction');
var prefetchAsyncState  = require('./prefetchAsyncState');
var isAsyncComponent    = require('./isAsyncComponent');

var PreloaderMixin = {

  propTypes: {
    children: React.PropTypes.element.isRequired,
    onAsyncStateFetched: React.PropTypes.func,
    onBeforeUpdate: React.PropTypes.func,
    preloader: React.PropTypes.element,
    alwayUsePreloader: React.PropTypes.bool
  },

  getDefaultProps: function() {
    return {
      onAsyncStateFetched: emptyFunction,
      onBeforeUpdate: emptyFunction,
      onUpdate: emptyFunction
    };
  },

  getInitialState: function() {
    var children = React.Children.only(this.props.children);
    if (this.props.preloader) {
      return {
        rendered: this.props.preloader,
        pending: children
      };
    } else {
      return {
        rendered: children,
        pending: null
      };
    }
  },

  componentWillReceiveProps: function(nextProps) {
    var children = React.Children.only(nextProps.children);
    if (isAsyncComponent(children) &&
        children.type !== this.state.rendered.type) {

      var nextState = {pending: children};

      if (nextProps.preloader && nextProps.alwayUsePreloader) {
        nextState.rendered = nextProps.preloader;
      }

      this.setState(nextState, this.prefetchAsyncState.bind(null, children));

    } else {

      this.setState({
        rendered: children,
        pending: null
      }, this.props.onUpdate);

    }
  },

  componentDidMount: function() {
    if (this.state.pending) {
      this.prefetchAsyncState(this.state.pending);
    }
  },

  /**
   * Get the currently rendered component instance.
   *
   * Do not use it in a real code, this is provided only for testing purposes.
   *
   * @returns {ReactComponent}
   */
  getRendered: function() {
    return this.refs.rendered;
  },

  /**
   * Check if there's update pending.
   *
   * @returns {boolean}
   */
  hasPendingUpdate: function() {
    return this.state.pending !== null;
  },

  /**
   * Prefetch async state for a component and update state.
   *
   * @param {ReactComponent} component
   */
  prefetchAsyncState: function(component) {
    prefetchAsyncState(component, function(err, nextRendered) {
      ReactUpdates.batchedUpdates(function() {
        this.props.onAsyncStateFetched();
        if (this.state.pending === component && this.isMounted()) {
          this.props.onBeforeUpdate();
          this.setState({
            rendered: nextRendered,
            pending: null
          }, this.props.onUpdate);
        }
      }.bind(this));
    }.bind(this));
  }
};

/**
 * Component which wraps another component and prefetches its async state before
 * rendering it.
 */
var Preloaded = React.createClass({

  mixins: [PreloaderMixin],

  render: function() {
    return cloneWithProps(this.state.rendered, {ref: 'rendered'});
  }
});

module.exports = Preloaded;


},{"./isAsyncComponent":15,"./prefetchAsyncState":16,"react":235,"react/lib/ReactUpdates":162,"react/lib/cloneWithProps":185,"react/lib/emptyFunction":192}],14:[function(require,module,exports){
"use strict";

/**
 * Get a fingerprint of the component.
 *
 * @param {Object} component
 * @return {String}
 */
function getComponentFingerprint(component) {
  return component._rootNodeID + '__' + component._mountDepth;
}

module.exports = getComponentFingerprint;

},{}],15:[function(require,module,exports){
"use strict";

/**
 * Check if a component is an async component.
 *
 * @param {ReactComponent} component
 */
function isAsyncComponent(component) {
  return component.type.prototype && typeof component.type.prototype.getInitialStateAsync === 'function';
}

module.exports = isAsyncComponent;

},{}],16:[function(require,module,exports){
"use strict";

var invariant         = require('react/lib/invariant');
var cloneWithProps    = require('react/lib/cloneWithProps');
var isAsyncComponent  = require('./isAsyncComponent');

/**
 * Prefetch an async state for an unmounted async component instance.
 *
 * @param {ReactComponent} component
 * @param {Callback} cb
 */
function prefetchAsyncState(component, cb) {

  invariant(
    isAsyncComponent(component),
    "%s should be an async component to be able to prefetch async state, " +
    "but getInitialStateAsync(cb) method is missing or is not a function",
    component.displayName
  );

  var cloneCallback = function(err, asyncState) {
    if (err) {
      return cb(err);
    }

    cb(null, cloneWithProps(component, {asyncState: asyncState || {}}));
  };
  var getInitialStateAsync = component.type.prototype.getInitialStateAsync;
  var promise = getInitialStateAsync.call(component, cloneCallback);

  if (promise && typeof promise.then === 'function') {
    promise.then(cloneCallback.bind(cloneCallback, null), cloneCallback);
  }
}

module.exports = prefetchAsyncState;

},{"./isAsyncComponent":15,"react/lib/cloneWithProps":185,"react/lib/invariant":213}],17:[function(require,module,exports){
(function (global){
'use strict';

require('./RequestAnimationFramePolyfill');

var renderList = [];
var RequestAnimationFrame = global.requestAnimationFrame;

function loop(){
  renderList.forEach(function(fn){
    fn();
  });

  RequestAnimationFrame(loop);
}

if(!!global.document) {
  loop();
}

module.exports.bind = function(func){
  if(typeof func !== 'function'){
    throw 'Must Pass in a function';
  }
  renderList.push(func);
};

module.exports.unbind = function(func){
  for(var i = 0; i < renderList.length; i++){
    if(renderList[i] === func){
      renderList.splice(i, 1);
      return;
    }
  }
};
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./RequestAnimationFramePolyfill":18}],18:[function(require,module,exports){
(function (global){
(function() {

    if(!global.document){
        return;
    }

    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
        window.cancelAnimationFrame = 
            window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];
    }
 
    if (!window.requestAnimationFrame)
        window.requestAnimationFrame = function(callback, element) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = window.setTimeout(function() { callback(currTime + timeToCall); }, 
              timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
 
    if (!window.cancelAnimationFrame)
        window.cancelAnimationFrame = function(id) {
            clearTimeout(id);
        };
}());
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],19:[function(require,module,exports){
var s = require('react-prefixr');
var React = require('react/addons');

var SubContainer = React.createClass({
  displayName: 'Sub-Infinity',
  getInitialState: function () {
    return {
      transform: this.props.transform + ' scale(1)',
      opacity: '0'
    };
  },
  componentDidMount: function (argument) {
    this.setState({transform: this.props.transform + ' scale(1)', opacity: '1'});
  },
  componentWillReceiveProps: function (newProps) {
    this.setState({transform: newProps.transform + ' scale(1)'});
  },
  componentWillEnter: function (cb) {
    this.setState({transform: this.props.transform + ' scale(1)', opacity: '0'});
    setTimeout(cb, 100);
  },
  componentDidEnter: function () {
    this.setState({transform: this.props.transform + ' scale(1)', opacity: '1'});
  },
  componentWillLeave: function (cb) {
    this.setState({transform: this.props.transform + ' scale(1)', opacity: '0'});
    setTimeout(cb, 400);
  },
  render: function () {
    return React.DOM.div({style: s({
      position: 'absolute',
      top: '0',
      left: '0',
      transform: this.state.transform,
      width: this.props.width,
      height: this.props.height,
      transition: this.props.transition,
      opacity: this.state.opacity
    })},
      this.props.children
    );
  }
});

module.exports = SubContainer;
},{"react-prefixr":21,"react/addons":63}],20:[function(require,module,exports){
(function (global){
'use strict';

var React = require('react/addons');
var TransitionGroup = React.createFactory(React.addons.TransitionGroup);

var RAFList = require('./RAFList');

var SubContainer = React.createFactory(require('./SubContainer'));

/*
- The properties I can expect:
i) Height and width of every element. (Object with max-width or min-widths, for multiple, undefined === 100%)
   // NOT YET: OR every single data element with its own height and width for Masonry style layouts
   // NOT YET: OR Detect Height automatically after rendering for Masonry

ii) Function to use for rendering actual content withing animated/positioned divs

iii) component:[string] Element name for conatainers. Defaults to div

iv) data: Array of data points (may include size data)

v) Total number of elements to be shown, defaults to Array.length

vi) OPTIONAL: callback for scrolling and loading elements toward the end of the dataset (for loading more via AJAX)

vii) Max number of columns: Defaults to infinite.

viii) Align: defaults to center

ix) Callbacks for breakpoints. Given in an array

x) Transition duration, curve and delay per element (for staggered animations) defaults to 0.5s ease. And 0 stagger.

xi) classname, elementClassName

*/


var Infinite = React.createClass({

  displayName: 'React-Infinity',

  getDefaultProps: function () {
    return {
      data: [],
      maxColumns: 100,
      align: 'center',
      transition: '0.5s ease',
      className: 'infinite-container',
      elementClassName: '',
      component: 'div',
      containerComponent: 'div',
      mobileWidth: 480,
      justifyOnMobile: true,
      margin: 0,
      scrollDelta: 0,
      direction: 'vertical',
      preRender: false
    };
  },

  propTypes: {
    data: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,
    maxColumns: React.PropTypes.number,
    align: React.PropTypes.string,
    transition: React.PropTypes.string,
    className: React.PropTypes.string,
    elementHeight: React.PropTypes.number,
    elementWidth: React.PropTypes.number,
    mobileWidth: React.PropTypes.number,
    elementMobileHeight: React.PropTypes.number,
    elementMobileWidth: React.PropTypes.number,
    margin: React.PropTypes.number,
    justifyOnMobile: React.PropTypes.bool,
    preRender: React.PropTypes.bool
  },

  getInitialState: function () {
    return {
      scrollTop: 0,
      windowWidth: this.props.windowWidth || 800,
      windowHeight: this.props.windowHeight || 600,
      loaded: false,
      scrollDelta: 0,
      extra: {
        count: 0
      }
    };
  },

  componentDidMount: function () {

    global.addEventListener('resize', this.onResize);

    if(this.props.transitionable){
      RAFList.bind(this.onScroll);
    } else {
      global.addEventListener('scroll', this.onScroll);
      this.onScroll()
    }

    this.setState({
      loaded: true,
      windowWidth: global.innerWidth,
      windowHeight: global.innerHeight,
      elementWidth: this.props.elementWidth || this.refs.element1.getDOMNode().getClientRects()[0].width,
      elementHeight: this.props.elementHeight || this.refs.element1.getDOMNode().getClientRects()[0].height,
      scrollTop: global.scrollY || 0
    });
  },

  onScroll: function () {
    var scrollTop = this.props.transitionable ? this.props.transitionable.get() : global.scrollY;

    if(this.state.scrollTop !== scrollTop){
      this.setState({scrollTop: scrollTop});
    }
  },

  onResize: function () {
    this.setState({windowHeight: global.innerHeight, windowWidth: global.innerWidth});
  },

  componentWillUnmount: function () {
    global.removeEventListener('resize', this.onResize);
    if(this.props.transitionable){
      RAFList.unbind(this.onScroll);
    } else {
      global.removeEventListener('scroll', this.onScroll);
    }
  },

  vertical: function(){
    var windowWidth = this.state.windowWidth;
    var windowHeight = this.state.windowHeight;

    var elementWidth = this.props.mobileWidth <= windowWidth ? this.props.elementWidth : this.props.elementMobileWidth;
    var elementHeight = this.props.mobileWidth <= windowWidth ? this.props.elementHeight : this.props.elementMobileHeight;
    var margin = this.props.margin;

    if(!!this.props.justifyOnMobile && this.props.mobileWidth > windowWidth) {
      elementWidth = windowWidth;
      margin = 0;
    }

    var elementsPerRow = Math.max(1, Math.floor((windowWidth - margin) / (elementWidth + margin)));
    var extraSpace = windowWidth - elementsPerRow * (elementWidth + margin) + margin;
    var offset = this.props.align === 'left' ? 0 :
                 this.props.align === 'center' ? Math.round(extraSpace/2) : extraSpace;

    var scrollTop = this.state.scrollTop - this.state.scrollDelta;
    var rowsAbove = Math.floor((scrollTop - margin) / (elementHeight + margin));
    var visibleRows = Math.ceil(((rowsAbove * (elementHeight + margin)) + windowHeight)/(elementHeight+margin));

    var extra = elementsPerRow === 1 ? Math.ceil(visibleRows/2) : 2;
    var lowerLimit = (rowsAbove - extra) * elementsPerRow;
    var higherLimit = (visibleRows + extra*2) * elementsPerRow;

    var elementsToRender = [];

    this.props.data.forEach(function (obj, index) {
      if(index >= lowerLimit && index < higherLimit){
        var column = index % elementsPerRow;
        var row = Math.floor(index / elementsPerRow);
        elementsToRender.push(SubContainer({
          key: obj.id || obj._id,
          transform: 'translate('+ (offset + column * (elementWidth + margin))  +'px, '+ (margin + row * (elementHeight + margin)) +'px)',
          width: elementWidth + 'px',
          height: elementHeight + 'px',
          transition: this.props.transition
        }, this.props.childComponent(obj)));
      }
    }.bind(this));

    return React.createElement(this.props.containerComponent, {className: 'infinite-container', style: {
      height: (margin + (elementHeight + margin) * Math.ceil(this.props.data.length/elementsPerRow)) + 'px',
      width: '100%',
      position: 'relative'}
    },
      TransitionGroup(null, elementsToRender)
    );
  },

  horizontal: function(){
    var windowWidth = this.state.windowWidth;
    var windowHeight = this.state.windowHeight;

    var elementWidth = this.props.mobileWidth <= windowWidth ? this.props.elementWidth : this.props.elementMobileWidth;
    var elementHeight = this.props.mobileWidth <= windowWidth ? this.props.elementHeight : this.props.elementMobileHeight;
    var margin = this.props.margin;

    if(!!this.props.justifyOnMobile && this.props.mobileWidth > windowWidth) {
      elementHeight = windowHeight;
      margin = 0;
    }

    var elementsPerColumn = Math.max(1, Math.floor((windowHeight - margin) / (elementHeight + margin)));
    var extraSpace = windowHeight - elementsPerColumn * (elementHeight + margin) + margin;
    var offset = this.props.align === 'left' ? 0 :
                 this.props.align === 'center' ? Math.round(extraSpace/2) : extraSpace;

    var scrollLeft = this.state.scrollTop - this.state.scrollDelta;
    var columnsToLeft = Math.floor((scrollLeft - margin) / (elementHeight + margin));
    var visibleColumns = Math.ceil(((columnsToLeft * (elementWidth + margin)) + windowWidth)/(elementWidth + margin));

    var extra = elementsPerColumn === 1 ? Math.ceil(visibleColumns/2) : 2;
    var lowerLimit = (columnsToLeft - extra) * elementsPerColumn;
    var higherLimit = (visibleColumns + extra * 2) * elementsPerColumn;

    var elementsToRender = [];

    this.props.data.forEach(function (obj, index) {
      if(index >= lowerLimit && index < higherLimit){
        var row = index % elementsPerColumn;
        var column = Math.floor(index / elementsPerColumn);
        elementsToRender.push(SubContainer({
          key: obj.id || obj._id,
          transform: 'translate('+ (offset + column * (elementWidth + margin))  +'px, '+ (margin + row * (elementHeight + margin)) +'px)',
          width: elementWidth + 'px',
          height: elementHeight + 'px',
          transition: this.props.transition
        }, this.props.childComponent(obj)));
      }
    }.bind(this));

    return React.createElement(this.props.containerComponent, {className: 'infinite-container', style: {
      height: (margin + (elementHeight + margin) * Math.ceil(this.props.data.length/elementsPerColumn)) + 'px',
      width: '100%',
      position: 'relative'}
    },
      TransitionGroup(null, elementsToRender)
    );
  },

  render: function(){
    if(this.state.loaded === false){
      return this.props.preRender
	      ? React.createElement(this.props.containerComponent, {className: 'infinite-container', style: {fontSize: '0', position: 'relative', textAlign: this.props.align}},
	          this.props.data.map(function (elementData, i) {
	          return React.createElement(this.props.component, {style: {display: 'inline-block', margin: '32px', verticalAlign: 'top'}}, React.createElement(this.props.childComponent, elementData));
	        }.bind(this)))
	      : null;
    }

    if(this.props.direction === 'horizontal') {
      return this.horizontal();
    } else if(this.props.direction === 'vertical') {
      return this.vertical();
    } else {
      console.warn('the prop `direction` must be either "vertical" or "horizontal". It is set to', this.props.direction);
      return this.vertical();
    }
    
  }

});

module.exports = Infinite;

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./RAFList":17,"./SubContainer":19,"react/addons":63}],21:[function(require,module,exports){
(function (global){
'use strict';

var el;

if(!!global.document){
  el = global.document.createElement('div');
}

var prefixes = ["ms", "Moz", "Webkit", "O"];
var properties = [
  'userSelect',
  'transform',
  'transition',
  'transformOrigin',
  'transformStyle',
  'transitionProperty',
  'transitionDuration',
  'transitionTimingFunction',
  'transitionDelay',
  'borderImage',
  'borderImageSlice',
  'boxShadow',
  'backgroundClip',
  'backfaceVisibility',
  'perspective',
  'perspectiveOrigin',
  'animation',
  'animationDuration',
  'animationName',
  'animationDelay',
  'animationDirection',
  'animationIterationCount',
  'animationTimingFunction',
  'animationPlayState',
  'animationFillMode',
  'appearance'
];

function GetVendorPrefix(property) {
  if(properties.indexOf(property) == -1 || !global.document || typeof el.style[property] !== 'undefined'){
    return property;
  }

  property = property[0].toUpperCase() + property.slice(1);
  var temp;

  for(var i = 0; i < prefixes.length; i++){
    temp = prefixes[i] + property;
    if(typeof el.style[temp] !== 'undefined'){
      prefixes = [prefixes[i]]; // we only need to check this one prefix from now on.
      return temp;
    }
  }
  return property[0].toLowerCase() + property.slice(1);
}


module.exports = (function(){
  var cache = {};
  return function(obj){
    if(!global.document){
      return obj;
    }

    var result = {};

    for(var key in obj){
      if(cache[key] === undefined){
        cache[key] = GetVendorPrefix(key);
      }
      result[cache[key]] = obj[key];
    }

    return result;
  };
})();
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],22:[function(require,module,exports){
"use strict";

var Router                    = require('./lib/Router');
var Route                     = require('./lib/Route');
var Link                      = require('./lib/Link');

var RouterMixin               = require('./lib/RouterMixin');
var AsyncRouteRenderingMixin  = require('./lib/AsyncRouteRenderingMixin');
var RouteRenderingMixin       = require('./lib/RouteRenderingMixin');

var NavigatableMixin          = require('./lib/NavigatableMixin');

var environment               = require('./lib/environment');

var CaptureClicks             = require('./lib/CaptureClicks');

var URLPattern                = require('url-pattern');

var exportsObject = {
  Locations: Router.Locations,
  Pages: Router.Pages,

  Location: Route.Route,
  Page: Route.Route,
  NotFound: Route.NotFound,

  Link: Link,

  environment: environment,

  RouterMixin: RouterMixin,
  RouteRenderingMixin: RouteRenderingMixin,
  AsyncRouteRenderingMixin: AsyncRouteRenderingMixin,

  NavigatableMixin: NavigatableMixin,
  CaptureClicks: CaptureClicks,

  // The fn used to create a compiler for "/user/:id"-style routes is exposed here so it can be overridden.
  createURLPatternCompiler: function() {
    return new URLPattern.Compiler();
  },

  // For ES6 imports, which can't modify module.exports directly
  setCreateURLPatternCompilerFactory: function(fn) {
    exportsObject.createURLPatternCompiler = fn;
  }
};

module.exports = exportsObject;

},{"./lib/AsyncRouteRenderingMixin":23,"./lib/CaptureClicks":24,"./lib/Link":25,"./lib/NavigatableMixin":26,"./lib/Route":27,"./lib/RouteRenderingMixin":28,"./lib/Router":29,"./lib/RouterMixin":30,"./lib/environment":35,"url-pattern":47}],23:[function(require,module,exports){
"use strict";

var assign              = Object.assign || require('object.assign');
var prefetchAsyncState  = require('react-async/lib/prefetchAsyncState');
var isAsyncComponent    = require('react-async/lib/isAsyncComponent');
var RouteRenderingMixin = require('./RouteRenderingMixin');

/**
 * Mixin for router components which prefetches state of async components
 * (as in react-async).
 */
var AsyncRouteRenderingMixin = {
  mixins: [RouteRenderingMixin],

  setRoutingState: function(state, cb) {
    var currentHandler = this.state && this.state.handler;
    var nextHandler = state && state.handler;

    if (nextHandler && nextHandler.type &&
        isAsyncComponent(nextHandler) &&
        // if component's type is the same we would need to skip async state
        // update
        !(currentHandler && currentHandler.type === nextHandler.type)) {
      // store pending state and start fetching async state of a new handler
      this.setState(
        {pendingState: state},
        this.prefetchMatchHandlerState.bind(null, state, cb)
      );
    } else {
      this.replaceState(state, cb);
    }
  },

  hasPendingUpdate: function() {
    return !!this.state.pendingState;
  },

  prefetchMatchHandlerState: function(state, cb) {
    prefetchAsyncState(state.handler, function(err, handler) {
      // check if we router is still mounted and have the same match in state
      // as we started fetching state with
      if (this.isMounted() &&
          this.state.pendingState &&
          this.state.pendingState.match === state.match) {
        var nextState = assign({}, this.state.pendingState, {handler: handler});
        this.replaceState(nextState, cb);

      }
    }.bind(this));
  }
};

module.exports = AsyncRouteRenderingMixin;

},{"./RouteRenderingMixin":28,"object.assign":38,"react-async/lib/isAsyncComponent":15,"react-async/lib/prefetchAsyncState":16}],24:[function(require,module,exports){
"use strict";

var React       = require('react');
var urllite     = require('urllite/lib/core');
var Environment = require('./environment');
var assign      = Object.assign || require('object.assign');

/**
 * A container component which captures <a> clicks and, if there's a matching
 * route defined, routes them.
 */
var CaptureClicks = React.createClass({
  displayName: 'CaptureClicks',

  propTypes: {
    component: React.PropTypes.func.isRequired,
    environment: React.PropTypes.object
  },

  getDefaultProps: function() {
    return {
      component: React.DOM.div,
      environment: Environment.defaultEnvironment,
      gotoURL: function(url) {
        // We should really just be allowing the event's default action, be we
        // can't make the decision to do that synchronously.
        window.location.href = url;
      }
    };
  },

  onClick: function(e) {
    if (this.props.onClick) {
      this.props.onClick(e);
    }

    // Ignore canceled events, modified clicks, and right clicks.
    if (e.defaultPrevented) {
      return;
    }

    if (e.metaKey || e.ctrlKey || e.shiftKey) {
      return;
    }

    if (e.button !== 0) {
      return;
    }

    // Get the <a> element.
    var el = e.target;
    while (el && el.nodeName !== 'A') {
      el = el.parentNode;
    }

    // Ignore clicks from non-a elements.
    if (!el) {
      return;
    }

    // Ignore the click if the element has a target.
    if (el.target && el.target !== '_self') {
      return;
    }

    // Ignore the click if it's a download link. (We use this method of
    // detecting the presence of the attribute for old IE versions.)
    if (el.attributes.download) {
      return;
    }

    // Use a regular expression to parse URLs instead of relying on the browser
    // to do it for us (because IE).
    var url = urllite(el.href);
    var windowURL = urllite(window.location.href);

    // Ignore links that don't share a protocol and host with ours.
    if (url.protocol !== windowURL.protocol || url.host !== windowURL.host) {
      return;
    }

    // Ignore 'rel="external"' links.
    if (el.rel && /(?:^|\s+)external(?:\s+|$)/.test(el.rel)) {
      return;
    }

    e.preventDefault();

    // flag if we already found a "not found" case and bailed
    var bail = false;

    var onBeforeNavigation = function(path, navigation) {
      if (bail) {
        return false;
      } else if (!navigation.match || !navigation.match.match) {
        bail = true;
        this.props.gotoURL(el.href);
        return false;
      }
    }.bind(this);

    this.props.environment.navigate(
      url.pathname + (url.hash.length > 1 ? url.hash : ''),
      {onBeforeNavigation: onBeforeNavigation},
      function(err, info) {
        if (err) {
          throw err;
        }
      });
  },

  render: function() {
    var props = assign({}, this.props, {
      onClick: this.onClick
    });
    return this.props.component(props, this.props.children);
  }

});

module.exports = CaptureClicks;

},{"./environment":35,"object.assign":38,"react":235,"urllite/lib/core":48}],25:[function(require,module,exports){
"use strict";

var React             = require('react');
var NavigatableMixin  = require('./NavigatableMixin');
var Environment       = require('./environment');
var assign            = Object.assign || require('object.assign');

/**
 * Link.
 *
 * A basic navigatable component which renders into <a> DOM element and handles
 * onClick event by transitioning onto different route (defined by
 * this.props.href).
 */
var Link = React.createClass({
  mixins: [NavigatableMixin],

  displayName: 'Link',

  propTypes: {
    href: React.PropTypes.string.isRequired,
    global: React.PropTypes.bool,
    globalHash: React.PropTypes.bool
  },

  onClick: function(e) {
    if (this.props.onClick) {
      this.props.onClick(e);
    }

    // return if the link target is external
    if (this.props.href.match(/^([a-z-]+:|\/\/)/)) return;

    // return if the user did a middle-click, right-click, or used a modifier
    // key (like ctrl-click, meta-click, shift-click, etc.)
    if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return;

    if (!e.defaultPrevented) {
      e.preventDefault();
      this._navigate(this.props.href, function(err) {
        if (err) {
          throw err;
        }
      });
    }
  },

  _navigationParams: function() {
    var params = {};
    for (var k in this.props) {
      if (!this.constructor.propTypes[k]) {
        params[k] = this.props[k];
      }
    }
    return params;
  },

  _createHref: function() {
    return this.props.global ?
      Environment.defaultEnvironment.makeHref(this.props.href) :
      this.makeHref(this.props.href);
  },

  _navigate: function(path, cb) {
    if (this.props.globalHash) {
      return Environment.hashEnvironment.navigate(path, cb);
    }

    if (this.props.global) {
      return Environment.defaultEnvironment.navigate(path, cb);
    }

    return this.navigate(path, this._navigationParams(), cb);
  },

  render: function() {
    var props = assign({}, this.props, {
      onClick: this.onClick,
      href: this._createHref()
    });
    return React.DOM.a(props, this.props.children);
  }
});

module.exports = Link;

},{"./NavigatableMixin":26,"./environment":35,"object.assign":38,"react":235}],26:[function(require,module,exports){
"use strict";

var React       = require('react');
var Environment = require('./environment');


/**
 * NavigatableMixin
 *
 * A mixin for a component which operates in context of a router and can
 * navigate to a different route using `navigate(path, navigation, cb)` method.
 */
var NavigatableMixin = {

  contextTypes: {
    router: React.PropTypes.any
  },

  /**
   * @private
   */
  _getNavigable: function() {
    return this.context.router || Environment.defaultEnvironment;
  },

  getPath: function() {
    return this._getNavigable().getPath();
  },

  navigate: function(path, navigation, cb) {
    return this._getNavigable().navigate(path, navigation, cb);
  },

  makeHref: function(path) {
    return this._getNavigable().makeHref(path);
  }
};

module.exports = NavigatableMixin;

},{"./environment":35,"react":235}],27:[function(require,module,exports){
"use strict";

var React = require('react');

function createClass(name) {
  return React.createClass({
    displayName: name,
    propTypes: {
      handler: React.PropTypes.oneOfType([
        // Can be ReactElement or ReactComponent, unfortunately there is no way to typecheck
        // ReactComponent (that I know of)
        React.PropTypes.element,
        React.PropTypes.func
      ]),
      path: name === 'NotFound' ?
        function(props, propName) {
          if (props[propName]) throw new Error("Don't pass a `path` to NotFound.");
        }
        : React.PropTypes.oneOfType([
            React.PropTypes.string,
            React.PropTypes.instanceOf(RegExp)
          ]).isRequired
    },
    getDefaultProps: function() {
      if (name === 'NotFound') {
        return {path: null};
      }
      return {};
    },
    render: function() {
      throw new Error(name + " is not meant to be directly rendered.");
    }
  });
}

module.exports = {
  /**
   * Regular route descriptor.
   *
   * @param {Object} spec
   */
  Route: createClass('Route'),
  /**
   * Catch all route descriptor.
   *
   * @param {Object} spec
   */
  NotFound: createClass('NotFound')
};

},{"react":235}],28:[function(require,module,exports){
"use strict";

var React = require('react');
var cloneWithProps = require('react/lib/cloneWithProps');
var assign = Object.assign || require('object.assign');


/**
 * Mixin for routers which implements the simplest rendering strategy.
 */
var RouteRenderingMixin = {

  renderRouteHandler: function(props) {
    if (!this.state.match.route) {
      throw new Error("React-router-component: No route matched! Did you define a NotFound route?");
    }
    var handler = this.state.handler;
    props = assign({ref: this.state.match.route.ref}, props);
    // If we were passed an element, we need to clone it before passing it along.
    if (React.isValidElement(handler)) {
      return cloneWithProps(handler, props);
    }
    return React.createElement(handler, props);
  }

};

module.exports = RouteRenderingMixin;

},{"object.assign":38,"react":235,"react/lib/cloneWithProps":185}],29:[function(require,module,exports){
"use strict";

var React                     = require('react');
var RouterMixin               = require('./RouterMixin');
var AsyncRouteRenderingMixin  = require('./AsyncRouteRenderingMixin');
var assign                    = Object.assign || require('object.assign');

/**
 * Create a new router class
 *
 * @param {String} name
 * @param {ReactComponent} component
 */
function createRouter(name, component) {

  return React.createClass({

    mixins: [RouterMixin, AsyncRouteRenderingMixin],

    displayName: name,

    getRoutes: function(props) {
      return props.children;
    },

    getDefaultProps: function() {
      return {
        component: component
      };
    },

    render: function() {
      // Render the Route's handler.
      var handler = this.renderRouteHandler();
      // Pass all props except this component to the Router (containing div/body).
      var props = assign({}, this.props);
      delete props.component;
      return React.createElement(this.props.component, props, handler);
    }
  });
}

module.exports = {
  createRouter: createRouter,
  Locations: createRouter('Locations', 'div'),
  Pages: createRouter('Pages', 'body')
};

},{"./AsyncRouteRenderingMixin":23,"./RouterMixin":30,"object.assign":38,"react":235}],30:[function(require,module,exports){
"use strict";

var React         = require('react');
var invariant     = require('react/lib/invariant');
var assign        = Object.assign || require('object.assign');
var matchRoutes   = require('./matchRoutes');
var Environment   = require('./environment');

var RouterMixin = {
  mixins: [Environment.Mixin],

  propTypes: {
    path: React.PropTypes.string,
    contextual: React.PropTypes.bool,
    onBeforeNavigation: React.PropTypes.func,
    onNavigation: React.PropTypes.func
  },

  childContextTypes: {
    router: React.PropTypes.any
  },

  getChildContext: function() {
    return {
      router: this
    };
  },

  contextTypes: {
    router: React.PropTypes.any
  },

  getInitialState: function() {
    return this.getRouterState(this.props);
  },

  componentWillReceiveProps: function(nextProps) {
    var nextState = this.getRouterState(nextProps);
    this.delegateSetRoutingState(nextState);
  },

  getRouterState: function(props) {
    var path;
    var prefix;

    var parent = props.contextual && this.getParentRouter();

    if (parent) {

      var parentMatch = parent.getMatch();

      invariant(
        props.path ||
        isString(parentMatch.unmatchedPath) ||
        parentMatch.matchedPath === parentMatch.path,
        "contextual router has nothing to match on: %s", parentMatch.unmatchedPath
      );

      path = props.path || parentMatch.unmatchedPath || '/';
      prefix = parent.state.prefix + parentMatch.matchedPath;
    } else {

      path = props.path || this.getEnvironment().getPath();

      invariant(
        isString(path),
        ("router operate in environment which cannot provide path, " +
         "pass it a path prop; or probably you want to make it contextual")
      );

      prefix = '';
    }

    if (path[0] !== '/') {
      path = '/' + path;
    }

    var match = matchRoutes(this.getRoutes(props), path);
    var handler = match.getHandler();

    return {
      match: match,
      handler: handler,
      prefix: prefix,
      navigation: {}
    };
  },

  getEnvironment: function() {
    if (this.props.environment) {
      return this.props.environment;
    }
    if (this.props.hash) {
      return Environment.hashEnvironment;
    }
    if (this.props.contextual && this.context.router) {
      return this.context.router.getEnvironment();
    }
    return Environment.defaultEnvironment;
  },

  /**
   * Return parent router or undefined.
   */
  getParentRouter: function() {
    var current = this.context.router;
    var environment = this.getEnvironment();

    if (current) {
      if (current.getEnvironment() === environment) {
        return current;
      }
    }
  },

  /**
   * Return current match.
   */
  getMatch: function() {
    return this.state.match;
  },

  /**
   * Make href scoped for the current router.
   */
  makeHref: function(href) {
    return join(this.state.prefix, href);
  },

  /**
   * Navigate to a path
   *
   * @param {String} path
   * @param {Function} navigation
   * @param {Callback} cb
   */
  navigate: function(path, navigation, cb) {
    path = join(this.state.prefix, path);
    this.getEnvironment().setPath(path, navigation, cb);
  },

  /**
   * Set new path.
   *
   * This function is called by environment.
   *
   * @private
   *
   * @param {String} path
   * @param {Function} navigation
   * @param {Callback} cb
   */
  setPath: function(path, navigation, cb) {
    var match = matchRoutes(this.getRoutes(this.props), path);
    var handler = match.getHandler();

    var state = {
      match: match,
      handler: handler,
      prefix: this.state.prefix,
      navigation: navigation
    };

    assign(navigation, {match: match});

    if (this.props.onBeforeNavigation &&
        this.props.onBeforeNavigation(path, navigation) === false) {
      return;
    }

    if (navigation.onBeforeNavigation &&
        navigation.onBeforeNavigation(path, navigation) === false) {
      return;
    }

    this.delegateSetRoutingState(state, function() {
      if (this.props.onNavigation) {
        this.props.onNavigation();
      }
      cb();
    }.bind(this));
  },

  /**
   * Return the current path
   */
  getPath: function () {
    return this.state.match.path;
  },

  /**
   * Try to delegate state update to a setRoutingState method (might be provided
   * by router itself) or use replaceState.
   */
  delegateSetRoutingState: function(state, cb) {
    if (this.setRoutingState) {
      this.setRoutingState(state, cb);
    } else {
      this.replaceState(state, cb);
    }
  }

};

function join(a, b) {
  return (a + b).replace(/\/\//g, '/');
}

function isString(o) {
  return Object.prototype.toString.call(o) === '[object String]';
}

module.exports = RouterMixin;

},{"./environment":35,"./matchRoutes":36,"object.assign":38,"react":235,"react/lib/invariant":213}],31:[function(require,module,exports){
"use strict";

var Environment   = require('./Environment');
var emptyFunction = require('react/lib/emptyFunction');

/**
 * Dummy routing environment which provides no path.
 *
 * Should be used on server or in WebWorker.
 */
function DummyEnvironment() {
  Environment.call(this);
}

DummyEnvironment.prototype = Object.create(Environment.prototype);
DummyEnvironment.prototype.constructor = DummyEnvironment;

DummyEnvironment.prototype.getPath = emptyFunction.thatReturnsNull;

DummyEnvironment.prototype.setPath = function(path, navigation, cb) {
  // Support old (path, cb) arity
  if (typeof navigation === 'function' && cb === undefined) {
    cb = navigation;
    navigation = {};
  }
  this.path = path;
  cb();
};

DummyEnvironment.prototype.start = emptyFunction;

DummyEnvironment.prototype.stop = emptyFunction;

module.exports = DummyEnvironment;

},{"./Environment":32,"react/lib/emptyFunction":192}],32:[function(require,module,exports){
"use strict";

// batchedUpdates is now exposed in 0.12
var batchedUpdates = require('react').batchedUpdates || require('react/lib/ReactUpdates').batchedUpdates;

/**
 * Base abstract class for a routing environment.
 *
 * @private
 */
function Environment() {
  this.routers = [];
  this.path = this.getPath();
}

/**
 * Notify routers about the change.
 *
 * @param {Object} navigation
 * @param {Function} cb
 */
Environment.prototype.notify = function notify(navigation, cb) {
  var latch = this.routers.length;

  if (latch === 0) {
    return cb && cb();
  }

  function callback() {
    latch -= 1;
    if (cb && latch === 0) {
      cb();
    }
  }

  batchedUpdates(function() {
    for (var i = 0, len = this.routers.length; i < len; i++) {
      this.routers[i].setPath(this.path, navigation, callback);
    }
  }.bind(this));
};

Environment.prototype.makeHref = function makeHref(path) {
  return path;
};

Environment.prototype.navigate = function navigate(path, navigation, cb) {
  return this.setPath(path, navigation, cb);
};

Environment.prototype.setPath = function(path, navigation, cb) {
  // Support (path, cb) arity.
  if (typeof navigation === 'function' && cb === undefined) {
    cb = navigation;
    navigation = {};
  }
  // Support (path) arity.
  if (!navigation) navigation = {};

  if (!navigation.isPopState) {
    if (navigation.replace) {
      this.replaceState(path, navigation);
    } else {
      this.pushState(path, navigation);
    }
  }
  this.path = path;
  this.notify(navigation, cb);
};

/**
 * Register router with an environment.
 */
Environment.prototype.register = function register(router) {
  if (this.routers.length === 0) {
    this.start();
  }

  if (router.getParentRouter === undefined || !router.getParentRouter()) {
    this.routers.push(router);
  }
};

/**
 * Unregister router from an environment.
 */
Environment.prototype.unregister = function unregister(router) {
  if (this.routers.indexOf(router) > -1) {
    this.routers.splice(this.routers.indexOf(router), 1);
  }

  if (this.routers.length === 0) {
    this.stop();
  }
};

module.exports = Environment;

},{"react":235,"react/lib/ReactUpdates":162}],33:[function(require,module,exports){
"use strict";

var Environment = require('./Environment');

/**
 * Routing environment which routes by `location.hash`.
 */
function HashEnvironment() {
  this.onHashChange = this.onHashChange.bind(this);
  Environment.call(this);
}

HashEnvironment.prototype = Object.create(Environment.prototype);
HashEnvironment.prototype.constructor = HashEnvironment;

HashEnvironment.prototype.getPath = function() {
  return window.location.hash.slice(1) || '/';
};

HashEnvironment.prototype.pushState = function(path, navigation) {
  window.location.hash = path;
};

HashEnvironment.prototype.replaceState = function(path, navigation) {
  var href = window.location.href.replace(/(javascript:|#).*$/, '');
  window.location.replace(href + '#' + path);
};

HashEnvironment.prototype.start = function() {
  if (window.addEventListener) {
    window.addEventListener('hashchange', this.onHashChange);
  } else {
    window.attachEvent('onhashchange', this.onHashChange);
  }
};

HashEnvironment.prototype.stop = function() {
  if (window.removeEventListener) {
    window.removeEventListener('hashchange', this.onHashChange);
  } else {
    window.detachEvent('onhashchange', this.onHashChange);
  }
};

HashEnvironment.prototype.onHashChange = function() {
  var path = this.getPath();

  if (this.path !== path) {
    this.setPath(path, {isPopState: true});
  }
};

module.exports = HashEnvironment;

},{"./Environment":32}],34:[function(require,module,exports){
"use strict";

var Environment = require('./Environment');

/**
 * Routing environment which routes by `location.pathname`.
 */
function PathnameEnvironment() {
  this.onPopState = this.onPopState.bind(this);
  this.useHistoryApi = !!(window.history &&
                          window.history.pushState &&
                          window.history.replaceState);
  Environment.call(this);
}

PathnameEnvironment.prototype = Object.create(Environment.prototype);
PathnameEnvironment.prototype.constructor = PathnameEnvironment;

PathnameEnvironment.prototype.getPath = function() {
  return window.location.pathname;
};

PathnameEnvironment.prototype.pushState = function(path, navigation) {
  if (this.useHistoryApi) {
    window.history.pushState({}, '', path);
  } else {
    window.location.pathname = path;
  }
};

PathnameEnvironment.prototype.replaceState = function(path, navigation) {
  if (this.useHistoryApi) {
    window.history.replaceState({}, '', path);
  } else {
    window.location.pathname = path;
  }
};

PathnameEnvironment.prototype.start = function() {
  if (this.useHistoryApi && window.addEventListener) {
    window.addEventListener('popstate', this.onPopState);
  }
};

PathnameEnvironment.prototype.stop = function() {
  if (this.useHistoryApi && window.removeEventListener) {
    window.removeEventListener('popstate', this.onPopState);
  }
};

PathnameEnvironment.prototype.onPopState = function(e) {
  var path = window.location.pathname;

  if (this.path !== path) {
    this.setPath(path, {isPopState: true});
  }
};

module.exports = PathnameEnvironment;

},{"./Environment":32}],35:[function(require,module,exports){
"use strict";
/**
 * Routing environment.
 *
 * It specifies how routers read its state from DOM and synchronise it back.
 */

var ExecutionEnvironment  = require('react/lib/ExecutionEnvironment');
var DummyEnvironment      = require('./DummyEnvironment');
var Environment           = require('./Environment');

/**
 * Mixin for routes to keep attached to an environment.
 *
 * This mixin assumes the environment is passed via props.
 */
var Mixin = {

  componentDidMount: function() {
    this.getEnvironment().register(this);
  },

  componentWillUnmount: function() {
    this.getEnvironment().unregister(this);
  }
};

var PathnameEnvironment;
var HashEnvironment;

var pathnameEnvironment;
var hashEnvironment;
var defaultEnvironment;
var dummyEnvironment;

if (ExecutionEnvironment.canUseDOM) {

  PathnameEnvironment = require('./PathnameEnvironment');
  HashEnvironment     = require('./HashEnvironment');

  pathnameEnvironment = new PathnameEnvironment();
  hashEnvironment     = new HashEnvironment();
  defaultEnvironment  = (window.history !== undefined &&
                         window.history.pushState !== undefined) ?
                        pathnameEnvironment :
                        hashEnvironment;

} else {

  dummyEnvironment    = new DummyEnvironment();
  pathnameEnvironment = dummyEnvironment;
  hashEnvironment     = dummyEnvironment;
  defaultEnvironment  = dummyEnvironment;

}

module.exports = {
  pathnameEnvironment: pathnameEnvironment,
  hashEnvironment: hashEnvironment,
  defaultEnvironment: defaultEnvironment,
  dummyEnvironment: dummyEnvironment,

  Environment: Environment,
  PathnameEnvironment: PathnameEnvironment,
  HashEnvironment: HashEnvironment,

  Mixin: Mixin
};

},{"./DummyEnvironment":31,"./Environment":32,"./HashEnvironment":33,"./PathnameEnvironment":34,"react/lib/ExecutionEnvironment":84}],36:[function(require,module,exports){
(function (process){
"use strict";

var URLPattern = require('url-pattern');
var invariant = require('react/lib/invariant');
var React = require('react');
var cloneWithProps = require('react/lib/cloneWithProps');
var assign = Object.assign || require('object.assign');
var qs = require('qs');

var patternCache = {};

/**
 * Match routes against a path
 *
 * @param {Array.<Route>} routes
 * @param {String} path
 */
function matchRoutes(routes, path) {
  var createCompiler = require('../index').createURLPatternCompiler;

  var match, page, notFound, queryObj;

  if (!Array.isArray(routes)) {
    routes = [routes];
  }

  path = path.split('?');
  var pathToMatch = path[0];
  var queryString = path[1];
  if (queryString) {
    queryObj = qs.parse(queryString);
  }

  for (var i = 0, len = routes.length; i < len; i++) {
    var current = routes[i];
    // Simply skip null or undefined to allow ternaries in route definitions
    if (!current) continue;

    if (process.env.NODE_ENV !== "production") {
      invariant(
        current.props.handler !== undefined && current.props.path !== undefined,
        "Router should contain either Route or NotFound components as routes");
    }

    if (current.props.path) {
      // Technically, this cache will incorrectly be used if a user defines two routes
      // with identical paths but different compilers. FIXME?
      var pattern = patternCache[current.props.path] ||
                    new URLPattern(current.props.path, createCompiler(current.props));
      if (!page) {
        match = pattern.match(pathToMatch);
        if (match) {
          page = current;
        }
        // Parse RegExp matches, which are returned as an array rather an an object.
        if (Array.isArray(match)) {
          match = parseMatch(current, match);
        }

        // Backcompat fix; url-pattern removed the array wrapper
        if (match && match._ && !Array.isArray(match._)) {
          match._ = [match._];
        }

      }
    }
    if (!notFound && current.props.path === null) {
      notFound = current;
    }
  }

  return new Match(
    pathToMatch,
    page ? page : notFound ? notFound : null,
    match,
    queryObj
  );
}

/**
 * Given the currently matched Location & the match array, transform the matches to named key/value pairs,
 * if possible.
 * @param  {Route} current Matched Route.
 * @param  {Array} match   Array of matches from RegExp.
 * @return {Object}        Key/value pairs to feed to the route's handler.
 */
function parseMatch(current, match) {
  if (Array.isArray(current.props.matchKeys)) {
    return current.props.matchKeys.reduce(function(memo, key, i) {
      memo[key] = match[i];
      return memo;
    }, {});
  }
  return {_: match};
}

/**
 * Match object
 *
 * @private
 */
function Match(path, route, match, query) {
  this.path = path;
  this.route = route;
  this.match = match;
  this.query = query;

  this.unmatchedPath = this.match && this.match._ ?
    this.match._[0] :
    null;

  this.matchedPath = this.unmatchedPath ?
    this.path.substring(0, this.path.length - this.unmatchedPath.length) :
    this.path;
}

Match.prototype.getHandler = function() {
  if (!this.route) return undefined;

  var props = assign({}, this.route.props, this.match);
  // Querystring is assigned as _query.
  props._query = this.query || {};

  // Delete props that shouldn't be passed to the handler.
  delete props.pattern;
  delete props.path;
  delete props.handler;

  var handler = this.route.props.handler;
  // Passed an element - clone it with the props from the route
  if (React.isValidElement(handler)) {
    return cloneWithProps(handler, props);
  }
  // Passed a component descriptor - create an element. Assign it the ref
  // from the <Location> tag.
  return React.createElement(handler, props);
};

module.exports = matchRoutes;

}).call(this,require('_process'))
},{"../index":22,"_process":417,"object.assign":38,"qs":43,"react":235,"react/lib/cloneWithProps":185,"react/lib/invariant":213,"url-pattern":47}],37:[function(require,module,exports){
var keys = require('object-keys');

module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	if (typeof sym === 'string') { return false; }
	if (sym instanceof Symbol) { return false; }
	obj[sym] = 42;
	for (sym in obj) { return false; }
	if (keys(obj).length !== 0) { return false; }
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== 42 || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{"object-keys":41}],38:[function(require,module,exports){
'use strict';

// modified from https://github.com/es-shims/es6-shim
var keys = require('object-keys');
var canBeObject = function (obj) {
	return typeof obj !== 'undefined' && obj !== null;
};
var hasSymbols = require('./hasSymbols')();
var defineProperties = require('define-properties');
var toObject = Object;
var push = Array.prototype.push;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

var assignShim = function assign(target, source1) {
	if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
	var objTarget = toObject(target);
	var s, source, i, props, syms;
	for (s = 1; s < arguments.length; ++s) {
		source = toObject(arguments[s]);
		props = keys(source);
		if (hasSymbols && Object.getOwnPropertySymbols) {
			syms = Object.getOwnPropertySymbols(source);
			for (i = 0; i < syms.length; ++i) {
				if (propIsEnumerable.call(source, syms[i])) {
					push.call(props, syms[i]);
				}
			}
		}
		for (i = 0; i < props.length; ++i) {
			objTarget[props[i]] = source[props[i]];
		}
	}
	return objTarget;
};

defineProperties(assignShim, {
	shim: function shimObjectAssign() {
		var assignHasPendingExceptions = function () {
			if (!Object.assign || !Object.preventExtensions) {
				return false;
			}
			// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
			// which is 72% slower than our shim, and Firefox 40's native implementation.
			var thrower = Object.preventExtensions({ 1: 2 });
			try {
				Object.assign(thrower, 'xy');
			} catch (e) {
				return thrower[1] === 'y';
			}
		};
		defineProperties(
			Object,
			{ assign: assignShim },
			{ assign: assignHasPendingExceptions }
		);
		return Object.assign || assignShim;
	}
});

module.exports = assignShim;

},{"./hasSymbols":37,"define-properties":39,"object-keys":41}],39:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var foreach = require('foreach');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol() === 'symbol';

var toStr = Object.prototype.toString;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		Object.defineProperty(obj, 'x', { value: obj, enumerable: false });
        /* eslint-disable no-unused-vars */
        for (var _ in obj) { return false; }
        /* eslint-enable no-unused-vars */
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		Object.defineProperty(object, name, {
			configurable: true,
			enumerable: false,
			writable: true,
			value: value
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = props.concat(Object.getOwnPropertySymbols(map));
	}
	foreach(props, function (name) {
		defineProperty(object, name, map[name], predicates[name]);
	});
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"foreach":40,"object-keys":41}],40:[function(require,module,exports){

var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

module.exports = function forEach (obj, fn, ctx) {
    if (toString.call(fn) !== '[object Function]') {
        throw new TypeError('iterator must be a function');
    }
    var l = obj.length;
    if (l === +l) {
        for (var i = 0; i < l; i++) {
            fn.call(ctx, obj[i], i, obj);
        }
    } else {
        for (var k in obj) {
            if (hasOwn.call(obj, k)) {
                fn.call(ctx, obj[k], k, obj);
            }
        }
    }
};


},{}],41:[function(require,module,exports){
'use strict';

// modified from https://github.com/es-shims/es5-shim
var has = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var slice = Array.prototype.slice;
var isArgs = require('./isArguments');
var hasDontEnumBug = !({ 'toString': null }).propertyIsEnumerable('toString');
var hasProtoEnumBug = function () {}.propertyIsEnumerable('prototype');
var dontEnums = [
	'toString',
	'toLocaleString',
	'valueOf',
	'hasOwnProperty',
	'isPrototypeOf',
	'propertyIsEnumerable',
	'constructor'
];
var equalsConstructorPrototype = function (o) {
	var ctor = o.constructor;
	return ctor && ctor.prototype === o;
};
var blacklistedKeys = {
	$window: true,
	$console: true,
	$parent: true,
	$self: true,
	$frames: true,
	$webkitIndexedDB: true,
	$webkitStorageInfo: true
};
var hasAutomationEqualityBug = (function () {
	/* global window */
	if (typeof window === 'undefined') { return false; }
	for (var k in window) {
		if (!blacklistedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
			try {
				equalsConstructorPrototype(window[k]);
			} catch (e) {
				return true;
			}
		}
	}
	return false;
}());
var equalsConstructorPrototypeIfNotBuggy = function (o) {
	/* global window */
	if (typeof window === 'undefined' && !hasAutomationEqualityBug) {
		return equalsConstructorPrototype(o);
	}
	try {
		return equalsConstructorPrototype(o);
	} catch (e) {
		return false;
	}
};

var keysShim = function keys(object) {
	var isObject = object !== null && typeof object === 'object';
	var isFunction = toStr.call(object) === '[object Function]';
	var isArguments = isArgs(object);
	var isString = isObject && toStr.call(object) === '[object String]';
	var theKeys = [];

	if (!isObject && !isFunction && !isArguments) {
		throw new TypeError('Object.keys called on a non-object');
	}

	var skipProto = hasProtoEnumBug && isFunction;
	if (isString && object.length > 0 && !has.call(object, 0)) {
		for (var i = 0; i < object.length; ++i) {
			theKeys.push(String(i));
		}
	}

	if (isArguments && object.length > 0) {
		for (var j = 0; j < object.length; ++j) {
			theKeys.push(String(j));
		}
	} else {
		for (var name in object) {
			if (!(skipProto && name === 'prototype') && has.call(object, name)) {
				theKeys.push(String(name));
			}
		}
	}

	if (hasDontEnumBug) {
		var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

		for (var k = 0; k < dontEnums.length; ++k) {
			if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
				theKeys.push(dontEnums[k]);
			}
		}
	}
	return theKeys;
};

keysShim.shim = function shimObjectKeys() {
	if (!Object.keys) {
		Object.keys = keysShim;
	} else {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			return (Object.keys(arguments) || '').length === 2;
		}(1, 2));
		if (!keysWorksWithArguments) {
			var originalKeys = Object.keys;
			Object.keys = function keys(object) {
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				} else {
					return originalKeys(object);
				}
			};
		}
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./isArguments":42}],42:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],43:[function(require,module,exports){
// Load modules

var Stringify = require('./stringify');
var Parse = require('./parse');


// Declare internals

var internals = {};


module.exports = {
    stringify: Stringify,
    parse: Parse
};

},{"./parse":44,"./stringify":45}],44:[function(require,module,exports){
// Load modules

var Utils = require('./utils');


// Declare internals

var internals = {
    delimiter: '&',
    depth: 5,
    arrayLimit: 20,
    parameterLimit: 1000,
    strictNullHandling: false,
    plainObjects: false,
    allowPrototypes: false
};


internals.parseValues = function (str, options) {

    var obj = {};
    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);

    for (var i = 0, il = parts.length; i < il; ++i) {
        var part = parts[i];
        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;

        if (pos === -1) {
            obj[Utils.decode(part)] = '';

            if (options.strictNullHandling) {
                obj[Utils.decode(part)] = null;
            }
        }
        else {
            var key = Utils.decode(part.slice(0, pos));
            var val = Utils.decode(part.slice(pos + 1));

            if (!Object.prototype.hasOwnProperty.call(obj, key)) {
                obj[key] = val;
            }
            else {
                obj[key] = [].concat(obj[key]).concat(val);
            }
        }
    }

    return obj;
};


internals.parseObject = function (chain, val, options) {

    if (!chain.length) {
        return val;
    }

    var root = chain.shift();

    var obj;
    if (root === '[]') {
        obj = [];
        obj = obj.concat(internals.parseObject(chain, val, options));
    }
    else {
        obj = options.plainObjects ? Object.create(null) : {};
        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;
        var index = parseInt(cleanRoot, 10);
        var indexString = '' + index;
        if (!isNaN(index) &&
            root !== cleanRoot &&
            indexString === cleanRoot &&
            index >= 0 &&
            (options.parseArrays &&
             index <= options.arrayLimit)) {

            obj = [];
            obj[index] = internals.parseObject(chain, val, options);
        }
        else {
            obj[cleanRoot] = internals.parseObject(chain, val, options);
        }
    }

    return obj;
};


internals.parseKeys = function (key, val, options) {

    if (!key) {
        return;
    }

    // Transform dot notation to bracket notation

    if (options.allowDots) {
        key = key.replace(/\.([^\.\[]+)/g, '[$1]');
    }

    // The regex chunks

    var parent = /^([^\[\]]*)/;
    var child = /(\[[^\[\]]*\])/g;

    // Get the parent

    var segment = parent.exec(key);

    // Stash the parent if it exists

    var keys = [];
    if (segment[1]) {
        // If we aren't using plain objects, optionally prefix keys
        // that would overwrite object prototype properties
        if (!options.plainObjects &&
            Object.prototype.hasOwnProperty(segment[1])) {

            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(segment[1]);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while ((segment = child.exec(key)) !== null && i < options.depth) {

        ++i;
        if (!options.plainObjects &&
            Object.prototype.hasOwnProperty(segment[1].replace(/\[|\]/g, ''))) {

            if (!options.allowPrototypes) {
                continue;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return internals.parseObject(keys, val, options);
};


module.exports = function (str, options) {

    options = options || {};
    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;
    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;
    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;
    options.parseArrays = options.parseArrays !== false;
    options.allowDots = options.allowDots !== false;
    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;
    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;
    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;
    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;

    if (str === '' ||
        str === null ||
        typeof str === 'undefined') {

        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0, il = keys.length; i < il; ++i) {
        var key = keys[i];
        var newObj = internals.parseKeys(key, tempObj[key], options);
        obj = Utils.merge(obj, newObj, options);
    }

    return Utils.compact(obj);
};

},{"./utils":46}],45:[function(require,module,exports){
// Load modules

var Utils = require('./utils');


// Declare internals

var internals = {
    delimiter: '&',
    arrayPrefixGenerators: {
        brackets: function (prefix, key) {

            return prefix + '[]';
        },
        indices: function (prefix, key) {

            return prefix + '[' + key + ']';
        },
        repeat: function (prefix, key) {

            return prefix;
        }
    },
    strictNullHandling: false
};


internals.stringify = function (obj, prefix, generateArrayPrefix, strictNullHandling, filter) {

    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    }
    else if (Utils.isBuffer(obj)) {
        obj = obj.toString();
    }
    else if (obj instanceof Date) {
        obj = obj.toISOString();
    }
    else if (obj === null) {
        if (strictNullHandling) {
            return Utils.encode(prefix);
        }

        obj = '';
    }

    if (typeof obj === 'string' ||
        typeof obj === 'number' ||
        typeof obj === 'boolean') {

        return [Utils.encode(prefix) + '=' + Utils.encode(obj)];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys = Array.isArray(filter) ? filter : Object.keys(obj);
    for (var i = 0, il = objKeys.length; i < il; ++i) {
        var key = objKeys[i];

        if (Array.isArray(obj)) {
            values = values.concat(internals.stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, filter));
        }
        else {
            values = values.concat(internals.stringify(obj[key], prefix + '[' + key + ']', generateArrayPrefix, strictNullHandling, filter));
        }
    }

    return values;
};


module.exports = function (obj, options) {

    options = options || {};
    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;
    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;
    var objKeys;
    var filter;
    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    }
    else if (Array.isArray(options.filter)) {
        objKeys = filter = options.filter;
    }

    var keys = [];

    if (typeof obj !== 'object' ||
        obj === null) {

        return '';
    }

    var arrayFormat;
    if (options.arrayFormat in internals.arrayPrefixGenerators) {
        arrayFormat = options.arrayFormat;
    }
    else if ('indices' in options) {
        arrayFormat = options.indices ? 'indices' : 'repeat';
    }
    else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = internals.arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }
    for (var i = 0, il = objKeys.length; i < il; ++i) {
        var key = objKeys[i];
        keys = keys.concat(internals.stringify(obj[key], key, generateArrayPrefix, strictNullHandling, filter));
    }

    return keys.join(delimiter);
};

},{"./utils":46}],46:[function(require,module,exports){
// Load modules


// Declare internals

var internals = {};
internals.hexTable = new Array(256);
for (var h = 0; h < 256; ++h) {
    internals.hexTable[h] = '%' + ((h < 16 ? '0' : '') + h.toString(16)).toUpperCase();
}


exports.arrayToObject = function (source, options) {

    var obj = options.plainObjects ? Object.create(null) : {};
    for (var i = 0, il = source.length; i < il; ++i) {
        if (typeof source[i] !== 'undefined') {

            obj[i] = source[i];
        }
    }

    return obj;
};


exports.merge = function (target, source, options) {

    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (Array.isArray(target)) {
            target.push(source);
        }
        else if (typeof target === 'object') {
            target[source] = true;
        }
        else {
            target = [target, source];
        }

        return target;
    }

    if (typeof target !== 'object') {
        target = [target].concat(source);
        return target;
    }

    if (Array.isArray(target) &&
        !Array.isArray(source)) {

        target = exports.arrayToObject(target, options);
    }

    var keys = Object.keys(source);
    for (var k = 0, kl = keys.length; k < kl; ++k) {
        var key = keys[k];
        var value = source[key];

        if (!Object.prototype.hasOwnProperty.call(target, key)) {
            target[key] = value;
        }
        else {
            target[key] = exports.merge(target[key], value, options);
        }
    }

    return target;
};


exports.decode = function (str) {

    try {
        return decodeURIComponent(str.replace(/\+/g, ' '));
    } catch (e) {
        return str;
    }
};

exports.encode = function (str) {

    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    if (typeof str !== 'string') {
        str = '' + str;
    }

    var out = '';
    for (var i = 0, il = str.length; i < il; ++i) {
        var c = str.charCodeAt(i);

        if (c === 0x2D || // -
            c === 0x2E || // .
            c === 0x5F || // _
            c === 0x7E || // ~
            (c >= 0x30 && c <= 0x39) || // 0-9
            (c >= 0x41 && c <= 0x5A) || // a-z
            (c >= 0x61 && c <= 0x7A)) { // A-Z

            out += str[i];
            continue;
        }

        if (c < 0x80) {
            out += internals.hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out += internals.hexTable[0xC0 | (c >> 6)] + internals.hexTable[0x80 | (c & 0x3F)];
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out += internals.hexTable[0xE0 | (c >> 12)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
            continue;
        }

        ++i;
        c = 0x10000 + (((c & 0x3FF) << 10) | (str.charCodeAt(i) & 0x3FF));
        out += internals.hexTable[0xF0 | (c >> 18)] + internals.hexTable[0x80 | ((c >> 12) & 0x3F)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

exports.compact = function (obj, refs) {

    if (typeof obj !== 'object' ||
        obj === null) {

        return obj;
    }

    refs = refs || [];
    var lookup = refs.indexOf(obj);
    if (lookup !== -1) {
        return refs[lookup];
    }

    refs.push(obj);

    if (Array.isArray(obj)) {
        var compacted = [];

        for (var i = 0, il = obj.length; i < il; ++i) {
            if (typeof obj[i] !== 'undefined') {
                compacted.push(obj[i]);
            }
        }

        return compacted;
    }

    var keys = Object.keys(obj);
    for (i = 0, il = keys.length; i < il; ++i) {
        var key = keys[i];
        obj[key] = exports.compact(obj[key], refs);
    }

    return obj;
};


exports.isRegExp = function (obj) {

    return Object.prototype.toString.call(obj) === '[object RegExp]';
};


exports.isBuffer = function (obj) {

    if (obj === null ||
        typeof obj === 'undefined') {

        return false;
    }

    return !!(obj.constructor &&
              obj.constructor.isBuffer &&
              obj.constructor.isBuffer(obj));
};

},{}],47:[function(require,module,exports){
// Generated by CoffeeScript 1.9.2
(function(root, factory) {
  if (('function' === typeof define) && (define.amd != null)) {
    return define([], factory);
  } else if (typeof exports !== "undefined" && exports !== null) {
    return module.exports = factory();
  } else {
    return root.UrlPattern = factory();
  }
})(this, function() {
  var Compiler, UrlPattern, escapeForRegex;
  escapeForRegex = function(string) {
    return string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
  };
  Compiler = function() {};
  Compiler.prototype.escapeChar = '\\';
  Compiler.prototype.segmentNameStartChar = ':';
  Compiler.prototype.segmentNameCharset = 'a-zA-Z0-9';
  Compiler.prototype.segmentValueCharset = 'a-zA-Z0-9-_ %';
  Compiler.prototype.optionalSegmentStartChar = '(';
  Compiler.prototype.optionalSegmentEndChar = ')';
  Compiler.prototype.wildcardChar = '*';
  Compiler.prototype.segmentValueRegexString = function() {
    return "([" + this.segmentValueCharset + "]+)";
  };
  Compiler.prototype.segmentNameCharRegex = function() {
    return new RegExp('^[' + this.segmentNameCharset + ']$');
  };
  Compiler.prototype.transition = function(nextMode) {
    if (this.mode === nextMode) {
      if (this.mode === 'namedSegment' || this.mode === 'staticSegment') {
        this.segment += this.char;
      }
      return;
    }
    if (this.mode === 'staticSegmentEscapeNextChar' && nextMode === 'staticSegment') {
      this.segment += this.char;
      this.mode = nextMode;
      return;
    }
    if (!(this.mode === 'staticSegment' && nextMode === 'staticSegmentEscapeNextChar')) {
      switch (this.mode) {
        case 'namedSegment':
          this.names.push(this.segment);
          this.regexString += this.segmentValueRegexString();
          break;
        case 'staticSegment':
          this.regexString += escapeForRegex(this.segment);
          break;
        case 'namedSegmentStart':
          if (nextMode !== 'namedSegment') {
            throw new Error("`" + this.segmentNameStartChar + "` must be followed by the name of the named segment consisting of at least one character in character set `" + this.segmentNameCharset + "` at " + this.index);
          }
      }
    }
    if (this.mode !== 'staticSegment' && nextMode === 'staticSegmentEscapeNextChar') {
      this.segment = '';
    }
    if (nextMode === 'namedSegment' || nextMode === 'staticSegment') {
      this.segment = this.char;
    }
    return this.mode = nextMode;
  };
  Compiler.prototype.compile = function(string) {
    var length, segmentNameCharRegex;
    this.string = string;
    this.index = -1;
    this.char = '';
    this.mode = 'unknown';
    this.segment = '';
    this.openParens = 0;
    this.names = [];
    this.regexString = '^';
    segmentNameCharRegex = this.segmentNameCharRegex();
    length = this.string.length;
    while (++this.index < length) {
      this.char = this.string.charAt(this.index);
      if (this.mode === 'staticSegmentEscapeNextChar') {
        this.transition('staticSegment');
        continue;
      }
      switch (this.char) {
        case this.segmentNameStartChar:
          if (this.mode === 'namedSegment') {
            throw new Error("cannot start named segment right after named segment at " + this.index);
          }
          this.transition('namedSegmentStart');
          break;
        case this.escapeChar:
          this.transition('staticSegmentEscapeNextChar');
          break;
        case this.optionalSegmentStartChar:
          this.transition('unknown');
          this.openParens++;
          this.regexString += '(?:';
          break;
        case this.optionalSegmentEndChar:
          this.transition('unknown');
          this.openParens--;
          if (this.openParens < 0) {
            throw new Error("did not expect " + this.optionalSegmentEndChar + " at " + this.index);
          }
          this.regexString += ')?';
          break;
        case this.wildcardChar:
          this.transition('unknown');
          this.regexString += '(.*?)';
          this.names.push('_');
          break;
        default:
          switch (this.mode) {
            case 'namedSegmentStart':
              if (segmentNameCharRegex.test(this.char)) {
                this.transition('namedSegment');
              } else {
                this.transition('staticSegment');
              }
              break;
            case 'namedSegment':
              if (segmentNameCharRegex.test(this.char)) {
                this.transition('namedSegment');
              } else {
                this.transition('staticSegment');
              }
              break;
            case 'staticSegment':
              this.transition('staticSegment');
              break;
            case 'unknown':
              this.transition('staticSegment');
          }
      }
    }
    if (this.openParens > 0) {
      throw new Error("unclosed parentheses at " + this.index);
    }
    this.transition('unknown');
    this.regexString += '$';
    this.regex = new RegExp(this.regexString);
  };
  UrlPattern = function(arg, compiler) {
    if (compiler == null) {
      compiler = new UrlPattern.Compiler;
    }
    if (arg instanceof UrlPattern) {
      this.isRegex = arg.isRegex;
      this.regex = arg.regex;
      this.names = arg.names;
      return;
    }
    this.isRegex = arg instanceof RegExp;
    if (!(('string' === typeof arg) || this.isRegex)) {
      throw new TypeError('argument must be a regex or a string');
    }
    if (this.isRegex) {
      this.regex = arg;
    } else {
      compiler.compile(arg);
      this.regex = compiler.regex;
      this.names = compiler.names;
    }
  };
  UrlPattern.prototype.match = function(url) {
    var bound, captured, index, length, match, name, value;
    match = this.regex.exec(url);
    if (match == null) {
      return null;
    }
    captured = match.slice(1);
    if (this.isRegex) {
      return captured;
    }
    bound = {};
    index = -1;
    length = captured.length;
    while (++index < length) {
      value = captured[index];
      name = this.names[index];
      if (value == null) {
        continue;
      }
      if (bound[name] != null) {
        if (!Array.isArray(bound[name])) {
          bound[name] = [bound[name]];
        }
        bound[name].push(value);
      } else {
        bound[name] = value;
      }
    }
    return bound;
  };
  UrlPattern.Compiler = Compiler;
  UrlPattern.escapeForRegex = escapeForRegex;
  return UrlPattern;
});

},{}],48:[function(require,module,exports){
(function() {
  var URL, URL_PATTERN, defaults, urllite,
    __hasProp = {}.hasOwnProperty;

  URL_PATTERN = /^(?:(?:([^:\/?\#]+:)\/+|(\/\/))(?:([a-z0-9-\._~%]+)(?::([a-z0-9-\._~%]+))?@)?(([a-z0-9-\._~%!$&'()*+,;=]+)(?::([0-9]+))?)?)?([^?\#]*?)(\?[^\#]*)?(\#.*)?$/;

  urllite = function(raw, opts) {
    return urllite.URL.parse(raw, opts);
  };

  urllite.URL = URL = (function() {
    function URL(props) {
      var k, v, _ref;
      for (k in defaults) {
        if (!__hasProp.call(defaults, k)) continue;
        v = defaults[k];
        this[k] = (_ref = props[k]) != null ? _ref : v;
      }
      this.host || (this.host = this.hostname && this.port ? "" + this.hostname + ":" + this.port : this.hostname ? this.hostname : '');
      this.origin || (this.origin = this.protocol ? "" + this.protocol + "//" + this.host : '');
      this.isAbsolutePathRelative = !this.host && this.pathname.charAt(0) === '/';
      this.isPathRelative = !this.host && this.pathname.charAt(0) !== '/';
      this.isRelative = this.isSchemeRelative || this.isAbsolutePathRelative || this.isPathRelative;
      this.isAbsolute = !this.isRelative;
    }

    URL.parse = function(raw) {
      var m, pathname, protocol;
      m = raw.toString().match(URL_PATTERN);
      pathname = m[8] || '';
      protocol = m[1];
      return new urllite.URL({
        protocol: protocol,
        username: m[3],
        password: m[4],
        hostname: m[6],
        port: m[7],
        pathname: protocol && pathname.charAt(0) !== '/' ? "/" + pathname : pathname,
        search: m[9],
        hash: m[10],
        isSchemeRelative: m[2] != null
      });
    };

    return URL;

  })();

  defaults = {
    protocol: '',
    username: '',
    password: '',
    host: '',
    hostname: '',
    port: '',
    pathname: '',
    search: '',
    hash: '',
    origin: '',
    isSchemeRelative: false
  };

  module.exports = urllite;

}).call(this);

},{}],49:[function(require,module,exports){
"use strict";

var React = require('react'),
    S3Upload = require('./s3upload.js'),
    objectAssign = require('object-assign');

var ReactS3Uploader = React.createClass({

    propTypes: {
        signingUrl: React.PropTypes.string.isRequired,
        onProgress: React.PropTypes.func,
        onFinish: React.PropTypes.func,
        onError: React.PropTypes.func
    },

    getDefaultProps: function() {
        return {
            onProgress: function(percent, message) {
                console.log('Upload progress: ' + percent + '% ' + message);
            },
            onFinish: function(signResult) {
                console.log("Upload finished: " + signResult.publicUrl)
            },
            onError: function(message) {
                console.log("Upload error: " + message);
            }
        };
    },

    uploadFile: function() {
        new S3Upload({
            fileElement: this.getDOMNode(),
            signingUrl: this.props.signingUrl,
            onProgress: this.props.onProgress,
            onFinishS3Put: this.props.onFinish,
            onError: this.props.onError
        });
    },

    render: function() {
        return React.DOM.input(objectAssign({}, this.props, {type: 'file', onChange: this.uploadFile}));
    }

});


module.exports = ReactS3Uploader;

},{"./s3upload.js":52,"object-assign":51,"react":235}],50:[function(require,module,exports){

module.exports = require('./ReactS3Uploader');

},{"./ReactS3Uploader":49}],51:[function(require,module,exports){
'use strict';

function ToObject(val) {
	if (val == null) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

module.exports = Object.assign || function (target, source) {
	var from;
	var keys;
	var to = ToObject(target);

	for (var s = 1; s < arguments.length; s++) {
		from = arguments[s];
		keys = Object.keys(Object(from));

		for (var i = 0; i < keys.length; i++) {
			to[keys[i]] = from[keys[i]];
		}
	}

	return to;
};

},{}],52:[function(require,module,exports){
/**
 * Taken, CommonJS-ified, and heavily modified from:
 * https://github.com/flyingsparx/NodeDirectUploader
 */

S3Upload.prototype.signingUrl = '/sign-s3';
S3Upload.prototype.fileElement = null;

S3Upload.prototype.onFinishS3Put = function(signResult) {
    return console.log('base.onFinishS3Put()', signResult.publicUrl);
};

S3Upload.prototype.onProgress = function(percent, status) {
    return console.log('base.onProgress()', percent, status);
};

S3Upload.prototype.onError = function(status) {
    return console.log('base.onError()', status);
};

function S3Upload(options) {
    if (options == null) {
        options = {};
    }
    for (option in options) {
        if (options.hasOwnProperty(option)) {
            this[option] = options[option];
        }
    }
    this.handleFileSelect(this.fileElement);
}

S3Upload.prototype.handleFileSelect = function(fileElement) {
    this.onProgress(0, 'Upload started.');
    var files = fileElement.files;
    var result = [];
    for (var i=0; i < files.length; i++) {
        var f = files[i];
        result.push(this.uploadFile(f));
    }
    return result;
};

S3Upload.prototype.createCORSRequest = function(method, url) {
    var xhr = new XMLHttpRequest();

    if (xhr.withCredentials != null) {
        xhr.open(method, url, true);
    }
    else if (typeof XDomainRequest !== "undefined") {
        xhr = new XDomainRequest();
        xhr.open(method, url);
    }
    else {
        xhr = null;
    }
    return xhr;
};

S3Upload.prototype.executeOnSignedUrl = function(file, callback) {
    var xhr = new XMLHttpRequest();
    var fileName = file.name.replace(/\s+/g, "_");
    xhr.open('GET', this.signingUrl + '?objectName=' + fileName + '&contentType=' + file.type, true);
    xhr.overrideMimeType && xhr.overrideMimeType('text/plain; charset=x-user-defined');
    xhr.onreadystatechange = function() {
        if (xhr.readyState === 4 && xhr.status === 200) {
            var result;
            try {
                result = JSON.parse(xhr.responseText);
            } catch (error) {
                this.onError('Invalid signing server response JSON: ' + xhr.responseText);
                return false;
            }
            return callback(result);
        } else if (xhr.readyState === 4 && xhr.status !== 200) {
            return this.onError('Could not contact request signing server. Status = ' + xhr.status);
        }
    }.bind(this);
    return xhr.send();
};

S3Upload.prototype.uploadToS3 = function(file, signResult) {
    var xhr = this.createCORSRequest('PUT', signResult.signedUrl);
    if (!xhr) {
        this.onError('CORS not supported');
    } else {
        xhr.onload = function() {
            if (xhr.status === 200) {
                this.onProgress(100, 'Upload completed.');
                return this.onFinishS3Put(signResult);
            } else {
                return this.onError('Upload error: ' + xhr.status);
            }
        }.bind(this);
        xhr.onerror = function() {
            return this.onError('XHR error.');
        }.bind(this);
        xhr.upload.onprogress = function(e) {
            var percentLoaded;
            if (e.lengthComputable) {
                percentLoaded = Math.round((e.loaded / e.total) * 100);
                return this.onProgress(percentLoaded, percentLoaded === 100 ? 'Finalizing.' : 'Uploading.');
            }
        }.bind(this);
    }
    xhr.setRequestHeader('Content-Type', file.type);
    xhr.setRequestHeader('x-amz-acl', 'public-read');
    return xhr.send(file);
};

S3Upload.prototype.uploadFile = function(file) {
    return this.executeOnSignedUrl(file, function(signResult) {
        return this.uploadToS3(file, signResult);
    }.bind(this));
};


module.exports = S3Upload;

},{}],53:[function(require,module,exports){
'use strict';

var React = require('react/addons');

var PropTypes = React.PropTypes;

var size = 100;

/**
 * Generates an SVG pie chart.
 * @see {http://wiki.scribus.net/canvas/Making_a_Pie_Chart}
 */
var PieChart = React.createClass({
  displayName: 'PieChart',

  propTypes: {
    className: PropTypes.string,
    slices: PropTypes.arrayOf(PropTypes.shape({
      color: PropTypes.string.isRequired, // hex color
      value: PropTypes.number.isRequired })).isRequired },

  /**
   * @return {Object[]}
   */
  _renderPaths: function _renderPaths() {
    var radCircumference = Math.PI * 2;
    var center = size / 2;
    var radius = center - 1; // padding to prevent clipping
    var total = this.props.slices.reduce(function (totalValue, slice) {
      return totalValue + slice.value;
    }, 0);

    var radSegment = 0;
    var lastX = radius;
    var lastY = 0;

    return this.props.slices.map(function (slice, index) {
      var color = slice.color;
      var value = slice.value;

      // Should we just draw a circle?
      if (value === total) {
        return React.createElement('circle', {
          r: radius,
          cx: radius,
          cy: radius,
          fill: color,
          key: index
        });
      }

      if (value === 0) {
        return;
      }

      var valuePercentage = value / total;

      // Should the arc go the long way round?
      var longArc = valuePercentage <= 0.5 ? 0 : 1;

      radSegment += valuePercentage * radCircumference;
      var nextX = Math.cos(radSegment) * radius;
      var nextY = Math.sin(radSegment) * radius;

      // d is a string that describes the path of the slice.
      // The weirdly placed minus signs [eg, (-(lastY))] are due to the fact
      // that our calculations are for a graph with positive Y values going up,
      // but on the screen positive Y values go down.
      var d = ['M ' + center + ',' + center, 'l ' + lastX + ',' + -lastY, 'a' + radius + ',' + radius, '0', '' + longArc + ',0', '' + (nextX - lastX) + ',' + -(nextY - lastY), 'z'].join(' ');

      lastX = nextX;
      lastY = nextY;

      return React.createElement('path', { d: d, fill: color, key: index });
    });
  },

  /**
   * @return {Object}
   */
  render: function render() {
    var center = size / 2;

    return React.createElement(
      'svg',
      { viewBox: '0 0 ' + size + ' ' + size },
      React.createElement(
        'g',
        { transform: 'rotate(-90 ' + center + ' ' + center + ')' },
        this._renderPaths()
      )
    );
  }
});

module.exports = PieChart;

},{"react/addons":63}],54:[function(require,module,exports){
/**
 * PolyFills make me sad
 */
var KeyEvent = KeyEvent || {};
KeyEvent.DOM_VK_UP = KeyEvent.DOM_VK_UP || 38;
KeyEvent.DOM_VK_DOWN = KeyEvent.DOM_VK_DOWN || 40;
KeyEvent.DOM_VK_BACK_SPACE = KeyEvent.DOM_VK_BACK_SPACE || 8;
KeyEvent.DOM_VK_RETURN = KeyEvent.DOM_VK_RETURN || 13;
KeyEvent.DOM_VK_ENTER = KeyEvent.DOM_VK_ENTER || 14;
KeyEvent.DOM_VK_ESCAPE = KeyEvent.DOM_VK_ESCAPE || 27;
KeyEvent.DOM_VK_TAB = KeyEvent.DOM_VK_TAB || 9;

module.exports = KeyEvent;

},{}],55:[function(require,module,exports){
var Typeahead = require('./typeahead');
var Tokenizer = require('./tokenizer');

module.exports = {
  Typeahead: Typeahead,
  Tokenizer: Tokenizer
};

},{"./tokenizer":56,"./typeahead":58}],56:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Token = require('./token');
var KeyEvent = require('../keyevent');
var Typeahead = require('../typeahead');
var classNames = require('classnames');

function _arraysAreDifferent(array1, array2) {
  if (array1.length != array2.length){
    return true;
  }
  for (var i = array2.length - 1; i >= 0; i--) {
    if (array2[i] !== array1[i]){
      return true;
    }
  }
}

/**
 * A typeahead that, when an option is selected, instead of simply filling
 * the text entry widget, prepends a renderable "token", that may be deleted
 * by pressing backspace on the beginning of the line with the keyboard.
 */
var TypeaheadTokenizer = React.createClass({displayName: "TypeaheadTokenizer",
  propTypes: {
    name: React.PropTypes.string,
    options: React.PropTypes.array,
    customClasses: React.PropTypes.object,
    allowCustomValues: React.PropTypes.number,
    defaultSelected: React.PropTypes.array,
    defaultValue: React.PropTypes.string,
    placeholder: React.PropTypes.string,
    inputProps: React.PropTypes.object,
    onTokenRemove: React.PropTypes.func,
    onKeyDown: React.PropTypes.func,
    onKeyUp: React.PropTypes.func,
    onTokenAdd: React.PropTypes.func,
    onFocus: React.PropTypes.func,
    onBlur: React.PropTypes.func,
    filterOption: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.func
    ]),
    displayOption: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.func
    ]),
    maxVisible: React.PropTypes.number,
    defaultClassNames: React.PropTypes.bool
  },

  getInitialState: function() {
    return {
      // We need to copy this to avoid incorrect sharing
      // of state across instances (e.g., via getDefaultProps())
      selected: this.props.defaultSelected.slice(0)
    };
  },

  getDefaultProps: function() {
    return {
      options: [],
      defaultSelected: [],
      customClasses: {},
      allowCustomValues: 0,
      defaultValue: "",
      placeholder: "",
      inputProps: {},
      defaultClassNames: true,
      filterOption: null,
      displayOption: function(token){return token },
      onKeyDown: function(event) {},
      onKeyUp: function(event) {},
      onFocus: function(event) {},
      onBlur: function(event) {},
      onTokenAdd: function() {},
      onTokenRemove: function() {}
    };
  },

  componentWillReceiveProps: function(nextProps){
    // if we get new defaultProps, update selected
    if (_arraysAreDifferent(this.props.defaultSelected, nextProps.defaultSelected)){
      this.setState({selected: nextProps.defaultSelected.slice(0)})
    }
  },

  focus: function(){
    this.refs.typeahead.focus();
  },

  getSelectedTokens: function(){
    return this.state.selected;
  },

  // TODO: Support initialized tokens
  //
  _renderTokens: function() {
    var tokenClasses = {};
    tokenClasses[this.props.customClasses.token] = !!this.props.customClasses.token;
    var classList = classNames(tokenClasses);
    var result = this.state.selected.map(function(selected) {
      var displayString = this.props.displayOption(selected);
      return (
        React.createElement(Token, {key:  displayString, className: classList, 
          onRemove:  this._removeTokenForValue, 
          object: selected, 
          name:  this.props.name}, 
           displayString 
        )
      );
    }, this);
    return result;
  },

  _getOptionsForTypeahead: function() {
    // return this.props.options without this.selected
    return this.props.options;
  },

  _onKeyDown: function(event) {
    // We only care about intercepting backspaces
    if (event.keyCode === KeyEvent.DOM_VK_BACK_SPACE) {
      return this._handleBackspace(event);
    }
    this.props.onKeyDown(event);
  },

  _handleBackspace: function(event){
    // No tokens
    if (!this.state.selected.length) {
      return;
    }

    // Remove token ONLY when bksp pressed at beginning of line
    // without a selection
    var entry = this.refs.typeahead.refs.entry.getDOMNode();
    if (entry.selectionStart == entry.selectionEnd &&
        entry.selectionStart == 0) {
      this._removeTokenForValue(
        this.state.selected[this.state.selected.length - 1]);
      event.preventDefault();
    }
  },

  _removeTokenForValue: function(value) {
    var index = this.state.selected.indexOf(value);
    if (index == -1) {
      return;
    }

    this.state.selected.splice(index, 1);
    this.setState({selected: this.state.selected});
    this.props.onTokenRemove(value);
    return;
  },

  _addTokenForValue: function(value) {
    if (this.state.selected.indexOf(value) != -1) {
      return;
    }
    this.state.selected.push(value);
    this.setState({selected: this.state.selected});
    this.refs.typeahead.setEntryText("");
    this.props.onTokenAdd(value);
  },

  render: function() {
    var classes = {};
    classes[this.props.customClasses.typeahead] = !!this.props.customClasses.typeahead;
    var classList = classNames(classes);
    var tokenizerClasses = [this.props.defaultClassNames && "typeahead-tokenizer"];
    tokenizerClasses[this.props.className] = !!this.props.className;
    var tokenizerClassList = classNames(tokenizerClasses)

    return (
      React.createElement("div", {className: tokenizerClassList}, 
         this._renderTokens(), 
        React.createElement(Typeahead, {ref: "typeahead", 
          className: classList, 
          placeholder: this.props.placeholder, 
          inputProps: this.props.inputProps, 
          allowCustomValues: this.props.allowCustomValues, 
          customClasses: this.props.customClasses, 
          options: this._getOptionsForTypeahead(), 
          defaultValue: this.props.defaultValue, 
          maxVisible: this.props.maxVisible, 
          onOptionSelected: this._addTokenForValue, 
          onKeyDown: this._onKeyDown, 
          onKeyUp: this.props.onKeyUp, 
          onFocus: this.props.onFocus, 
          onBlur: this.props.onBlur, 
          displayOption: this.props.displayOption, 
          defaultClassNames: this.props.defaultClassNames, 
          filterOption: this.props.filterOption})
      )
    );
  }
});

module.exports = TypeaheadTokenizer;

},{"../keyevent":54,"../typeahead":58,"./token":57,"classnames":61,"react":235}],57:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var classNames = require('classnames');

/**
 * Encapsulates the rendering of an option that has been "selected" in a
 * TypeaheadTokenizer
 */
var Token = React.createClass({displayName: "Token",
  propTypes: {
    className: React.PropTypes.string,
    name: React.PropTypes.string,
    children: React.PropTypes.string,
    object: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.object,
    ]),
    onRemove: React.PropTypes.func
  },

  render: function() {
    var className = classNames([
      "typeahead-token",
      this.props.className
    ]);

    return (
      React.createElement("div", {className: className}, 
        this._renderHiddenInput(), 
        this.props.children, 
        this._renderCloseButton()
      )
    );
  },

  _renderHiddenInput: function() {
    // If no name was set, don't create a hidden input
    if (!this.props.name) {
      return null;
    }

    return (
      React.createElement("input", {
        type: "hidden", 
        name:  this.props.name + '[]', 
        value:  this.props.object}
      )
    );
  },

  _renderCloseButton: function() {
    if (!this.props.onRemove) {
      return "";
    }
    return (
      React.createElement("a", {className: "typeahead-token-close", href: "#", onClick: function(event) {
          this.props.onRemove(this.props.object);
          event.preventDefault();
        }.bind(this)}, "×")
    );
  }
});

module.exports = Token;

},{"classnames":61,"react":235}],58:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var TypeaheadSelector = require('./selector');
var KeyEvent = require('../keyevent');
var fuzzy = require('fuzzy');
var classNames = require('classnames');

var IDENTITY_FN = function(input) { return input; };
var SHOULD_SEARCH_VALUE = function(input) { return input && input.trim().length > 0; };
var _generateAccessor = function(field) {
  return function(object) { return object[field]; };
};

/**
 * A "typeahead", an auto-completing text input
 *
 * Renders an text input that shows options nearby that you can use the
 * keyboard or mouse to select.  Requires CSS for MASSIVE DAMAGE.
 */
var Typeahead = React.createClass({displayName: "Typeahead",
  propTypes: {
    name: React.PropTypes.string,
    customClasses: React.PropTypes.object,
    maxVisible: React.PropTypes.number,
    options: React.PropTypes.array,
    allowCustomValues: React.PropTypes.number,
    defaultValue: React.PropTypes.string,
    value: React.PropTypes.string,
    placeholder: React.PropTypes.string,
    textarea: React.PropTypes.bool,
    inputProps: React.PropTypes.object,
    onOptionSelected: React.PropTypes.func,
    onChange: React.PropTypes.func,
    onKeyDown: React.PropTypes.func,
    onKeyUp: React.PropTypes.func,
    onFocus: React.PropTypes.func,
    onBlur: React.PropTypes.func,
    filterOption: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.func
    ]),
    displayOption: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.func
    ]),
    formInputOption: React.PropTypes.oneOfType([
      React.PropTypes.string,
      React.PropTypes.func
    ]),
    defaultClassNames: React.PropTypes.bool,
    customListComponent: React.PropTypes.oneOfType([
      React.PropTypes.element,
      React.PropTypes.func
    ])
  },

  getDefaultProps: function() {
    return {
      options: [],
      customClasses: {},
      allowCustomValues: 0,
      defaultValue: "",
      value: null,
      placeholder: "",
      textarea: false,
      inputProps: {},
      onOptionSelected: function(option) {},
      onChange: function(event) {},
      onKeyDown: function(event) {},
      onKeyUp: function(event) {},
      onFocus: function(event) {},
      onBlur: function(event) {},
      filterOption: null,
      defaultClassNames: true,
      customListComponent: TypeaheadSelector
    };
  },

  getInitialState: function() {
    return {
      // The currently visible set of options
      visible: this.getOptionsForValue(this.props.defaultValue, this.props.options),

      // This should be called something else, "entryValue"
      entryValue: this.props.value || this.props.defaultValue,

      // A valid typeahead value
      selection: this.props.value,

      // Index of the selection
      selectionIndex: null
    };
  },

  getOptionsForValue: function(value, options) {
    if (!SHOULD_SEARCH_VALUE(value)) { return []; }
    var filterOptions = this._generateFilterFunction();
    var result = filterOptions(value, options);
    if (this.props.maxVisible) {
      result = result.slice(0, this.props.maxVisible);
    }
    return result;
  },

  setEntryText: function(value) {
    this.refs.entry.getDOMNode().value = value;
    this._onTextEntryUpdated();
  },

  focus: function(){
    React.findDOMNode(this.refs.entry).focus()
  },

  _hasCustomValue: function() {
    if (this.props.allowCustomValues > 0 &&
      this.state.entryValue.length >= this.props.allowCustomValues &&
      this.state.visible.indexOf(this.state.entryValue) < 0) {
      return true;
    }
    return false;
  },

  _getCustomValue: function() {
    if (this._hasCustomValue()) {
      return this.state.entryValue;
    }
    return null;
  },

  _renderIncrementalSearchResults: function() {
    // Nothing has been entered into the textbox
    if (!this.state.entryValue) {
      return "";
    }

    // Something was just selected
    if (this.state.selection) {
      return "";
    }

    return (
      React.createElement(this.props.customListComponent, {
        ref: "sel", options: this.state.visible, 
        onOptionSelected: this._onOptionSelected, 
        customValue: this._getCustomValue(), 
        customClasses: this.props.customClasses, 
        selectionIndex: this.state.selectionIndex, 
        defaultClassNames: this.props.defaultClassNames, 
        displayOption: this._generateOptionToStringFor(this.props.displayOption)})
    );
  },

  getSelection: function() {
    var index = this.state.selectionIndex;
    if (this._hasCustomValue()) {
      if (index === 0) {
        return this.state.entryValue;
      } else {
        index--;
      }
    }
    return this.state.visible[index];
  },

  _onOptionSelected: function(option, event) {
    var nEntry = this.refs.entry.getDOMNode();
    nEntry.focus();

    var displayOption = this._generateOptionToStringFor(this.props.displayOption);
    var optionString = displayOption(option, 0);

    var formInputOption = this._generateOptionToStringFor(this.props.formInputOption || displayOption);
    var formInputOptionString = formInputOption(option);

    nEntry.value = optionString;
    this.setState({visible: this.getOptionsForValue(optionString, this.props.options),
                   selection: formInputOptionString,
                   entryValue: optionString});
    return this.props.onOptionSelected(option, event);
  },

  _onTextEntryUpdated: function() {
    var value = this.refs.entry.getDOMNode().value;
    this.setState({visible: this.getOptionsForValue(value, this.props.options),
                   selection: null,
                   entryValue: value});
  },

  _onEnter: function(event) {
    var selection = this.getSelection();
    if (!selection) {
      return this.props.onKeyDown(event);
    }
    return this._onOptionSelected(selection, event);
  },

  _onEscape: function() {
    this.setState({
      selectionIndex: null
    });
  },

  _onTab: function(event) {
    var selection = this.getSelection();
    var option = selection ?
      selection : (this.state.visible.length > 0 ? this.state.visible[0] : null);

    if (option === null && this._hasCustomValue()) {
      option = this._getCustomValue();
    }

    if (option !== null) {
      return this._onOptionSelected(option, event);
    }
  },

  eventMap: function(event) {
    var events = {};

    events[KeyEvent.DOM_VK_UP] = this.navUp;
    events[KeyEvent.DOM_VK_DOWN] = this.navDown;
    events[KeyEvent.DOM_VK_RETURN] = events[KeyEvent.DOM_VK_ENTER] = this._onEnter;
    events[KeyEvent.DOM_VK_ESCAPE] = this._onEscape;
    events[KeyEvent.DOM_VK_TAB] = this._onTab;

    return events;
  },

  _nav: function(delta) {
    if (!this._hasHint()) {
      return;
    }
    var newIndex = this.state.selectionIndex === null ? (delta == 1 ? 0 : delta) : this.state.selectionIndex + delta;
    var length = this.state.visible.length;
    if (this._hasCustomValue()) {
      length += 1;
    }

    if (newIndex < 0) {
      newIndex += length;
    } else if (newIndex >= length) {
      newIndex -= length;
    }

    this.setState({selectionIndex: newIndex});
  },

  navDown: function() {
    this._nav(1);
  },

  navUp: function() {
    this._nav(-1);
  },

  _onChange: function(event) {
    if (this.props.onChange) {
      this.props.onChange(event);
    }

    this._onTextEntryUpdated();
  },

  _onKeyDown: function(event) {
    // If there are no visible elements, don't perform selector navigation.
    // Just pass this up to the upstream onKeydown handler.
    // Also skip if the user is pressing the shift key, since none of our handlers are looking for shift
    if (!this._hasHint() || event.shiftKey) {
      return this.props.onKeyDown(event);
    }

    var handler = this.eventMap()[event.keyCode];

    if (handler) {
      handler(event);
    } else {
      return this.props.onKeyDown(event);
    }
    // Don't propagate the keystroke back to the DOM/browser
    event.preventDefault();
  },

  componentWillReceiveProps: function(nextProps) {
    this.setState({
      visible: this.getOptionsForValue(this.state.entryValue, nextProps.options)
    });
  },

  render: function() {
    var inputClasses = {};
    inputClasses[this.props.customClasses.input] = !!this.props.customClasses.input;
    var inputClassList = classNames(inputClasses);

    var classes = {
      typeahead: this.props.defaultClassNames
    };
    classes[this.props.className] = !!this.props.className;
    var classList = classNames(classes);

    var InputElement = this.props.textarea ? 'textarea' : 'input';

    return (
      React.createElement("div", {className: classList}, 
         this._renderHiddenInput(), 
        React.createElement(InputElement, React.__spread({ref: "entry", type: "text"}, 
          this.props.inputProps, 
          {placeholder: this.props.placeholder, 
          className: inputClassList, 
          value: this.state.entryValue, 
          defaultValue: this.props.defaultValue, 
          onChange: this._onChange, 
          onKeyDown: this._onKeyDown, 
          onKeyUp: this.props.onKeyUp, 
          onFocus: this.props.onFocus, 
          onBlur: this.props.onBlur})
        ), 
         this._renderIncrementalSearchResults() 
      )
    );
  },

  _renderHiddenInput: function() {
    if (!this.props.name) {
      return null;
    }

    return (
      React.createElement("input", {
        type: "hidden", 
        name:  this.props.name, 
        value:  this.state.selection}
      )
    );
  },

  _generateFilterFunction: function() {
    var filterOptionProp = this.props.filterOption;
    if (typeof filterOptionProp === 'function') {
      return function(value, options) {
        return options.filter(function(o) { return filterOptionProp(value, o); });
      };
    } else {
      var mapper;
      if (typeof filterOptionProp === 'string') {
        mapper = _generateAccessor(filterOptionProp);
      } else {
        mapper = IDENTITY_FN;
      }
      return function(value, options) {
        return fuzzy
          .filter(value, options, {extract: mapper})
          .map(function(res) { return options[res.index]; });
      };
    }
  },

  _generateOptionToStringFor: function(prop) {
    if (typeof prop === 'string') {
      return _generateAccessor(prop);
    } else if (typeof prop === 'function') {
      return prop;
    } else {
      return IDENTITY_FN;
    }
  },

  _hasHint: function() {
    return this.state.visible.length > 0 || this._hasCustomValue();
  }
});

module.exports = Typeahead;

},{"../keyevent":54,"./selector":60,"classnames":61,"fuzzy":62,"react":235}],59:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var classNames = require('classnames');

/**
 * A single option within the TypeaheadSelector
 */
var TypeaheadOption = React.createClass({displayName: "TypeaheadOption",
  propTypes: {
    customClasses: React.PropTypes.object,
    customValue: React.PropTypes.string,
    onClick: React.PropTypes.func,
    children: React.PropTypes.string,
    hover: React.PropTypes.bool
  },

  getDefaultProps: function() {
    return {
      customClasses: {},
      onClick: function(event) {
        event.preventDefault();
      }
    };
  },

  render: function() {
    var classes = {};
    classes[this.props.customClasses.hover || "hover"] = !!this.props.hover;
    classes[this.props.customClasses.listItem] = !!this.props.customClasses.listItem;

    if (this.props.customValue) {
      classes[this.props.customClasses.customAdd] = !!this.props.customClasses.customAdd;
    }

    var classList = classNames(classes);

    return (
      React.createElement("li", {className: classList, onClick: this._onClick}, 
        React.createElement("a", {href: "javascript: void 0;", className: this._getClasses(), ref: "anchor"}, 
           this.props.children
        )
      )
    );
  },

  _getClasses: function() {
    var classes = {
      "typeahead-option": true,
    };
    classes[this.props.customClasses.listAnchor] = !!this.props.customClasses.listAnchor;

    return classNames(classes);
  },

  _onClick: function(event) {
    event.preventDefault();
    return this.props.onClick(event);
  }
});


module.exports = TypeaheadOption;

},{"classnames":61,"react":235}],60:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var TypeaheadOption = require('./option');
var classNames = require('classnames');

/**
 * Container for the options rendered as part of the autocompletion process
 * of the typeahead
 */
var TypeaheadSelector = React.createClass({displayName: "TypeaheadSelector",
  propTypes: {
    options: React.PropTypes.array,
    customClasses: React.PropTypes.object,
    customValue: React.PropTypes.string,
    selectionIndex: React.PropTypes.number,
    onOptionSelected: React.PropTypes.func,
    displayOption: React.PropTypes.func.isRequired,
    defaultClassNames: React.PropTypes.bool
  },

  getDefaultProps: function() {
    return {
      selectionIndex: null,
      customClasses: {},
      customValue: null,
      onOptionSelected: function(option) { },
      defaultClassNames: true
    };
  },

  render: function() {
    var classes = {
      "typeahead-selector": this.props.defaultClassNames
    };
    classes[this.props.customClasses.results] = this.props.customClasses.results;
    var classList = classNames(classes);

    // CustomValue should be added to top of results list with different class name
    var customValue = null;
    var customValueOffset = 0;
    if (this.props.customValue !== null) {
      customValueOffset++;
      customValue = (
        React.createElement(TypeaheadOption, {ref: this.props.customValue, key: this.props.customValue, 
          hover: this.props.selectionIndex === 0, 
          customClasses: this.props.customClasses, 
          customValue: this.props.customValue, 
          onClick: this._onClick.bind(this, this.props.customValue)}, 
           this.props.customValue
        )
      );
    }

    var results = this.props.options.map(function(result, i) {
      var displayString = this.props.displayOption(result, i);
      var uniqueKey = displayString + '_' + i;
      return (
        React.createElement(TypeaheadOption, {ref: uniqueKey, key: uniqueKey, 
          hover: this.props.selectionIndex === i + customValueOffset, 
          customClasses: this.props.customClasses, 
          onClick: this._onClick.bind(this, result)}, 
           displayString 
        )
      );
    }, this);


    return (
      React.createElement("ul", {className: classList}, 
         customValue, 
         results 
      )
    );
  },

  _onClick: function(result, event) {
    return this.props.onOptionSelected(result, event);
  }

});

module.exports = TypeaheadSelector;

},{"./option":59,"classnames":61,"react":235}],61:[function(require,module,exports){
/*!
  Copyright (c) 2015 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/

function classNames() {
	var classes = '';
	var arg;

	for (var i = 0; i < arguments.length; i++) {
		arg = arguments[i];
		if (!arg) {
			continue;
		}

		if ('string' === typeof arg || 'number' === typeof arg) {
			classes += ' ' + arg;
		} else if (Object.prototype.toString.call(arg) === '[object Array]') {
			classes += ' ' + classNames.apply(null, arg);
		} else if ('object' === typeof arg) {
			for (var key in arg) {
				if (!arg.hasOwnProperty(key) || !arg[key]) {
					continue;
				}
				classes += ' ' + key;
			}
		}
	}
	return classes.substr(1);
}

// safely export classNames for node / browserify
if (typeof module !== 'undefined' && module.exports) {
	module.exports = classNames;
}

// safely export classNames for RequireJS
if (typeof define !== 'undefined' && define.amd) {
	define('classnames', [], function() {
		return classNames;
	});
}

},{}],62:[function(require,module,exports){
/*
 * Fuzzy
 * https://github.com/myork/fuzzy
 *
 * Copyright (c) 2012 Matt York
 * Licensed under the MIT license.
 */

(function() {

var root = this;

var fuzzy = {};

// Use in node or in browser
if (typeof exports !== 'undefined') {
  module.exports = fuzzy;
} else {
  root.fuzzy = fuzzy;
}

// Return all elements of `array` that have a fuzzy
// match against `pattern`.
fuzzy.simpleFilter = function(pattern, array) {
  return array.filter(function(string) {
    return fuzzy.test(pattern, string);
  });
};

// Does `pattern` fuzzy match `string`?
fuzzy.test = function(pattern, string) {
  return fuzzy.match(pattern, string) !== null;
};

// If `pattern` matches `string`, wrap each matching character
// in `opts.pre` and `opts.post`. If no match, return null
fuzzy.match = function(pattern, string, opts) {
  opts = opts || {};
  var patternIdx = 0
    , result = []
    , len = string.length
    , totalScore = 0
    , currScore = 0
    // prefix
    , pre = opts.pre || ''
    // suffix
    , post = opts.post || ''
    // String to compare against. This might be a lowercase version of the
    // raw string
    , compareString =  opts.caseSensitive && string || string.toLowerCase()
    , ch, compareChar;

  pattern = opts.caseSensitive && pattern || pattern.toLowerCase();

  // For each character in the string, either add it to the result
  // or wrap in template if its the next string in the pattern
  for(var idx = 0; idx < len; idx++) {
    ch = string[idx];
    if(compareString[idx] === pattern[patternIdx]) {
      ch = pre + ch + post;
      patternIdx += 1;

      // consecutive characters should increase the score more than linearly
      currScore += 1 + currScore;
    } else {
      currScore = 0;
    }
    totalScore += currScore;
    result[result.length] = ch;
  }

  // return rendered string if we have a match for every char
  if(patternIdx === pattern.length) {
    return {rendered: result.join(''), score: totalScore};
  }

  return null;
};

// The normal entry point. Filters `arr` for matches against `pattern`.
// It returns an array with matching values of the type:
//
//     [{
//         string:   '<b>lah' // The rendered string
//       , index:    2        // The index of the element in `arr`
//       , original: 'blah'   // The original element in `arr`
//     }]
//
// `opts` is an optional argument bag. Details:
//
//    opts = {
//        // string to put before a matching character
//        pre:     '<b>'
//
//        // string to put after matching character
//      , post:    '</b>'
//
//        // Optional function. Input is an element from the passed in
//        // `arr`, output should be the string to test `pattern` against.
//        // In this example, if `arr = [{crying: 'koala'}]` we would return
//        // 'koala'.
//      , extract: function(arg) { return arg.crying; }
//    }
fuzzy.filter = function(pattern, arr, opts) {
  opts = opts || {};
  return arr
          .reduce(function(prev, element, idx, arr) {
            var str = element;
            if(opts.extract) {
              str = opts.extract(element);
            }
            var rendered = fuzzy.match(pattern, str, opts);
            if(rendered != null) {
              prev[prev.length] = {
                  string: rendered.rendered
                , score: rendered.score
                , index: idx
                , original: element
              };
            }
            return prev;
          }, [])

          // Sort by score. Browsers are inconsistent wrt stable/unstable
          // sorting, so force stable by using the index in the case of tie.
          // See http://ofb.net/~sethml/is-sort-stable.html
          .sort(function(a,b) {
            var compare = b.score - a.score;
            if(compare) return compare;
            return a.index - b.index;
          });
};


}());


},{}],63:[function(require,module,exports){
module.exports = require('./lib/ReactWithAddons');

},{"./lib/ReactWithAddons":163}],64:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusMixin
 * @typechecks static-only
 */

'use strict';

var focusNode = require("./focusNode");

var AutoFocusMixin = {
  componentDidMount: function() {
    if (this.props.autoFocus) {
      focusNode(this.getDOMNode());
    }
  }
};

module.exports = AutoFocusMixin;

},{"./focusNode":197}],65:[function(require,module,exports){
/**
 * Copyright 2013-2015 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 * @typechecks static-only
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var FallbackCompositionState = require("./FallbackCompositionState");
var SyntheticCompositionEvent = require("./SyntheticCompositionEvent");
var SyntheticInputEvent = require("./SyntheticInputEvent");

var keyOf = require("./keyOf");

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = (
  ExecutionEnvironment.canUseDOM &&
  'CompositionEvent' in window
);

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = (
  ExecutionEnvironment.canUseDOM &&
  'TextEvent' in window &&
  !documentMode &&
  !isPresto()
);

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = (
  ExecutionEnvironment.canUseDOM &&
  (
    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)
  )
);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return (
    typeof opera === 'object' &&
    typeof opera.version === 'function' &&
    parseInt(opera.version(), 10) <= 12
  );
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBeforeInput: null}),
      captured: keyOf({onBeforeInputCapture: null})
    },
    dependencies: [
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyPress,
      topLevelTypes.topTextInput,
      topLevelTypes.topPaste
    ]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionEnd: null}),
      captured: keyOf({onCompositionEndCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionStart: null}),
      captured: keyOf({onCompositionStartCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionStart,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionUpdate: null}),
      captured: keyOf({onCompositionUpdateCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionUpdate,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (
    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
    !(nativeEvent.ctrlKey && nativeEvent.altKey)
  );
}


/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return (
    topLevelType === topLevelTypes.topKeyDown &&
    nativeEvent.keyCode === START_KEYCODE
  );
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return (nativeEvent.keyCode !== START_KEYCODE);
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {DOMEventTarget} topLevelTarget The listening component root node.
 * @param {string} topLevelTargetID ID of `topLevelTarget`.
 * @param {object} nativeEvent Native browser event.
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(
  topLevelType,
  topLevelTarget,
  topLevelTargetID,
  nativeEvent
) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(
    eventType,
    topLevelTargetID,
    nativeEvent
  );

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionEnd:
      return getDataFromCustomEvent(nativeEvent);
    case topLevelTypes.topKeyPress:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case topLevelTypes.topTextInput:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  if (currentComposition) {
    if (
      topLevelType === topLevelTypes.topCompositionEnd ||
      isFallbackCompositionEnd(topLevelType, nativeEvent)
    ) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case topLevelTypes.topPaste:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case topLevelTypes.topKeyPress:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case topLevelTypes.topCompositionEnd:
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {DOMEventTarget} topLevelTarget The listening component root node.
 * @param {string} topLevelTargetID ID of `topLevelTarget`.
 * @param {object} nativeEvent Native browser event.
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(
  topLevelType,
  topLevelTarget,
  topLevelTargetID,
  nativeEvent
) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(
    eventTypes.beforeInput,
    topLevelTargetID,
    nativeEvent
  );

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
    topLevelType,
    topLevelTarget,
    topLevelTargetID,
    nativeEvent
  ) {
    return [
      extractCompositionEvent(
        topLevelType,
        topLevelTarget,
        topLevelTargetID,
        nativeEvent
      ),
      extractBeforeInputEvent(
        topLevelType,
        topLevelTarget,
        topLevelTargetID,
        nativeEvent
      )
    ];
  }
};

module.exports = BeforeInputEventPlugin;

},{"./EventConstants":78,"./EventPropagators":83,"./ExecutionEnvironment":84,"./FallbackCompositionState":85,"./SyntheticCompositionEvent":169,"./SyntheticInputEvent":173,"./keyOf":220}],66:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSCore
 * @typechecks
 */

var invariant = require("./invariant");

/**
 * The CSSCore module specifies the API (and implements most of the methods)
 * that should be used when dealing with the display of elements (via their
 * CSS classes and visibility on screen. It is an API focused on mutating the
 * display and not reading it as no logical state should be encoded in the
 * display of elements.
 */

var CSSCore = {

  /**
   * Adds the class passed in to the element if it doesn't already have it.
   *
   * @param {DOMElement} element the element to set the class on
   * @param {string} className the CSS className
   * @return {DOMElement} the element passed in
   */
  addClass: function(element, className) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !/\s/.test(className),
      'CSSCore.addClass takes only a single class name. "%s" contains ' +
      'multiple classes.', className
    ) : invariant(!/\s/.test(className)));

    if (className) {
      if (element.classList) {
        element.classList.add(className);
      } else if (!CSSCore.hasClass(element, className)) {
        element.className = element.className + ' ' + className;
      }
    }
    return element;
  },

  /**
   * Removes the class passed in from the element
   *
   * @param {DOMElement} element the element to set the class on
   * @param {string} className the CSS className
   * @return {DOMElement} the element passed in
   */
  removeClass: function(element, className) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !/\s/.test(className),
      'CSSCore.removeClass takes only a single class name. "%s" contains ' +
      'multiple classes.', className
    ) : invariant(!/\s/.test(className)));

    if (className) {
      if (element.classList) {
        element.classList.remove(className);
      } else if (CSSCore.hasClass(element, className)) {
        element.className = element.className
          .replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1')
          .replace(/\s+/g, ' ') // multiple spaces to one
          .replace(/^\s*|\s*$/g, ''); // trim the ends
      }
    }
    return element;
  },

  /**
   * Helper to add or remove a class from an element based on a condition.
   *
   * @param {DOMElement} element the element to set the class on
   * @param {string} className the CSS className
   * @param {*} bool condition to whether to add or remove the class
   * @return {DOMElement} the element passed in
   */
  conditionClass: function(element, className, bool) {
    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
  },

  /**
   * Tests whether the element has the class specified.
   *
   * @param {DOMNode|DOMWindow} element the element to set the class on
   * @param {string} className the CSS className
   * @return {boolean} true if the element has the class, false if not
   */
  hasClass: function(element, className) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !/\s/.test(className),
      'CSS.hasClass takes only a single class name.'
    ) : invariant(!/\s/.test(className)));
    if (element.classList) {
      return !!className && element.classList.contains(className);
    }
    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
  }

};

module.exports = CSSCore;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],67:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

'use strict';

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  boxFlex: true,
  boxFlexGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  strokeDashoffset: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function(prop) {
  prefixes.forEach(function(prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundImage: true,
    backgroundPosition: true,
    backgroundRepeat: true,
    backgroundColor: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

},{}],68:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 * @typechecks static-only
 */

'use strict';

var CSSProperty = require("./CSSProperty");
var ExecutionEnvironment = require("./ExecutionEnvironment");

var camelizeStyleName = require("./camelizeStyleName");
var dangerousStyleValue = require("./dangerousStyleValue");
var hyphenateStyleName = require("./hyphenateStyleName");
var memoizeStringOnly = require("./memoizeStringOnly");
var warning = require("./warning");

var processStyleName = memoizeStringOnly(function(styleName) {
  return hyphenateStyleName(styleName);
});

var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("production" !== process.env.NODE_ENV) {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};

  var warnHyphenatedStyleName = function(name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    ("production" !== process.env.NODE_ENV ? warning(
      false,
      'Unsupported style property %s. Did you mean %s?',
      name,
      camelizeStyleName(name)
    ) : null);
  };

  var warnBadVendoredStyleName = function(name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    ("production" !== process.env.NODE_ENV ? warning(
      false,
      'Unsupported vendor-prefixed style property %s. Did you mean %s?',
      name,
      name.charAt(0).toUpperCase() + name.slice(1)
    ) : null);
  };

  var warnStyleValueWithSemicolon = function(name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    ("production" !== process.env.NODE_ENV ? warning(
      false,
      'Style property values shouldn\'t contain a semicolon. ' +
      'Try "%s: %s" instead.',
      name,
      value.replace(badStyleValueWithSemicolonPattern, '')
    ) : null);
  };

  /**
   * @param {string} name
   * @param {*} value
   */
  var warnValidStyle = function(name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @return {?string}
   */
  createMarkupForStyles: function(styles) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if ("production" !== process.env.NODE_ENV) {
        warnValidStyle(styleName, styleValue);
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   */
  setValueForStyles: function(node, styles) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("production" !== process.env.NODE_ENV) {
        warnValidStyle(styleName, styles[styleName]);
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
      if (styleName === 'float') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

}).call(this,require('_process'))
},{"./CSSProperty":67,"./ExecutionEnvironment":84,"./camelizeStyleName":184,"./dangerousStyleValue":191,"./hyphenateStyleName":211,"./memoizeStringOnly":222,"./warning":234,"_process":417}],69:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

'use strict';

var PooledClass = require("./PooledClass");

var assign = require("./Object.assign");
var invariant = require("./invariant");

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function(callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      ("production" !== process.env.NODE_ENV ? invariant(
        callbacks.length === contexts.length,
        'Mismatched list of contexts in callback queue'
      ) : invariant(callbacks.length === contexts.length));
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0, l = callbacks.length; i < l; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function() {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function() {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;

}).call(this,require('_process'))
},{"./Object.assign":91,"./PooledClass":92,"./invariant":213,"_process":417}],70:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");
var EventPropagators = require("./EventPropagators");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var ReactUpdates = require("./ReactUpdates");
var SyntheticEvent = require("./SyntheticEvent");

var isEventSupported = require("./isEventSupported");
var isTextInputElement = require("./isTextInputElement");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({onChange: null}),
      captured: keyOf({onChangeCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topChange,
      topLevelTypes.topClick,
      topLevelTypes.topFocus,
      topLevelTypes.topInput,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementID = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  return (
    elem.nodeName === 'SELECT' ||
    (elem.nodeName === 'INPUT' && elem.type === 'file')
  );
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (
    (!('documentMode' in document) || document.documentMode > 8)
  );
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(
    eventTypes.change,
    activeElementID,
    nativeEvent
  );
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue();
}

function startWatchingForChangeEventIE8(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementID = null;
}

function getTargetIDForChangeEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topChange) {
    return topLevelTargetID;
  }
}
function handleEventsForChangeEventIE8(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}


/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events
  isInputEventSupported = isEventSupported('input') && (
    (!('documentMode' in document) || document.documentMode > 9)
  );
}

/**
 * (For old IE.) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp =  {
  get: function() {
    return activeElementValueProp.get.call(this);
  },
  set: function(val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For old IE.) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(
    target.constructor.prototype,
    'value'
  );

  Object.defineProperty(activeElement, 'value', newValueProp);
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For old IE.) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementID = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For old IE.) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetIDForInputEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return topLevelTargetID;
  }
}

// For IE8 and IE9.
function handleEventsForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetIDForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topSelectionChange ||
      topLevelType === topLevelTypes.topKeyUp ||
      topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementID;
    }
  }
}


/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return (
    elem.nodeName === 'INPUT' &&
    (elem.type === 'checkbox' || elem.type === 'radio')
  );
}

function getTargetIDForClickEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topClick) {
    return topLevelTargetID;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var getTargetIDFunc, handleEventFunc;
    if (shouldUseChangeEvent(topLevelTarget)) {
      if (doesChangeEventBubble) {
        getTargetIDFunc = getTargetIDForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(topLevelTarget)) {
      if (isInputEventSupported) {
        getTargetIDFunc = getTargetIDForInputEvent;
      } else {
        getTargetIDFunc = getTargetIDForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(topLevelTarget)) {
      getTargetIDFunc = getTargetIDForClickEvent;
    }

    if (getTargetIDFunc) {
      var targetID = getTargetIDFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
      if (targetID) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          targetID,
          nativeEvent
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
    }
  }

};

module.exports = ChangeEventPlugin;

},{"./EventConstants":78,"./EventPluginHub":80,"./EventPropagators":83,"./ExecutionEnvironment":84,"./ReactUpdates":162,"./SyntheticEvent":171,"./isEventSupported":214,"./isTextInputElement":216,"./keyOf":220}],71:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ClientReactRootIndex
 * @typechecks
 */

'use strict';

var nextReactRootIndex = 0;

var ClientReactRootIndex = {
  createReactRootIndex: function() {
    return nextReactRootIndex++;
  }
};

module.exports = ClientReactRootIndex;

},{}],72:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 * @typechecks static-only
 */

'use strict';

var Danger = require("./Danger");
var ReactMultiChildUpdateTypes = require("./ReactMultiChildUpdateTypes");

var setTextContent = require("./setTextContent");
var invariant = require("./invariant");

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
function insertChildAt(parentNode, childNode, index) {
  // By exploiting arrays returning `undefined` for an undefined index, we can
  // rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. However, using `undefined` is not allowed by all
  // browsers so we must replace it with `null`.
  parentNode.insertBefore(
    childNode,
    parentNode.childNodes[index] || null
  );
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  updateTextContent: setTextContent,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markupList List of markup strings.
   * @internal
   */
  processUpdates: function(updates, markupList) {
    var update;
    // Mapping from parent IDs to initial child orderings.
    var initialChildren = null;
    // List of children that will be moved or removed.
    var updatedChildren = null;

    for (var i = 0; i < updates.length; i++) {
      update = updates[i];
      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
        var updatedIndex = update.fromIndex;
        var updatedChild = update.parentNode.childNodes[updatedIndex];
        var parentID = update.parentID;

        ("production" !== process.env.NODE_ENV ? invariant(
          updatedChild,
          'processUpdates(): Unable to find child %s of element. This ' +
          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
          'browser), usually due to forgetting a <tbody> when using tables, ' +
          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +
          'in an <svg> parent. Try inspecting the child nodes of the element ' +
          'with React ID `%s`.',
          updatedIndex,
          parentID
        ) : invariant(updatedChild));

        initialChildren = initialChildren || {};
        initialChildren[parentID] = initialChildren[parentID] || [];
        initialChildren[parentID][updatedIndex] = updatedChild;

        updatedChildren = updatedChildren || [];
        updatedChildren.push(updatedChild);
      }
    }

    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

    // Remove updated children first so that `toIndex` is consistent.
    if (updatedChildren) {
      for (var j = 0; j < updatedChildren.length; j++) {
        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
      }
    }

    for (var k = 0; k < updates.length; k++) {
      update = updates[k];
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertChildAt(
            update.parentNode,
            renderedMarkup[update.markupIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          insertChildAt(
            update.parentNode,
            initialChildren[update.parentID][update.fromIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          setTextContent(
            update.parentNode,
            update.textContent
          );
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          // Already removed by the for-loop above.
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

}).call(this,require('_process'))
},{"./Danger":75,"./ReactMultiChildUpdateTypes":141,"./invariant":213,"./setTextContent":228,"_process":417}],73:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 * @typechecks static-only
 */

/*jslint bitwise: true */

'use strict';

var invariant = require("./invariant");

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_ATTRIBUTE: 0x1,
  MUST_USE_PROPERTY: 0x2,
  HAS_SIDE_EFFECTS: 0x4,
  HAS_BOOLEAN_VALUE: 0x8,
  HAS_NUMERIC_VALUE: 0x10,
  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function(domPropertyConfig) {
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(
        domPropertyConfig.isCustomAttribute
      );
    }

    for (var propName in Properties) {
      ("production" !== process.env.NODE_ENV ? invariant(
        !DOMProperty.isStandardName.hasOwnProperty(propName),
        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
        '\'%s\' which has already been injected. You may be accidentally ' +
        'injecting the same DOM property config twice, or you may be ' +
        'injecting two configs that have conflicting property names.',
        propName
      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

      DOMProperty.isStandardName[propName] = true;

      var lowerCased = propName.toLowerCase();
      DOMProperty.getPossibleStandardName[lowerCased] = propName;

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        DOMProperty.getPossibleStandardName[attributeName] = propName;
        DOMProperty.getAttributeName[propName] = attributeName;
      } else {
        DOMProperty.getAttributeName[propName] = lowerCased;
      }

      DOMProperty.getPropertyName[propName] =
        DOMPropertyNames.hasOwnProperty(propName) ?
          DOMPropertyNames[propName] :
          propName;

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
      } else {
        DOMProperty.getMutationMethod[propName] = null;
      }

      var propConfig = Properties[propName];
      DOMProperty.mustUseAttribute[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
      DOMProperty.mustUseProperty[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
      DOMProperty.hasSideEffects[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
      DOMProperty.hasBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
      DOMProperty.hasNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
      DOMProperty.hasPositiveNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
      DOMProperty.hasOverloadedBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

      ("production" !== process.env.NODE_ENV ? invariant(
        !DOMProperty.mustUseAttribute[propName] ||
          !DOMProperty.mustUseProperty[propName],
        'DOMProperty: Cannot require using both attribute and property: %s',
        propName
      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
        !DOMProperty.mustUseProperty[propName]));
      ("production" !== process.env.NODE_ENV ? invariant(
        DOMProperty.mustUseProperty[propName] ||
          !DOMProperty.hasSideEffects[propName],
        'DOMProperty: Properties that have side effects must use property: %s',
        propName
      ) : invariant(DOMProperty.mustUseProperty[propName] ||
        !DOMProperty.hasSideEffects[propName]));
      ("production" !== process.env.NODE_ENV ? invariant(
        !!DOMProperty.hasBooleanValue[propName] +
          !!DOMProperty.hasNumericValue[propName] +
          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
        'numeric value, but not a combination: %s',
        propName
      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
        !!DOMProperty.hasNumericValue[propName] +
        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
    }
  }
};
var defaultValueCache = {};

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',

  /**
   * Checks whether a property name is a standard property.
   * @type {Object}
   */
  isStandardName: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties.
   * @type {Object}
   */
  getPossibleStandardName: {},

  /**
   * Mapping from normalized names to attribute names that differ. Attribute
   * names are used when rendering markup or with `*Attribute()`.
   * @type {Object}
   */
  getAttributeName: {},

  /**
   * Mapping from normalized names to properties on DOM node instances.
   * (This includes properties that mutate due to external factors.)
   * @type {Object}
   */
  getPropertyName: {},

  /**
   * Mapping from normalized names to mutation methods. This will only exist if
   * mutation cannot be set simply by the property or `setAttribute()`.
   * @type {Object}
   */
  getMutationMethod: {},

  /**
   * Whether the property must be accessed and mutated as an object property.
   * @type {Object}
   */
  mustUseAttribute: {},

  /**
   * Whether the property must be accessed and mutated using `*Attribute()`.
   * (This includes anything that fails `<propName> in <element>`.)
   * @type {Object}
   */
  mustUseProperty: {},

  /**
   * Whether or not setting a value causes side effects such as triggering
   * resources to be loaded or text selection changes. We must ensure that
   * the value is only set if it has changed.
   * @type {Object}
   */
  hasSideEffects: {},

  /**
   * Whether the property should be removed when set to a falsey value.
   * @type {Object}
   */
  hasBooleanValue: {},

  /**
   * Whether the property must be numeric or parse as a
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasNumericValue: {},

  /**
   * Whether the property must be positive numeric or parse as a positive
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasPositiveNumericValue: {},

  /**
   * Whether the property can be used as a flag as well as with a value. Removed
   * when strictly equal to false; present without a value when strictly equal
   * to true; present with a value otherwise.
   * @type {Object}
   */
  hasOverloadedBooleanValue: {},

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function(attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  /**
   * Returns the default property value for a DOM property (i.e., not an
   * attribute). Most default values are '' or false, but not all. Worse yet,
   * some (in particular, `type`) vary depending on the type of element.
   *
   * TODO: Is it better to grab all the possible properties when creating an
   * element to avoid having to create the same element twice?
   */
  getDefaultValueForProperty: function(nodeName, prop) {
    var nodeDefaults = defaultValueCache[nodeName];
    var testElement;
    if (!nodeDefaults) {
      defaultValueCache[nodeName] = nodeDefaults = {};
    }
    if (!(prop in nodeDefaults)) {
      testElement = document.createElement(nodeName);
      nodeDefaults[prop] = testElement[prop];
    }
    return nodeDefaults[prop];
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],74:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 * @typechecks static-only
 */

'use strict';

var DOMProperty = require("./DOMProperty");

var quoteAttributeValueForBrowser = require("./quoteAttributeValueForBrowser");
var warning = require("./warning");

function shouldIgnoreValue(name, value) {
  return value == null ||
    (DOMProperty.hasBooleanValue[name] && !value) ||
    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
}

if ("production" !== process.env.NODE_ENV) {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function(name) {
    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = (
      DOMProperty.isCustomAttribute(lowerCasedName) ?
        lowerCasedName :
      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
        DOMProperty.getPossibleStandardName[lowerCasedName] :
        null
    );

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    ("production" !== process.env.NODE_ENV ? warning(
      standardName == null,
      'Unknown DOM property %s. Did you mean %s?',
      name,
      standardName
    ) : null);

  };
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function(id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +
      quoteAttributeValueForBrowser(id);
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function(name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      if (shouldIgnoreValue(name, value)) {
        return '';
      }
      var attributeName = DOMProperty.getAttributeName[name];
      if (DOMProperty.hasBooleanValue[name] ||
          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
        return attributeName;
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    } else if ("production" !== process.env.NODE_ENV) {
      warnUnknownProperty(name);
    }
    return null;
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function(node, name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(name, value)) {
        this.deleteValueForProperty(node, name);
      } else if (DOMProperty.mustUseAttribute[name]) {
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
        // property type before comparing; only `value` does and is string.
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== ('' + value)) {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propName] = value;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        node.removeAttribute(name);
      } else {
        node.setAttribute(name, '' + value);
      }
    } else if ("production" !== process.env.NODE_ENV) {
      warnUnknownProperty(name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function(node, name) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        var defaultValue = DOMProperty.getDefaultValueForProperty(
          node.nodeName,
          propName
        );
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== defaultValue) {
          node[propName] = defaultValue;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    } else if ("production" !== process.env.NODE_ENV) {
      warnUnknownProperty(name);
    }
  }

};

module.exports = DOMPropertyOperations;

}).call(this,require('_process'))
},{"./DOMProperty":73,"./quoteAttributeValueForBrowser":226,"./warning":234,"_process":417}],75:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 * @typechecks static-only
 */

/*jslint evil: true, sub: true */

'use strict';

var ExecutionEnvironment = require("./ExecutionEnvironment");

var createNodesFromMarkup = require("./createNodesFromMarkup");
var emptyFunction = require("./emptyFunction");
var getMarkupWrap = require("./getMarkupWrap");
var invariant = require("./invariant");

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function(markupList) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
      'thread. Make sure `window` and `document` are available globally ' +
      'before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      ("production" !== process.env.NODE_ENV ? invariant(
        markupList[i],
        'dangerouslyRenderMarkup(...): Missing markup.'
      ) : invariant(markupList[i]));
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      var resultIndex;
      for (resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(
            OPEN_TAG_NAME_EXP,
            // This index will be parsed back out below.
            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
          );
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(
        markupListByNodeName.join(''),
        emptyFunction // Do nothing special with <script> tags.
      );

      for (var j = 0; j < renderNodes.length; ++j) {
        var renderNode = renderNodes[j];
        if (renderNode.hasAttribute &&
            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          ("production" !== process.env.NODE_ENV ? invariant(
            !resultList.hasOwnProperty(resultIndex),
            'Danger: Assigning to an already-occupied result index.'
          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;

        } else if ("production" !== process.env.NODE_ENV) {
          console.error(
            'Danger: Discarding unexpected node:',
            renderNode
          );
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    ("production" !== process.env.NODE_ENV ? invariant(
      resultListAssignmentCount === resultList.length,
      'Danger: Did not assign to every index of resultList.'
    ) : invariant(resultListAssignmentCount === resultList.length));

    ("production" !== process.env.NODE_ENV ? invariant(
      resultList.length === markupList.length,
      'Danger: Expected markup to render %s nodes, but rendered %s.',
      markupList.length,
      resultList.length
    ) : invariant(resultList.length === markupList.length));

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
      'worker thread. Make sure `window` and `document` are available ' +
      'globally before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
    ("production" !== process.env.NODE_ENV ? invariant(
      oldChild.tagName.toLowerCase() !== 'html',
      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
      '<html> node. This is because browser quirks make this unreliable ' +
      'and/or slow. If you want to render to the root you must use ' +
      'server rendering. See React.renderToString().'
    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
    oldChild.parentNode.replaceChild(newChild, oldChild);
  }

};

module.exports = Danger;

}).call(this,require('_process'))
},{"./ExecutionEnvironment":84,"./createNodesFromMarkup":189,"./emptyFunction":192,"./getMarkupWrap":205,"./invariant":213,"_process":417}],76:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

'use strict';

var keyOf = require("./keyOf");

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [
  keyOf({ResponderEventPlugin: null}),
  keyOf({SimpleEventPlugin: null}),
  keyOf({TapEventPlugin: null}),
  keyOf({EnterLeaveEventPlugin: null}),
  keyOf({ChangeEventPlugin: null}),
  keyOf({SelectEventPlugin: null}),
  keyOf({BeforeInputEventPlugin: null}),
  keyOf({AnalyticsEventPlugin: null}),
  keyOf({MobileSafariClickEventPlugin: null})
];

module.exports = DefaultEventPluginOrder;

},{"./keyOf":220}],77:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 * @typechecks static-only
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var SyntheticMouseEvent = require("./SyntheticMouseEvent");

var ReactMount = require("./ReactMount");
var keyOf = require("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;
var getFirstReactDOM = ReactMount.getFirstReactDOM;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({onMouseEnter: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  },
  mouseLeave: {
    registrationName: keyOf({onMouseLeave: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  }
};

var extractedEvents = [null, null];

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topMouseOver &&
        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut &&
        topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (topLevelTarget.window === topLevelTarget) {
      // `topLevelTarget` is probably a window object.
      win = topLevelTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = topLevelTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from, to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = topLevelTarget;
      to =
        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
        win;
    } else {
      from = win;
      to = topLevelTarget;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromID = from ? ReactMount.getID(from) : '';
    var toID = to ? ReactMount.getID(to) : '';

    var leave = SyntheticMouseEvent.getPooled(
      eventTypes.mouseLeave,
      fromID,
      nativeEvent
    );
    leave.type = 'mouseleave';
    leave.target = from;
    leave.relatedTarget = to;

    var enter = SyntheticMouseEvent.getPooled(
      eventTypes.mouseEnter,
      toID,
      nativeEvent
    );
    enter.type = 'mouseenter';
    enter.target = to;
    enter.relatedTarget = from;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

    extractedEvents[0] = leave;
    extractedEvents[1] = enter;

    return extractedEvents;
  }

};

module.exports = EnterLeaveEventPlugin;

},{"./EventConstants":78,"./EventPropagators":83,"./ReactMount":139,"./SyntheticMouseEvent":175,"./keyOf":220}],78:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

'use strict';

var keyMirror = require("./keyMirror");

var PropagationPhases = keyMirror({bubbled: null, captured: null});

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topBlur: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topReset: null,
  topScroll: null,
  topSelectionChange: null,
  topSubmit: null,
  topTextInput: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;

},{"./keyMirror":219}],79:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventListener
 * @typechecks
 */

var emptyFunction = require("./emptyFunction");

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function(target, eventType, callback) {
    if (!target.addEventListener) {
      if ("production" !== process.env.NODE_ENV) {
        console.error(
          'Attempted to listen to events during the capture phase on a ' +
          'browser that does not support the capture phase. Your application ' +
          'will not receive some events.'
        );
      }
      return {
        remove: emptyFunction
      };
    } else {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    }
  },

  registerDefault: function() {}
};

module.exports = EventListener;

}).call(this,require('_process'))
},{"./emptyFunction":192,"_process":417}],80:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

'use strict';

var EventPluginRegistry = require("./EventPluginRegistry");
var EventPluginUtils = require("./EventPluginUtils");

var accumulateInto = require("./accumulateInto");
var forEachAccumulated = require("./forEachAccumulated");
var invariant = require("./invariant");

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function(event) {
  if (event) {
    var executeDispatch = EventPluginUtils.executeDispatch;
    // Plugins can provide custom behavior when dispatching events.
    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
    if (PluginModule && PluginModule.executeDispatch) {
      executeDispatch = PluginModule.executeDispatch;
    }
    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

/**
 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
 *   hierarchy given ids of the logical DOM elements involved.
 */
var InstanceHandle = null;

function validateInstanceHandle() {
  var valid =
    InstanceHandle &&
    InstanceHandle.traverseTwoPhase &&
    InstanceHandle.traverseEnterLeave;
  ("production" !== process.env.NODE_ENV ? invariant(
    valid,
    'InstanceHandle not injected before use!'
  ) : invariant(valid));
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {object} InjectedMount
     * @public
     */
    injectMount: EventPluginUtils.injection.injectMount,

    /**
     * @param {object} InjectedInstanceHandle
     * @public
     */
    injectInstanceHandle: function(InjectedInstanceHandle) {
      InstanceHandle = InjectedInstanceHandle;
      if ("production" !== process.env.NODE_ENV) {
        validateInstanceHandle();
      }
    },

    getInstanceHandle: function() {
      if ("production" !== process.env.NODE_ENV) {
        validateInstanceHandle();
      }
      return InstanceHandle;
    },

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

  registrationNameModules: EventPluginRegistry.registrationNameModules,

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {?function} listener The callback to store.
   */
  putListener: function(id, registrationName, listener) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !listener || typeof listener === 'function',
      'Expected %s listener to be a function, instead got type %s',
      registrationName, typeof listener
    ) : invariant(!listener || typeof listener === 'function'));

    var bankForRegistrationName =
      listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[id] = listener;
  },

  /**
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[id];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    if (bankForRegistrationName) {
      delete bankForRegistrationName[id];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {string} id ID of the DOM element.
   */
  deleteAllListeners: function(id) {
    for (var registrationName in listenerBank) {
      delete listenerBank[registrationName][id];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0, l = plugins.length; i < l; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(
          topLevelType,
          topLevelTarget,
          topLevelTargetID,
          nativeEvent
        );
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function(events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function() {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
    ("production" !== process.env.NODE_ENV ? invariant(
      !eventQueue,
      'processEventQueue(): Additional events were enqueued while processing ' +
      'an event queue. Support for this has not yet been implemented.'
    ) : invariant(!eventQueue));
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function() {
    listenerBank = {};
  },

  __getListenerBank: function() {
    return listenerBank;
  }

};

module.exports = EventPluginHub;

}).call(this,require('_process'))
},{"./EventPluginRegistry":81,"./EventPluginUtils":82,"./accumulateInto":181,"./forEachAccumulated":198,"./invariant":213,"_process":417}],81:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 * @typechecks static-only
 */

'use strict';

var invariant = require("./invariant");

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    ("production" !== process.env.NODE_ENV ? invariant(
      pluginIndex > -1,
      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
      'the plugin ordering, `%s`.',
      pluginName
    ) : invariant(pluginIndex > -1));
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      PluginModule.extractEvents,
      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
      'method, but `%s` does not.',
      pluginName
    ) : invariant(PluginModule.extractEvents));
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      ("production" !== process.env.NODE_ENV ? invariant(
        publishEventForPlugin(
          publishedEvents[eventName],
          PluginModule,
          eventName
        ),
        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
        eventName,
        pluginName
      ) : invariant(publishEventForPlugin(
        publishedEvents[eventName],
        PluginModule,
        eventName
      )));
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  ("production" !== process.env.NODE_ENV ? invariant(
    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'event name, `%s`.',
    eventName
  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(
          phasedRegistrationName,
          PluginModule,
          eventName
        );
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(
      dispatchConfig.registrationName,
      PluginModule,
      eventName
    );
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  ("production" !== process.env.NODE_ENV ? invariant(
    !EventPluginRegistry.registrationNameModules[registrationName],
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'registration name, `%s`.',
    registrationName
  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] =
    PluginModule.eventTypes[eventName].dependencies;
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function(InjectedEventPluginOrder) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !EventPluginOrder,
      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
      'once. You are likely trying to load more than one copy of React.'
    ) : invariant(!EventPluginOrder));
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) ||
          namesToPlugins[pluginName] !== PluginModule) {
        ("production" !== process.env.NODE_ENV ? invariant(
          !namesToPlugins[pluginName],
          'EventPluginRegistry: Cannot inject two different event plugins ' +
          'using the same name, `%s`.',
          pluginName
        ) : invariant(!namesToPlugins[pluginName]));
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[
        dispatchConfig.registrationName
      ] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[
        dispatchConfig.phasedRegistrationNames[phase]
      ];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function() {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }
  }

};

module.exports = EventPluginRegistry;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],82:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

'use strict';

var EventConstants = require("./EventConstants");

var invariant = require("./invariant");

/**
 * Injected dependencies:
 */

/**
 * - `Mount`: [required] Module that can convert between React dom IDs and
 *   actual node references.
 */
var injection = {
  Mount: null,
  injectMount: function(InjectedMount) {
    injection.Mount = InjectedMount;
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? invariant(
        InjectedMount && InjectedMount.getNode,
        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
        'is missing getNode.'
      ) : invariant(InjectedMount && InjectedMount.getNode));
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp ||
         topLevelType === topLevelTypes.topTouchEnd ||
         topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove ||
         topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown ||
         topLevelType === topLevelTypes.topTouchStart;
}


var validateEventDispatches;
if ("production" !== process.env.NODE_ENV) {
  validateEventDispatches = function(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var idsIsArr = Array.isArray(dispatchIDs);
    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
    var listenersLen = listenersIsArr ?
      dispatchListeners.length :
      dispatchListeners ? 1 : 0;

    ("production" !== process.env.NODE_ENV ? invariant(
      idsIsArr === listenersIsArr && IDsLen === listenersLen,
      'EventPluginUtils: Invalid `event`.'
    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
  };
}

/**
 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
 * kept separate to conserve memory.
 */
function forEachEventDispatch(event, cb) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== process.env.NODE_ENV) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      cb(event, dispatchListeners[i], dispatchIDs[i]);
    }
  } else if (dispatchListeners) {
    cb(event, dispatchListeners, dispatchIDs);
  }
}

/**
 * Default implementation of PluginModule.executeDispatch().
 * @param {SyntheticEvent} SyntheticEvent to handle
 * @param {function} Application-level callback
 * @param {string} domID DOM id to pass to the callback.
 */
function executeDispatch(event, listener, domID) {
  event.currentTarget = injection.Mount.getNode(domID);
  var returnValue = listener(event, domID);
  event.currentTarget = null;
  return returnValue;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, cb) {
  forEachEventDispatch(event, cb);
  event._dispatchListeners = null;
  event._dispatchIDs = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return id of the first dispatch execution who's listener returns true, or
 * null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== process.env.NODE_ENV) {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchIDs[i])) {
        return dispatchIDs[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchIDs)) {
      return dispatchIDs;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchIDs = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("production" !== process.env.NODE_ENV) {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchID = event._dispatchIDs;
  ("production" !== process.env.NODE_ENV ? invariant(
    !Array.isArray(dispatchListener),
    'executeDirectDispatch(...): Invalid `event`.'
  ) : invariant(!Array.isArray(dispatchListener)));
  var res = dispatchListener ?
    dispatchListener(event, dispatchID) :
    null;
  event._dispatchListeners = null;
  event._dispatchIDs = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {bool} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatch: executeDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,
  injection: injection,
  useTouchEvents: false
};

module.exports = EventPluginUtils;

}).call(this,require('_process'))
},{"./EventConstants":78,"./invariant":213,"_process":417}],83:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");

var accumulateInto = require("./accumulateInto");
var forEachAccumulated = require("./forEachAccumulated");

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(id, event, propagationPhase) {
  var registrationName =
    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(id, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(domID, upwards, event) {
  if ("production" !== process.env.NODE_ENV) {
    if (!domID) {
      throw new Error('Dispatching id must not be null');
    }
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(domID, event, phase);
  if (listener) {
    event._dispatchListeners =
      accumulateInto(event._dispatchListeners, listener);
    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We can not perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
      event.dispatchMarker,
      accumulateDirectionalDispatches,
      event
    );
  }
}


/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(id, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(id, registrationName);
    if (listener) {
      event._dispatchListeners =
        accumulateInto(event._dispatchListeners, listener);
      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event.dispatchMarker, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
    fromID,
    toID,
    accumulateDispatches,
    leave,
    enter
  );
}


function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}



/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

}).call(this,require('_process'))
},{"./EventConstants":78,"./EventPluginHub":80,"./accumulateInto":181,"./forEachAccumulated":198,"_process":417}],84:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ExecutionEnvironment
 */

/*jslint evil: true */

"use strict";

var canUseDOM = !!(
  (typeof window !== 'undefined' &&
  window.document && window.document.createElement)
);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners:
    canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

},{}],85:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule FallbackCompositionState
 * @typechecks static-only
 */

'use strict';

var PooledClass = require("./PooledClass");

var assign = require("./Object.assign");
var getTextContentAccessor = require("./getTextContentAccessor");

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

assign(FallbackCompositionState.prototype, {
  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function() {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function() {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

},{"./Object.assign":91,"./PooledClass":92,"./getTextContentAccessor":208}],86:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

/*jslint bitwise: true*/

'use strict';

var DOMProperty = require("./DOMProperty");
var ExecutionEnvironment = require("./ExecutionEnvironment");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE =
  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE =
  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var hasSVG;
if (ExecutionEnvironment.canUseDOM) {
  var implementation = document.implementation;
  hasSVG = (
    implementation &&
    implementation.hasFeature &&
    implementation.hasFeature(
      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
      '1.1'
    )
  );
}


var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(
    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
  ),
  Properties: {
    /**
     * Standard Properties
     */
    accept: null,
    acceptCharset: null,
    accessKey: null,
    action: null,
    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    allowTransparency: MUST_USE_ATTRIBUTE,
    alt: null,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: null,
    // autoFocus is polyfilled/normalized by AutoFocusMixin
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    cellPadding: null,
    cellSpacing: null,
    charSet: MUST_USE_ATTRIBUTE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    classID: MUST_USE_ATTRIBUTE,
    // To set className on SVG elements, it's necessary to use .setAttribute;
    // this works on HTML elements too in all browsers except IE8. Conveniently,
    // IE8 doesn't support SVG and so we can simply use the attribute in
    // browsers that support SVG and the property in browsers that don't,
    // regardless of whether the element is HTML or SVG.
    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: null,
    content: null,
    contentEditable: null,
    contextMenu: MUST_USE_ATTRIBUTE,
    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    coords: null,
    crossOrigin: null,
    data: null, // For `<object />` acts as `src`.
    dateTime: MUST_USE_ATTRIBUTE,
    defer: HAS_BOOLEAN_VALUE,
    dir: null,
    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: null,
    encType: null,
    form: MUST_USE_ATTRIBUTE,
    formAction: MUST_USE_ATTRIBUTE,
    formEncType: MUST_USE_ATTRIBUTE,
    formMethod: MUST_USE_ATTRIBUTE,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: MUST_USE_ATTRIBUTE,
    frameBorder: MUST_USE_ATTRIBUTE,
    headers: null,
    height: MUST_USE_ATTRIBUTE,
    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    high: null,
    href: null,
    hrefLang: null,
    htmlFor: null,
    httpEquiv: null,
    icon: null,
    id: MUST_USE_PROPERTY,
    label: null,
    lang: null,
    list: MUST_USE_ATTRIBUTE,
    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    low: null,
    manifest: MUST_USE_ATTRIBUTE,
    marginHeight: null,
    marginWidth: null,
    max: null,
    maxLength: MUST_USE_ATTRIBUTE,
    media: MUST_USE_ATTRIBUTE,
    mediaGroup: null,
    method: null,
    min: null,
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: null,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: null,
    pattern: null,
    placeholder: null,
    poster: null,
    preload: null,
    radioGroup: null,
    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    rel: null,
    required: HAS_BOOLEAN_VALUE,
    role: MUST_USE_ATTRIBUTE,
    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: null,
    sandbox: null,
    scope: null,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: null,
    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: null,
    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    sizes: MUST_USE_ATTRIBUTE,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: null,
    src: null,
    srcDoc: MUST_USE_PROPERTY,
    srcSet: MUST_USE_ATTRIBUTE,
    start: HAS_NUMERIC_VALUE,
    step: null,
    style: null,
    tabIndex: null,
    target: null,
    title: null,
    type: null,
    useMap: null,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: MUST_USE_ATTRIBUTE,
    wmode: MUST_USE_ATTRIBUTE,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: null,
    autoCorrect: null,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: MUST_USE_ATTRIBUTE,
    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    itemType: MUST_USE_ATTRIBUTE,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: MUST_USE_ATTRIBUTE,
    itemRef: MUST_USE_ATTRIBUTE,
    // property is supported for OpenGraph in meta tags.
    property: null,
    // IE-only attribute that controls focus behavior
    unselectable: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {
    autoCapitalize: 'autocapitalize',
    autoComplete: 'autocomplete',
    autoCorrect: 'autocorrect',
    autoFocus: 'autofocus',
    autoPlay: 'autoplay',
    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
    encType: 'encoding',
    hrefLang: 'hreflang',
    radioGroup: 'radiogroup',
    spellCheck: 'spellcheck',
    srcDoc: 'srcdoc',
    srcSet: 'srcset'
  }
};

module.exports = HTMLDOMPropertyConfig;

},{"./DOMProperty":73,"./ExecutionEnvironment":84}],87:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedStateMixin
 * @typechecks static-only
 */

'use strict';

var ReactLink = require("./ReactLink");
var ReactStateSetters = require("./ReactStateSetters");

/**
 * A simple mixin around ReactLink.forState().
 */
var LinkedStateMixin = {
  /**
   * Create a ReactLink that's linked to part of this component's state. The
   * ReactLink will have the current value of this.state[key] and will call
   * setState() when a change is requested.
   *
   * @param {string} key state key to update. Note: you may want to use keyOf()
   * if you're using Google Closure Compiler advanced mode.
   * @return {ReactLink} ReactLink instance linking to the state.
   */
  linkState: function(key) {
    return new ReactLink(
      this.state[key],
      ReactStateSetters.createStateKeySetter(this, key)
    );
  }
};

module.exports = LinkedStateMixin;

},{"./ReactLink":137,"./ReactStateSetters":156}],88:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 * @typechecks static-only
 */

'use strict';

var ReactPropTypes = require("./ReactPropTypes");

var invariant = require("./invariant");

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(input) {
  ("production" !== process.env.NODE_ENV ? invariant(
    input.props.checkedLink == null || input.props.valueLink == null,
    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
}
function _assertValueLink(input) {
  _assertSingleLink(input);
  ("production" !== process.env.NODE_ENV ? invariant(
    input.props.value == null && input.props.onChange == null,
    'Cannot provide a valueLink and a value or onChange event. If you want ' +
    'to use value or onChange, you probably don\'t want to use valueLink.'
  ) : invariant(input.props.value == null && input.props.onChange == null));
}

function _assertCheckedLink(input) {
  _assertSingleLink(input);
  ("production" !== process.env.NODE_ENV ? invariant(
    input.props.checked == null && input.props.onChange == null,
    'Cannot provide a checkedLink and a checked property or onChange event. ' +
    'If you want to use checked or onChange, you probably don\'t want to ' +
    'use checkedLink'
  ) : invariant(input.props.checked == null && input.props.onChange == null));
}

/**
 * @param {SyntheticEvent} e change event to handle
 */
function _handleLinkedValueChange(e) {
  /*jshint validthis:true */
  this.props.valueLink.requestChange(e.target.value);
}

/**
  * @param {SyntheticEvent} e change event to handle
  */
function _handleLinkedCheckChange(e) {
  /*jshint validthis:true */
  this.props.checkedLink.requestChange(e.target.checked);
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  Mixin: {
    propTypes: {
      value: function(props, propName, componentName) {
        if (!props[propName] ||
            hasReadOnlyValue[props.type] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return null;
        }
        return new Error(
          'You provided a `value` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultValue`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      checked: function(props, propName, componentName) {
        if (!props[propName] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return null;
        }
        return new Error(
          'You provided a `checked` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultChecked`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      onChange: ReactPropTypes.func
    }
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return input.props.valueLink.value;
    }
    return input.props.value;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function(input) {
    if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return input.props.checkedLink.value;
    }
    return input.props.checked;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {function} change callback either from onChange prop or link.
   */
  getOnChange: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return _handleLinkedValueChange;
    } else if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return _handleLinkedCheckChange;
    }
    return input.props.onChange;
  }
};

module.exports = LinkedValueUtils;

}).call(this,require('_process'))
},{"./ReactPropTypes":148,"./invariant":213,"_process":417}],89:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LocalEventTrapMixin
 */

'use strict';

var ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter");

var accumulateInto = require("./accumulateInto");
var forEachAccumulated = require("./forEachAccumulated");
var invariant = require("./invariant");

function remove(event) {
  event.remove();
}

var LocalEventTrapMixin = {
  trapBubbledEvent:function(topLevelType, handlerBaseName) {
    ("production" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
    // If a component renders to null or if another component fatals and causes
    // the state of the tree to be corrupted, `node` here can be null.
    var node = this.getDOMNode();
    ("production" !== process.env.NODE_ENV ? invariant(
      node,
      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'
    ) : invariant(node));
    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      node
    );
    this._localEventListeners =
      accumulateInto(this._localEventListeners, listener);
  },

  // trapCapturedEvent would look nearly identical. We don't implement that
  // method because it isn't currently needed.

  componentWillUnmount:function() {
    if (this._localEventListeners) {
      forEachAccumulated(this._localEventListeners, remove);
    }
  }
};

module.exports = LocalEventTrapMixin;

}).call(this,require('_process'))
},{"./ReactBrowserEventEmitter":95,"./accumulateInto":181,"./forEachAccumulated":198,"./invariant":213,"_process":417}],90:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule MobileSafariClickEventPlugin
 * @typechecks static-only
 */

'use strict';

var EventConstants = require("./EventConstants");

var emptyFunction = require("./emptyFunction");

var topLevelTypes = EventConstants.topLevelTypes;

/**
 * Mobile Safari does not fire properly bubble click events on non-interactive
 * elements, which means delegated click listeners do not fire. The workaround
 * for this bug involves attaching an empty click listener on the target node.
 *
 * This particular plugin works around the bug by attaching an empty click
 * listener on `touchstart` (which does fire on every element).
 */
var MobileSafariClickEventPlugin = {

  eventTypes: null,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topTouchStart) {
      var target = nativeEvent.target;
      if (target && !target.onclick) {
        target.onclick = emptyFunction;
      }
    }
  }

};

module.exports = MobileSafariClickEventPlugin;

},{"./EventConstants":78,"./emptyFunction":192}],91:[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Object.assign
 */

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

'use strict';

function assign(target, sources) {
  if (target == null) {
    throw new TypeError('Object.assign target cannot be null or undefined');
  }

  var to = Object(target);
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    var from = Object(nextSource);

    // We don't currently support accessors nor proxies. Therefore this
    // copy cannot throw. If we ever supported this then we must handle
    // exceptions and side-effects. We don't support symbols so they won't
    // be transferred.

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
  }

  return to;
}

module.exports = assign;

},{}],92:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

'use strict';

var invariant = require("./invariant");

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function(instance) {
  var Klass = this;
  ("production" !== process.env.NODE_ENV ? invariant(
    instance instanceof Klass,
    'Trying to release an instance into a pool of a different type.'
  ) : invariant(instance instanceof Klass));
  if (instance.destructor) {
    instance.destructor();
  }
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],93:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

'use strict';

var EventPluginUtils = require("./EventPluginUtils");
var ReactChildren = require("./ReactChildren");
var ReactComponent = require("./ReactComponent");
var ReactClass = require("./ReactClass");
var ReactContext = require("./ReactContext");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactElement = require("./ReactElement");
var ReactElementValidator = require("./ReactElementValidator");
var ReactDOM = require("./ReactDOM");
var ReactDOMTextComponent = require("./ReactDOMTextComponent");
var ReactDefaultInjection = require("./ReactDefaultInjection");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMount = require("./ReactMount");
var ReactPerf = require("./ReactPerf");
var ReactPropTypes = require("./ReactPropTypes");
var ReactReconciler = require("./ReactReconciler");
var ReactServerRendering = require("./ReactServerRendering");

var assign = require("./Object.assign");
var findDOMNode = require("./findDOMNode");
var onlyChild = require("./onlyChild");

ReactDefaultInjection.inject();

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if ("production" !== process.env.NODE_ENV) {
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var render = ReactPerf.measure('React', 'render', ReactMount.render);

var React = {
  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    only: onlyChild
  },
  Component: ReactComponent,
  DOM: ReactDOM,
  PropTypes: ReactPropTypes,
  initializeTouchEvents: function(shouldUseTouch) {
    EventPluginUtils.useTouchEvents = shouldUseTouch;
  },
  createClass: ReactClass.createClass,
  createElement: createElement,
  cloneElement: cloneElement,
  createFactory: createFactory,
  createMixin: function(mixin) {
    // Currently a noop. Will be used to validate and trace mixins.
    return mixin;
  },
  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
  findDOMNode: findDOMNode,
  render: render,
  renderToString: ReactServerRendering.renderToString,
  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  isValidElement: ReactElement.isValidElement,
  withContext: ReactContext.withContext,

  // Hook for JSX spread, don't use this for anything else.
  __spread: assign
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    CurrentOwner: ReactCurrentOwner,
    InstanceHandles: ReactInstanceHandles,
    Mount: ReactMount,
    Reconciler: ReactReconciler,
    TextComponent: ReactDOMTextComponent
  });
}

if ("production" !== process.env.NODE_ENV) {
  var ExecutionEnvironment = require("./ExecutionEnvironment");
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // If we're in Chrome, look for the devtools marker and provide a download
    // link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        console.debug(
          'Download the React DevTools for a better development experience: ' +
          'https://fb.me/react-devtools'
        );
      }
    }

    var expectedFeatures = [
      // shims
      Array.isArray,
      Array.prototype.every,
      Array.prototype.forEach,
      Array.prototype.indexOf,
      Array.prototype.map,
      Date.now,
      Function.prototype.bind,
      Object.keys,
      String.prototype.split,
      String.prototype.trim,

      // shams
      Object.create,
      Object.freeze
    ];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        console.error(
          'One or more ES5 shim/shams expected by React are not available: ' +
          'https://fb.me/react-warning-polyfills'
        );
        break;
      }
    }
  }
}

React.version = '0.13.3';

module.exports = React;

}).call(this,require('_process'))
},{"./EventPluginUtils":82,"./ExecutionEnvironment":84,"./Object.assign":91,"./ReactChildren":99,"./ReactClass":100,"./ReactComponent":101,"./ReactContext":106,"./ReactCurrentOwner":107,"./ReactDOM":108,"./ReactDOMTextComponent":119,"./ReactDefaultInjection":122,"./ReactElement":125,"./ReactElementValidator":126,"./ReactInstanceHandles":134,"./ReactMount":139,"./ReactPerf":144,"./ReactPropTypes":148,"./ReactReconciler":151,"./ReactServerRendering":154,"./findDOMNode":195,"./onlyChild":223,"_process":417}],94:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserComponentMixin
 */

'use strict';

var findDOMNode = require("./findDOMNode");

var ReactBrowserComponentMixin = {
  /**
   * Returns the DOM node rendered by this component.
   *
   * @return {DOMElement} The root node of this component.
   * @final
   * @protected
   */
  getDOMNode: function() {
    return findDOMNode(this);
  }
};

module.exports = ReactBrowserComponentMixin;

},{"./findDOMNode":195}],95:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 * @typechecks static-only
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");
var EventPluginRegistry = require("./EventPluginRegistry");
var ReactEventEmitterMixin = require("./ReactEventEmitterMixin");
var ViewportMetrics = require("./ViewportMetrics");

var assign = require("./Object.assign");
var isEventSupported = require("./isEventSupported");

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topBlur: 'blur',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topScroll: 'scroll',
  topSelectionChange: 'selectionchange',
  topTextInput: 'textInput',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function(ReactEventListener) {
      ReactEventListener.setHandleTopLevel(
        ReactBrowserEventEmitter.handleTopLevel
      );
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return !!(
      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())
    );
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function(registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.
      registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0, l = dependencies.length; i < l; i++) {
      var dependency = dependencies[i];
      if (!(
            (isListening.hasOwnProperty(dependency) && isListening[dependency])
          )) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'wheel',
              mountAt
            );
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'mousewheel',
              mountAt
            );
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'DOMMouseScroll',
              mountAt
            );
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topScroll,
              'scroll',
              mountAt
            );
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topScroll,
              'scroll',
              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
            );
          }
        } else if (dependency === topLevelTypes.topFocus ||
            dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topFocus,
              'focus',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topBlur,
              'blur',
              mountAt
            );
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topFocus,
              'focusin',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topBlur,
              'focusout',
              mountAt
            );
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
            dependency,
            topEventMapping[dependency],
            mountAt
          );
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function() {
    if (!isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  },

  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

  registrationNameModules: EventPluginHub.registrationNameModules,

  putListener: EventPluginHub.putListener,

  getListener: EventPluginHub.getListener,

  deleteListener: EventPluginHub.deleteListener,

  deleteAllListeners: EventPluginHub.deleteAllListeners

});

module.exports = ReactBrowserEventEmitter;

},{"./EventConstants":78,"./EventPluginHub":80,"./EventPluginRegistry":81,"./Object.assign":91,"./ReactEventEmitterMixin":129,"./ViewportMetrics":180,"./isEventSupported":214}],96:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * @providesModule ReactCSSTransitionGroup
 */

'use strict';

var React = require("./React");

var assign = require("./Object.assign");

var ReactTransitionGroup = React.createFactory(
  require("./ReactTransitionGroup")
);
var ReactCSSTransitionGroupChild = React.createFactory(
  require("./ReactCSSTransitionGroupChild")
);

var ReactCSSTransitionGroup = React.createClass({
  displayName: 'ReactCSSTransitionGroup',

  propTypes: {
    transitionName: React.PropTypes.string.isRequired,
    transitionAppear: React.PropTypes.bool,
    transitionEnter: React.PropTypes.bool,
    transitionLeave: React.PropTypes.bool
  },

  getDefaultProps: function() {
    return {
      transitionAppear: false,
      transitionEnter: true,
      transitionLeave: true
    };
  },

  _wrapChild: function(child) {
    // We need to provide this childFactory so that
    // ReactCSSTransitionGroupChild can receive updates to name, enter, and
    // leave while it is leaving.
    return ReactCSSTransitionGroupChild(
      {
        name: this.props.transitionName,
        appear: this.props.transitionAppear,
        enter: this.props.transitionEnter,
        leave: this.props.transitionLeave
      },
      child
    );
  },

  render: function() {
    return (
      ReactTransitionGroup(
        assign({}, this.props, {childFactory: this._wrapChild})
      )
    );
  }
});

module.exports = ReactCSSTransitionGroup;

},{"./Object.assign":91,"./React":93,"./ReactCSSTransitionGroupChild":97,"./ReactTransitionGroup":160}],97:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * @providesModule ReactCSSTransitionGroupChild
 */

'use strict';

var React = require("./React");

var CSSCore = require("./CSSCore");
var ReactTransitionEvents = require("./ReactTransitionEvents");

var onlyChild = require("./onlyChild");
var warning = require("./warning");

// We don't remove the element from the DOM until we receive an animationend or
// transitionend event. If the user screws up and forgets to add an animation
// their node will be stuck in the DOM forever, so we detect if an animation
// does not start and if it doesn't, we just call the end listener immediately.
var TICK = 17;
var NO_EVENT_TIMEOUT = 5000;

var noEventListener = null;


if ("production" !== process.env.NODE_ENV) {
  noEventListener = function() {
    ("production" !== process.env.NODE_ENV ? warning(
      false,
      'transition(): tried to perform an animation without ' +
      'an animationend or transitionend event after timeout (' +
      '%sms). You should either disable this ' +
      'transition in JS or add a CSS animation/transition.',
      NO_EVENT_TIMEOUT
    ) : null);
  };
}

var ReactCSSTransitionGroupChild = React.createClass({
  displayName: 'ReactCSSTransitionGroupChild',

  transition: function(animationType, finishCallback) {
    var node = this.getDOMNode();
    var className = this.props.name + '-' + animationType;
    var activeClassName = className + '-active';
    var noEventTimeout = null;

    var endListener = function(e) {
      if (e && e.target !== node) {
        return;
      }
      if ("production" !== process.env.NODE_ENV) {
        clearTimeout(noEventTimeout);
      }

      CSSCore.removeClass(node, className);
      CSSCore.removeClass(node, activeClassName);

      ReactTransitionEvents.removeEndEventListener(node, endListener);

      // Usually this optional callback is used for informing an owner of
      // a leave animation and telling it to remove the child.
      if (finishCallback) {
        finishCallback();
      }
    };

    ReactTransitionEvents.addEndEventListener(node, endListener);

    CSSCore.addClass(node, className);

    // Need to do this to actually trigger a transition.
    this.queueClass(activeClassName);

    if ("production" !== process.env.NODE_ENV) {
      noEventTimeout = setTimeout(noEventListener, NO_EVENT_TIMEOUT);
    }
  },

  queueClass: function(className) {
    this.classNameQueue.push(className);

    if (!this.timeout) {
      this.timeout = setTimeout(this.flushClassNameQueue, TICK);
    }
  },

  flushClassNameQueue: function() {
    if (this.isMounted()) {
      this.classNameQueue.forEach(
        CSSCore.addClass.bind(CSSCore, this.getDOMNode())
      );
    }
    this.classNameQueue.length = 0;
    this.timeout = null;
  },

  componentWillMount: function() {
    this.classNameQueue = [];
  },

  componentWillUnmount: function() {
    if (this.timeout) {
      clearTimeout(this.timeout);
    }
  },

  componentWillAppear: function(done) {
    if (this.props.appear) {
      this.transition('appear', done);
    } else {
      done();
    }
  },

  componentWillEnter: function(done) {
    if (this.props.enter) {
      this.transition('enter', done);
    } else {
      done();
    }
  },

  componentWillLeave: function(done) {
    if (this.props.leave) {
      this.transition('leave', done);
    } else {
      done();
    }
  },

  render: function() {
    return onlyChild(this.props.children);
  }
});

module.exports = ReactCSSTransitionGroupChild;

}).call(this,require('_process'))
},{"./CSSCore":66,"./React":93,"./ReactTransitionEvents":159,"./onlyChild":223,"./warning":234,"_process":417}],98:[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildReconciler
 * @typechecks static-only
 */

'use strict';

var ReactReconciler = require("./ReactReconciler");

var flattenChildren = require("./flattenChildren");
var instantiateReactComponent = require("./instantiateReactComponent");
var shouldUpdateReactComponent = require("./shouldUpdateReactComponent");

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {

  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function(nestedChildNodes, transaction, context) {
    var children = flattenChildren(nestedChildNodes);
    for (var name in children) {
      if (children.hasOwnProperty(name)) {
        var child = children[name];
        // The rendered children must be turned into instances as they're
        // mounted.
        var childInstance = instantiateReactComponent(child, null);
        children[name] = childInstance;
      }
    }
    return children;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextNestedChildNodes Nested child maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function(
    prevChildren,
    nextNestedChildNodes,
    transaction,
    context) {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    var nextChildren = flattenChildren(nextNestedChildNodes);
    if (!nextChildren && !prevChildren) {
      return null;
    }
    var name;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      var prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(
          prevChild, nextElement, transaction, context
        );
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          ReactReconciler.unmountComponent(prevChild, name);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(
          nextElement,
          null
        );
        nextChildren[name] = nextChildInstance;
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) &&
          !(nextChildren && nextChildren.hasOwnProperty(name))) {
        ReactReconciler.unmountComponent(prevChildren[name]);
      }
    }
    return nextChildren;
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function(renderedChildren) {
    for (var name in renderedChildren) {
      var renderedChild = renderedChildren[name];
      ReactReconciler.unmountComponent(renderedChild);
    }
  }

};

module.exports = ReactChildReconciler;

},{"./ReactReconciler":151,"./flattenChildren":196,"./instantiateReactComponent":212,"./shouldUpdateReactComponent":230}],99:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

'use strict';

var PooledClass = require("./PooledClass");
var ReactFragment = require("./ReactFragment");

var traverseAllChildren = require("./traverseAllChildren");
var warning = require("./warning");

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var threeArgumentPooler = PooledClass.threeArgumentPooler;

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.forEachFunction = forEachFunction;
  this.forEachContext = forEachContext;
}
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(traverseContext, child, name, i) {
  var forEachBookKeeping = traverseContext;
  forEachBookKeeping.forEachFunction.call(
    forEachBookKeeping.forEachContext, child, i);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc.
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext =
    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, mapFunction, mapContext) {
  this.mapResult = mapResult;
  this.mapFunction = mapFunction;
  this.mapContext = mapContext;
}
PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext, child, name, i) {
  var mapBookKeeping = traverseContext;
  var mapResult = mapBookKeeping.mapResult;

  var keyUnique = !mapResult.hasOwnProperty(name);
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      keyUnique,
      'ReactChildren.map(...): Encountered two children with the same key, ' +
      '`%s`. Child keys must be unique; when two children share a key, only ' +
      'the first child will be used.',
      name
    ) : null);
  }

  if (keyUnique) {
    var mappedChild =
      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
    mapResult[name] = mappedChild;
  }
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * TODO: This may likely break any calls to `ReactChildren.map` that were
 * previously relying on the fact that we guarded against null children.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} mapFunction.
 * @param {*} mapContext Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var mapResult = {};
  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
  return ReactFragment.create(mapResult);
}

function forEachSingleChildDummy(traverseContext, child, name, i) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  count: countChildren
};

module.exports = ReactChildren;

}).call(this,require('_process'))
},{"./PooledClass":92,"./ReactFragment":131,"./traverseAllChildren":232,"./warning":234,"_process":417}],100:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactClass
 */

'use strict';

var ReactComponent = require("./ReactComponent");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactElement = require("./ReactElement");
var ReactErrorUtils = require("./ReactErrorUtils");
var ReactInstanceMap = require("./ReactInstanceMap");
var ReactLifeCycle = require("./ReactLifeCycle");
var ReactPropTypeLocations = require("./ReactPropTypeLocations");
var ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames");
var ReactUpdateQueue = require("./ReactUpdateQueue");

var assign = require("./Object.assign");
var invariant = require("./invariant");
var keyMirror = require("./keyMirror");
var keyOf = require("./keyOf");
var warning = require("./warning");

var MIXINS_KEY = keyOf({mixins: null});

/**
 * Policies that describe methods in `ReactClassInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactClass`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactClassInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will available on the prototype.
 *
 * @interface ReactClassInterface
 * @internal
 */
var ReactClassInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,



  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,



  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function(Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function(Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function(Constructor, childContextTypes) {
    if ("production" !== process.env.NODE_ENV) {
      validateTypeDef(
        Constructor,
        childContextTypes,
        ReactPropTypeLocations.childContext
      );
    }
    Constructor.childContextTypes = assign(
      {},
      Constructor.childContextTypes,
      childContextTypes
    );
  },
  contextTypes: function(Constructor, contextTypes) {
    if ("production" !== process.env.NODE_ENV) {
      validateTypeDef(
        Constructor,
        contextTypes,
        ReactPropTypeLocations.context
      );
    }
    Constructor.contextTypes = assign(
      {},
      Constructor.contextTypes,
      contextTypes
    );
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function(Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(
        Constructor.getDefaultProps,
        getDefaultProps
      );
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function(Constructor, propTypes) {
    if ("production" !== process.env.NODE_ENV) {
      validateTypeDef(
        Constructor,
        propTypes,
        ReactPropTypeLocations.prop
      );
    }
    Constructor.propTypes = assign(
      {},
      Constructor.propTypes,
      propTypes
    );
  },
  statics: function(Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  }
};

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      // use a warning instead of an invariant so components
      // don't show up in prod but not in __DEV__
      ("production" !== process.env.NODE_ENV ? warning(
        typeof typeDef[propName] === 'function',
        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
        'React.PropTypes.',
        Constructor.displayName || 'ReactClass',
        ReactPropTypeLocationNames[location],
        propName
      ) : null);
    }
  }
}

function validateMethodOverride(proto, name) {
  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?
    ReactClassInterface[name] :
    null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactClassMixin.hasOwnProperty(name)) {
    ("production" !== process.env.NODE_ENV ? invariant(
      specPolicy === SpecPolicy.OVERRIDE_BASE,
      'ReactClassInterface: You are attempting to override ' +
      '`%s` from your class specification. Ensure that your method names ' +
      'do not overlap with React methods.',
      name
    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (proto.hasOwnProperty(name)) {
    ("production" !== process.env.NODE_ENV ? invariant(
      specPolicy === SpecPolicy.DEFINE_MANY ||
      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
      'ReactClassInterface: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be due ' +
      'to a mixin.',
      name
    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
  }
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building React classses.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    return;
  }

  ("production" !== process.env.NODE_ENV ? invariant(
    typeof spec !== 'function',
    'ReactClass: You\'re attempting to ' +
    'use a component class as a mixin. Instead, just use a regular object.'
  ) : invariant(typeof spec !== 'function'));
  ("production" !== process.env.NODE_ENV ? invariant(
    !ReactElement.isValidElement(spec),
    'ReactClass: You\'re attempting to ' +
    'use a component as a mixin. Instead, just use a regular object.'
  ) : invariant(!ReactElement.isValidElement(spec)));

  var proto = Constructor.prototype;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above
      continue;
    }

    var property = spec[name];
    validateMethodOverride(proto, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactClass methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isReactClassMethod =
        ReactClassInterface.hasOwnProperty(name);
      var isAlreadyDefined = proto.hasOwnProperty(name);
      var markedDontBind = property && property.__reactDontBind;
      var isFunction = typeof property === 'function';
      var shouldAutoBind =
        isFunction &&
        !isReactClassMethod &&
        !isAlreadyDefined &&
        !markedDontBind;

      if (shouldAutoBind) {
        if (!proto.__reactAutoBindMap) {
          proto.__reactAutoBindMap = {};
        }
        proto.__reactAutoBindMap[name] = property;
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactClassInterface[name];

          // These cases should already be caught by validateMethodOverride
          ("production" !== process.env.NODE_ENV ? invariant(
            isReactClassMethod && (
              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
            ),
            'ReactClass: Unexpected spec policy %s for key %s ' +
            'when mixing in component specs.',
            specPolicy,
            name
          ) : invariant(isReactClassMethod && (
            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
          )));

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("production" !== process.env.NODE_ENV) {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    ("production" !== process.env.NODE_ENV ? invariant(
      !isReserved,
      'ReactClass: You are attempting to define a reserved ' +
      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
      'as an instance property instead; it will still be accessible on the ' +
      'constructor.',
      name
    ) : invariant(!isReserved));

    var isInherited = name in Constructor;
    ("production" !== process.env.NODE_ENV ? invariant(
      !isInherited,
      'ReactClass: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be ' +
      'due to a mixin.',
      name
    ) : invariant(!isInherited));
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeIntoWithNoDuplicateKeys(one, two) {
  ("production" !== process.env.NODE_ENV ? invariant(
    one && two && typeof one === 'object' && typeof two === 'object',
    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

  for (var key in two) {
    if (two.hasOwnProperty(key)) {
      ("production" !== process.env.NODE_ENV ? invariant(
        one[key] === undefined,
        'mergeIntoWithNoDuplicateKeys(): ' +
        'Tried to merge two objects with the same key: `%s`. This conflict ' +
        'may be due to a mixin; in particular, this may be caused by two ' +
        'getInitialState() or getDefaultProps() methods returning objects ' +
        'with clashing keys.',
        key
      ) : invariant(one[key] === undefined));
      one[key] = two[key];
    }
  }
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    var c = {};
    mergeIntoWithNoDuplicateKeys(c, a);
    mergeIntoWithNoDuplicateKeys(c, b);
    return c;
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * Binds a method to the component.
 *
 * @param {object} component Component whose method is going to be bound.
 * @param {function} method Method to be bound.
 * @return {function} The bound method.
 */
function bindAutoBindMethod(component, method) {
  var boundMethod = method.bind(component);
  if ("production" !== process.env.NODE_ENV) {
    boundMethod.__reactBoundContext = component;
    boundMethod.__reactBoundMethod = method;
    boundMethod.__reactBoundArguments = null;
    var componentName = component.constructor.displayName;
    var _bind = boundMethod.bind;
    /* eslint-disable block-scoped-var, no-undef */
    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
      // User is trying to bind() an autobound method; we effectively will
      // ignore the value of "this" that the user is trying to use, so
      // let's warn.
      if (newThis !== component && newThis !== null) {
        ("production" !== process.env.NODE_ENV ? warning(
          false,
          'bind(): React component methods may only be bound to the ' +
          'component instance. See %s',
          componentName
        ) : null);
      } else if (!args.length) {
        ("production" !== process.env.NODE_ENV ? warning(
          false,
          'bind(): You are binding a component method to the component. ' +
          'React does this for you automatically in a high-performance ' +
          'way, so you can safely remove this call. See %s',
          componentName
        ) : null);
        return boundMethod;
      }
      var reboundMethod = _bind.apply(boundMethod, arguments);
      reboundMethod.__reactBoundContext = component;
      reboundMethod.__reactBoundMethod = method;
      reboundMethod.__reactBoundArguments = args;
      return reboundMethod;
      /* eslint-enable */
    };
  }
  return boundMethod;
}

/**
 * Binds all auto-bound methods in a component.
 *
 * @param {object} component Component whose method is going to be bound.
 */
function bindAutoBindMethods(component) {
  for (var autoBindKey in component.__reactAutoBindMap) {
    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
      var method = component.__reactAutoBindMap[autoBindKey];
      component[autoBindKey] = bindAutoBindMethod(
        component,
        ReactErrorUtils.guard(
          method,
          component.constructor.displayName + '.' + autoBindKey
        )
      );
    }
  }
}

var typeDeprecationDescriptor = {
  enumerable: false,
  get: function() {
    var displayName = this.displayName || this.name || 'Component';
    ("production" !== process.env.NODE_ENV ? warning(
      false,
      '%s.type is deprecated. Use %s directly to access the class.',
      displayName,
      displayName
    ) : null);
    Object.defineProperty(this, 'type', {
      value: this
    });
    return this;
  }
};

/**
 * Add more to the ReactClass base class. These are all legacy features and
 * therefore not already part of the modern ReactComponent.
 */
var ReactClassMixin = {

  /**
   * TODO: This will be deprecated because state should always keep a consistent
   * type signature and the only use case for this, is to avoid that.
   */
  replaceState: function(newState, callback) {
    ReactUpdateQueue.enqueueReplaceState(this, newState);
    if (callback) {
      ReactUpdateQueue.enqueueCallback(this, callback);
    }
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function() {
    if ("production" !== process.env.NODE_ENV) {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        ("production" !== process.env.NODE_ENV ? warning(
          owner._warnedAboutRefsInRender,
          '%s is accessing isMounted inside its render() function. ' +
          'render() should be a pure function of props and state. It should ' +
          'never access something that requires stale data from the previous ' +
          'render, such as refs. Move this logic to componentDidMount and ' +
          'componentDidUpdate instead.',
          owner.getName() || 'A component'
        ) : null);
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(this);
    return (
      internalInstance &&
      internalInstance !== ReactLifeCycle.currentlyMountingInstance
    );
  },

  /**
   * Sets a subset of the props.
   *
   * @param {object} partialProps Subset of the next props.
   * @param {?function} callback Called after props are updated.
   * @final
   * @public
   * @deprecated
   */
  setProps: function(partialProps, callback) {
    ReactUpdateQueue.enqueueSetProps(this, partialProps);
    if (callback) {
      ReactUpdateQueue.enqueueCallback(this, callback);
    }
  },

  /**
   * Replace all the props.
   *
   * @param {object} newProps Subset of the next props.
   * @param {?function} callback Called after props are updated.
   * @final
   * @public
   * @deprecated
   */
  replaceProps: function(newProps, callback) {
    ReactUpdateQueue.enqueueReplaceProps(this, newProps);
    if (callback) {
      ReactUpdateQueue.enqueueCallback(this, callback);
    }
  }
};

var ReactClassComponent = function() {};
assign(
  ReactClassComponent.prototype,
  ReactComponent.prototype,
  ReactClassMixin
);

/**
 * Module for creating composite components.
 *
 * @class ReactClass
 */
var ReactClass = {

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function(spec) {
    var Constructor = function(props, context) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if ("production" !== process.env.NODE_ENV) {
        ("production" !== process.env.NODE_ENV ? warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
          'JSX instead. See: https://fb.me/react-legacyfactory'
        ) : null);
      }

      // Wire up auto-binding
      if (this.__reactAutoBindMap) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if ("production" !== process.env.NODE_ENV) {
        // We allow auto-mocks to proceed as if they're returning null.
        if (typeof initialState === 'undefined' &&
            this.getInitialState._isMockFunction) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      ("production" !== process.env.NODE_ENV ? invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

      this.state = initialState;
    };
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;

    injectedMixins.forEach(
      mixSpecIntoComponent.bind(null, Constructor)
    );

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if ("production" !== process.env.NODE_ENV) {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    ("production" !== process.env.NODE_ENV ? invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    ) : invariant(Constructor.prototype.render));

    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
        'The name is phrased as a question because the function is ' +
        'expected to return a value.',
        spec.displayName || 'A component'
      ) : null);
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    // Legacy hook
    Constructor.type = Constructor;
    if ("production" !== process.env.NODE_ENV) {
      try {
        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);
      } catch (x) {
        // IE will fail on defineProperty (es5-shim/sham too)
      }
    }

    return Constructor;
  },

  injection: {
    injectMixin: function(mixin) {
      injectedMixins.push(mixin);
    }
  }

};

module.exports = ReactClass;

}).call(this,require('_process'))
},{"./Object.assign":91,"./ReactComponent":101,"./ReactCurrentOwner":107,"./ReactElement":125,"./ReactErrorUtils":128,"./ReactInstanceMap":135,"./ReactLifeCycle":136,"./ReactPropTypeLocationNames":146,"./ReactPropTypeLocations":147,"./ReactUpdateQueue":161,"./invariant":213,"./keyMirror":219,"./keyOf":220,"./warning":234,"_process":417}],101:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

'use strict';

var ReactUpdateQueue = require("./ReactUpdateQueue");

var invariant = require("./invariant");
var warning = require("./warning");

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context) {
  this.props = props;
  this.context = context;
}

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function(partialState, callback) {
  ("production" !== process.env.NODE_ENV ? invariant(
    typeof partialState === 'object' ||
    typeof partialState === 'function' ||
    partialState == null,
    'setState(...): takes an object of state variables to update or a ' +
    'function which returns an object of state variables.'
  ) : invariant(typeof partialState === 'object' ||
  typeof partialState === 'function' ||
  partialState == null));
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      partialState != null,
      'setState(...): You passed an undefined or null state object; ' +
      'instead, use forceUpdate().'
    ) : null);
  }
  ReactUpdateQueue.enqueueSetState(this, partialState);
  if (callback) {
    ReactUpdateQueue.enqueueCallback(this, callback);
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function(callback) {
  ReactUpdateQueue.enqueueForceUpdate(this);
  if (callback) {
    ReactUpdateQueue.enqueueCallback(this, callback);
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if ("production" !== process.env.NODE_ENV) {
  var deprecatedAPIs = {
    getDOMNode: [
      'getDOMNode',
      'Use React.findDOMNode(component) instead.'
    ],
    isMounted: [
      'isMounted',
      'Instead, make sure to clean up subscriptions and pending requests in ' +
      'componentWillUnmount to prevent memory leaks.'
    ],
    replaceProps: [
      'replaceProps',
      'Instead, call React.render again at the top level.'
    ],
    replaceState: [
      'replaceState',
      'Refactor your code to use setState instead (see ' +
      'https://github.com/facebook/react/issues/3236).'
    ],
    setProps: [
      'setProps',
      'Instead, call React.render again at the top level.'
    ]
  };
  var defineDeprecationWarning = function(methodName, info) {
    try {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function() {
          ("production" !== process.env.NODE_ENV ? warning(
            false,
            '%s(...) is deprecated in plain JavaScript React classes. %s',
            info[0],
            info[1]
          ) : null);
          return undefined;
        }
      });
    } catch (x) {
      // IE will fail on defineProperty (es5-shim/sham too)
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

module.exports = ReactComponent;

}).call(this,require('_process'))
},{"./ReactUpdateQueue":161,"./invariant":213,"./warning":234,"_process":417}],102:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

/*jslint evil: true */

'use strict';

var ReactDOMIDOperations = require("./ReactDOMIDOperations");
var ReactMount = require("./ReactMount");

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {

  processChildrenUpdates:
    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkupByID:
    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function(rootNodeID) {
    ReactMount.purgeID(rootNodeID);
  }

};

module.exports = ReactComponentBrowserEnvironment;

},{"./ReactDOMIDOperations":112,"./ReactMount":139}],103:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentEnvironment
 */

'use strict';

var invariant = require("./invariant");

var injected = false;

var ReactComponentEnvironment = {

  /**
   * Optionally injectable environment dependent cleanup hook. (server vs.
   * browser etc). Example: A browser system caches DOM nodes based on component
   * ID and must remove that cache entry when this instance is unmounted.
   */
  unmountIDFromEnvironment: null,

  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkupByID: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function(environment) {
      ("production" !== process.env.NODE_ENV ? invariant(
        !injected,
        'ReactCompositeComponent: injectEnvironment() can only be called once.'
      ) : invariant(!injected));
      ReactComponentEnvironment.unmountIDFromEnvironment =
        environment.unmountIDFromEnvironment;
      ReactComponentEnvironment.replaceNodeWithMarkupByID =
        environment.replaceNodeWithMarkupByID;
      ReactComponentEnvironment.processChildrenUpdates =
        environment.processChildrenUpdates;
      injected = true;
    }
  }

};

module.exports = ReactComponentEnvironment;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],104:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
* @providesModule ReactComponentWithPureRenderMixin
*/

'use strict';

var shallowEqual = require("./shallowEqual");

/**
 * If your React component's render function is "pure", e.g. it will render the
 * same result given the same props and state, provide this Mixin for a
 * considerable performance boost.
 *
 * Most React components have pure render functions.
 *
 * Example:
 *
 *   var ReactComponentWithPureRenderMixin =
 *     require('ReactComponentWithPureRenderMixin');
 *   React.createClass({
 *     mixins: [ReactComponentWithPureRenderMixin],
 *
 *     render: function() {
 *       return <div className={this.props.className}>foo</div>;
 *     }
 *   });
 *
 * Note: This only checks shallow equality for props and state. If these contain
 * complex data structures this mixin may have false-negatives for deeper
 * differences. Only mixin to components which have simple props and state, or
 * use `forceUpdate()` when you know deep data structures have changed.
 */
var ReactComponentWithPureRenderMixin = {
  shouldComponentUpdate: function(nextProps, nextState) {
    return !shallowEqual(this.props, nextProps) ||
           !shallowEqual(this.state, nextState);
  }
};

module.exports = ReactComponentWithPureRenderMixin;

},{"./shallowEqual":229}],105:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

'use strict';

var ReactComponentEnvironment = require("./ReactComponentEnvironment");
var ReactContext = require("./ReactContext");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactElement = require("./ReactElement");
var ReactElementValidator = require("./ReactElementValidator");
var ReactInstanceMap = require("./ReactInstanceMap");
var ReactLifeCycle = require("./ReactLifeCycle");
var ReactNativeComponent = require("./ReactNativeComponent");
var ReactPerf = require("./ReactPerf");
var ReactPropTypeLocations = require("./ReactPropTypeLocations");
var ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames");
var ReactReconciler = require("./ReactReconciler");
var ReactUpdates = require("./ReactUpdates");

var assign = require("./Object.assign");
var emptyObject = require("./emptyObject");
var invariant = require("./invariant");
var shouldUpdateReactComponent = require("./shouldUpdateReactComponent");
var warning = require("./warning");

function getDeclarationErrorAddendum(component) {
  var owner = component._currentElement._owner || null;
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function(element) {
    this._currentElement = element;
    this._rootNodeID = null;
    this._instance = null;

    // See ReactUpdateQueue
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedComponent = null;

    this._context = null;
    this._mountOrder = 0;
    this._isTopLevel = false;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function(rootID, transaction, context) {
    this._context = context;
    this._mountOrder = nextMountID++;
    this._rootNodeID = rootID;

    var publicProps = this._processProps(this._currentElement.props);
    var publicContext = this._processContext(this._currentElement._context);

    var Component = ReactNativeComponent.getComponentClassForElement(
      this._currentElement
    );

    // Initialize the public class
    var inst = new Component(publicProps, publicContext);

    if ("production" !== process.env.NODE_ENV) {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      ("production" !== process.env.NODE_ENV ? warning(
        inst.render != null,
        '%s(...): No `render` method found on the returned component ' +
        'instance: you may have forgotten to define `render` in your ' +
        'component or you may have accidentally tried to render an element ' +
        'whose type is a function that isn\'t a React component.',
        Component.displayName || Component.name || 'Component'
      ) : null);
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if ("production" !== process.env.NODE_ENV) {
      this._warnIfContextsDiffer(this._currentElement._context, context);
    }

    if ("production" !== process.env.NODE_ENV) {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      ("production" !== process.env.NODE_ENV ? warning(
        !inst.getInitialState ||
        inst.getInitialState.isReactClassApproved,
        'getInitialState was defined on %s, a plain JavaScript class. ' +
        'This is only supported for classes created using React.createClass. ' +
        'Did you mean to define a state property instead?',
        this.getName() || 'a component'
      ) : null);
      ("production" !== process.env.NODE_ENV ? warning(
        !inst.getDefaultProps ||
        inst.getDefaultProps.isReactClassApproved,
        'getDefaultProps was defined on %s, a plain JavaScript class. ' +
        'This is only supported for classes created using React.createClass. ' +
        'Use a static property to define defaultProps instead.',
        this.getName() || 'a component'
      ) : null);
      ("production" !== process.env.NODE_ENV ? warning(
        !inst.propTypes,
        'propTypes was defined as an instance property on %s. Use a static ' +
        'property to define propTypes instead.',
        this.getName() || 'a component'
      ) : null);
      ("production" !== process.env.NODE_ENV ? warning(
        !inst.contextTypes,
        'contextTypes was defined as an instance property on %s. Use a ' +
        'static property to define contextTypes instead.',
        this.getName() || 'a component'
      ) : null);
      ("production" !== process.env.NODE_ENV ? warning(
        typeof inst.componentShouldUpdate !== 'function',
        '%s has a method called ' +
        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
        'The name is phrased as a question because the function is ' +
        'expected to return a value.',
        (this.getName() || 'A component')
      ) : null);
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof initialState === 'object' && !Array.isArray(initialState),
      '%s.state: must be set to an object or null',
      this.getName() || 'ReactCompositeComponent'
    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var childContext;
    var renderedElement;

    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;
    ReactLifeCycle.currentlyMountingInstance = this;
    try {
      if (inst.componentWillMount) {
        inst.componentWillMount();
        // When mounting, calls to `setState` by `componentWillMount` will set
        // `this._pendingStateQueue` without triggering a re-render.
        if (this._pendingStateQueue) {
          inst.state = this._processPendingState(inst.props, inst.context);
        }
      }

      childContext = this._getValidatedChildContext(context);
      renderedElement = this._renderValidatedComponent(childContext);
    } finally {
      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;
    }

    this._renderedComponent = this._instantiateReactComponent(
      renderedElement,
      this._currentElement.type // The wrapping type
    );

    var markup = ReactReconciler.mountComponent(
      this._renderedComponent,
      rootID,
      transaction,
      this._mergeChildContext(context, childContext)
    );
    if (inst.componentDidMount) {
      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
    }

    return markup;
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function() {
    var inst = this._instance;

    if (inst.componentWillUnmount) {
      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;
      ReactLifeCycle.currentlyUnmountingInstance = this;
      try {
        inst.componentWillUnmount();
      } finally {
        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;
      }
    }

    ReactReconciler.unmountComponent(this._renderedComponent);
    this._renderedComponent = null;

    // Reset pending fields
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Schedule a partial update to the props. Only used for internal testing.
   *
   * @param {object} partialProps Subset of the next props.
   * @param {?function} callback Called after props are updated.
   * @final
   * @internal
   */
  _setPropsInternal: function(partialProps, callback) {
    // This is a deoptimized path. We optimize for always having an element.
    // This creates an extra internal element.
    var element = this._pendingElement || this._currentElement;
    this._pendingElement = ReactElement.cloneAndReplaceProps(
      element,
      assign({}, element.props, partialProps)
    );
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function(context) {
    var maskedContext = null;
    // This really should be getting the component class for the element,
    // but we know that we're not going to need it for built-ins.
    if (typeof this._currentElement.type === 'string') {
      return emptyObject;
    }
    var contextTypes = this._currentElement.type.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function(context) {
    var maskedContext = this._maskContext(context);
    if ("production" !== process.env.NODE_ENV) {
      var Component = ReactNativeComponent.getComponentClassForElement(
        this._currentElement
      );
      if (Component.contextTypes) {
        this._checkPropTypes(
          Component.contextTypes,
          maskedContext,
          ReactPropTypeLocations.context
        );
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _getValidatedChildContext: function(currentContext) {
    var inst = this._instance;
    var childContext = inst.getChildContext && inst.getChildContext();
    if (childContext) {
      ("production" !== process.env.NODE_ENV ? invariant(
        typeof inst.constructor.childContextTypes === 'object',
        '%s.getChildContext(): childContextTypes must be defined in order to ' +
        'use getChildContext().',
        this.getName() || 'ReactCompositeComponent'
      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));
      if ("production" !== process.env.NODE_ENV) {
        this._checkPropTypes(
          inst.constructor.childContextTypes,
          childContext,
          ReactPropTypeLocations.childContext
        );
      }
      for (var name in childContext) {
        ("production" !== process.env.NODE_ENV ? invariant(
          name in inst.constructor.childContextTypes,
          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
          this.getName() || 'ReactCompositeComponent',
          name
        ) : invariant(name in inst.constructor.childContextTypes));
      }
      return childContext;
    }
    return null;
  },

  _mergeChildContext: function(currentContext, childContext) {
    if (childContext) {
      return assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid. Does not mutate its argument; returns
   * a new props object with defaults merged in.
   *
   * @param {object} newProps
   * @return {object}
   * @private
   */
  _processProps: function(newProps) {
    if ("production" !== process.env.NODE_ENV) {
      var Component = ReactNativeComponent.getComponentClassForElement(
        this._currentElement
      );
      if (Component.propTypes) {
        this._checkPropTypes(
          Component.propTypes,
          newProps,
          ReactPropTypeLocations.prop
        );
      }
    }
    return newProps;
  },

  /**
   * Assert that the props are valid
   *
   * @param {object} propTypes Map of prop name to a ReactPropType
   * @param {object} props
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkPropTypes: function(propTypes, props, location) {
    // TODO: Stop validating prop types here and only use the element
    // validation.
    var componentName = this.getName();
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error;
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          ("production" !== process.env.NODE_ENV ? invariant(
            typeof propTypes[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually ' +
            'from React.PropTypes.',
            componentName || 'React class',
            ReactPropTypeLocationNames[location],
            propName
          ) : invariant(typeof propTypes[propName] === 'function'));
          error = propTypes[propName](props, propName, componentName, location);
        } catch (ex) {
          error = ex;
        }
        if (error instanceof Error) {
          // We may want to extend this logic for similar errors in
          // React.render calls, so I'm abstracting it away into
          // a function to minimize refactoring in the future
          var addendum = getDeclarationErrorAddendum(this);

          if (location === ReactPropTypeLocations.prop) {
            // Preface gives us something to blacklist in warning module
            ("production" !== process.env.NODE_ENV ? warning(
              false,
              'Failed Composite propType: %s%s',
              error.message,
              addendum
            ) : null);
          } else {
            ("production" !== process.env.NODE_ENV ? warning(
              false,
              'Failed Context Types: %s%s',
              error.message,
              addendum
            ) : null);
          }
        }
      }
    }
  },

  receiveComponent: function(nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(
      transaction,
      prevElement,
      nextElement,
      prevContext,
      nextContext
    );
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function(transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(
        this,
        this._pendingElement || this._currentElement,
        transaction,
        this._context
      );
    }

    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      if ("production" !== process.env.NODE_ENV) {
        ReactElementValidator.checkAndWarnForMutatedProps(
          this._currentElement
        );
      }

      this.updateComponent(
        transaction,
        this._currentElement,
        this._currentElement,
        this._context,
        this._context
      );
    }
  },

  /**
   * Compare two contexts, warning if they are different
   * TODO: Remove this check when owner-context is removed
   */
   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {
    ownerBasedContext = this._maskContext(ownerBasedContext);
    parentBasedContext = this._maskContext(parentBasedContext);
    var parentKeys = Object.keys(parentBasedContext).sort();
    var displayName = this.getName() || 'ReactCompositeComponent';
    for (var i = 0; i < parentKeys.length; i++) {
      var key = parentKeys[i];
      ("production" !== process.env.NODE_ENV ? warning(
        ownerBasedContext[key] === parentBasedContext[key],
        'owner-based and parent-based contexts differ '  +
        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +
        '(see: http://fb.me/react-context-by-parent)',
        ownerBasedContext[key],
        parentBasedContext[key],
        key,
        displayName
      ) : null);
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function(
    transaction,
    prevParentElement,
    nextParentElement,
    prevUnmaskedContext,
    nextUnmaskedContext
  ) {
    var inst = this._instance;

    var nextContext = inst.context;
    var nextProps = inst.props;

    // Distinguish between a props update versus a simple state update
    if (prevParentElement !== nextParentElement) {
      nextContext = this._processContext(nextParentElement._context);
      nextProps = this._processProps(nextParentElement.props);

      if ("production" !== process.env.NODE_ENV) {
        if (nextUnmaskedContext != null) {
          this._warnIfContextsDiffer(
            nextParentElement._context,
            nextUnmaskedContext
          );
        }
      }

      // An update here will schedule an update but immediately set
      // _pendingStateQueue which will ensure that any state updates gets
      // immediately reconciled instead of waiting for the next batch.

      if (inst.componentWillReceiveProps) {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);

    var shouldUpdate =
      this._pendingForceUpdate ||
      !inst.shouldComponentUpdate ||
      inst.shouldComponentUpdate(nextProps, nextState, nextContext);

    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        typeof shouldUpdate !== 'undefined',
        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
        'boolean value. Make sure to return true or false.',
        this.getName() || 'ReactCompositeComponent'
      ) : null);
    }

    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(
        nextParentElement,
        nextProps,
        nextState,
        nextContext,
        transaction,
        nextUnmaskedContext
      );
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function(props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      assign(
        nextState,
        typeof partial === 'function' ?
          partial.call(inst, nextState, props, context) :
          partial
      );
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function(
    nextElement,
    nextProps,
    nextState,
    nextContext,
    transaction,
    unmaskedContext
  ) {
    var inst = this._instance;

    var prevProps = inst.props;
    var prevState = inst.state;
    var prevContext = inst.context;

    if (inst.componentWillUpdate) {
      inst.componentWillUpdate(nextProps, nextState, nextContext);
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (inst.componentDidUpdate) {
      transaction.getReactMountReady().enqueue(
        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
        inst
      );
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function(transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var childContext = this._getValidatedChildContext();
    var nextRenderedElement = this._renderValidatedComponent(childContext);
    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(
        prevComponentInstance,
        nextRenderedElement,
        transaction,
        this._mergeChildContext(context, childContext)
      );
    } else {
      // These two IDs are actually the same! But nothing should rely on that.
      var thisID = this._rootNodeID;
      var prevComponentID = prevComponentInstance._rootNodeID;
      ReactReconciler.unmountComponent(prevComponentInstance);

      this._renderedComponent = this._instantiateReactComponent(
        nextRenderedElement,
        this._currentElement.type
      );
      var nextMarkup = ReactReconciler.mountComponent(
        this._renderedComponent,
        thisID,
        transaction,
        this._mergeChildContext(context, childContext)
      );
      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
    }
  },

  /**
   * @protected
   */
  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {
    ReactComponentEnvironment.replaceNodeWithMarkupByID(
      prevComponentID,
      nextMarkup
    );
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function() {
    var inst = this._instance;
    var renderedComponent = inst.render();
    if ("production" !== process.env.NODE_ENV) {
      // We allow auto-mocks to proceed as if they're returning null.
      if (typeof renderedComponent === 'undefined' &&
          inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedComponent = null;
      }
    }

    return renderedComponent;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function(childContext) {
    var renderedComponent;
    var previousContext = ReactContext.current;
    ReactContext.current = this._mergeChildContext(
      this._currentElement._context,
      childContext
    );
    ReactCurrentOwner.current = this;
    try {
      renderedComponent =
        this._renderValidatedComponentWithoutOwnerOrContext();
    } finally {
      ReactContext.current = previousContext;
      ReactCurrentOwner.current = null;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      // TODO: An `isValidNode` function would probably be more appropriate
      renderedComponent === null || renderedComponent === false ||
      ReactElement.isValidElement(renderedComponent),
      '%s.render(): A valid ReactComponent must be returned. You may have ' +
        'returned undefined, an array or some other invalid object.',
      this.getName() || 'ReactCompositeComponent'
    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate
    renderedComponent === null || renderedComponent === false ||
    ReactElement.isValidElement(renderedComponent)));
    return renderedComponent;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function(ref, component) {
    var inst = this.getPublicInstance();
    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
    refs[ref] = component.getPublicInstance();
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function(ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function() {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return (
      type.displayName || (constructor && constructor.displayName) ||
      type.name || (constructor && constructor.name) ||
      null
    );
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by React.render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function() {
    return this._instance;
  },

  // Stub
  _instantiateReactComponent: null

};

ReactPerf.measureMethods(
  ReactCompositeComponentMixin,
  'ReactCompositeComponent',
  {
    mountComponent: 'mountComponent',
    updateComponent: 'updateComponent',
    _renderValidatedComponent: '_renderValidatedComponent'
  }
);

var ReactCompositeComponent = {

  Mixin: ReactCompositeComponentMixin

};

module.exports = ReactCompositeComponent;

}).call(this,require('_process'))
},{"./Object.assign":91,"./ReactComponentEnvironment":103,"./ReactContext":106,"./ReactCurrentOwner":107,"./ReactElement":125,"./ReactElementValidator":126,"./ReactInstanceMap":135,"./ReactLifeCycle":136,"./ReactNativeComponent":142,"./ReactPerf":144,"./ReactPropTypeLocationNames":146,"./ReactPropTypeLocations":147,"./ReactReconciler":151,"./ReactUpdates":162,"./emptyObject":193,"./invariant":213,"./shouldUpdateReactComponent":230,"./warning":234,"_process":417}],106:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactContext
 */

'use strict';

var assign = require("./Object.assign");
var emptyObject = require("./emptyObject");
var warning = require("./warning");

var didWarn = false;

/**
 * Keeps track of the current context.
 *
 * The context is automatically passed down the component ownership hierarchy
 * and is accessible via `this.context` on ReactCompositeComponents.
 */
var ReactContext = {

  /**
   * @internal
   * @type {object}
   */
  current: emptyObject,

  /**
   * Temporarily extends the current context while executing scopedCallback.
   *
   * A typical use case might look like
   *
   *  render: function() {
   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
   *
   *    ));
   *    return <div>{children}</div>;
   *  }
   *
   * @param {object} newContext New context to merge into the existing context
   * @param {function} scopedCallback Callback to run with the new context
   * @return {ReactComponent|array<ReactComponent>}
   */
  withContext: function(newContext, scopedCallback) {
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        didWarn,
        'withContext is deprecated and will be removed in a future version. ' +
        'Use a wrapper component with getChildContext instead.'
      ) : null);

      didWarn = true;
    }

    var result;
    var previousContext = ReactContext.current;
    ReactContext.current = assign({}, previousContext, newContext);
    try {
      result = scopedCallback();
    } finally {
      ReactContext.current = previousContext;
    }
    return result;
  }

};

module.exports = ReactContext;

}).call(this,require('_process'))
},{"./Object.assign":91,"./emptyObject":193,"./warning":234,"_process":417}],107:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

'use strict';

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 *
 * The depth indicate how many composite components are above this render level.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],108:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 * @typechecks static-only
 */

'use strict';

var ReactElement = require("./ReactElement");
var ReactElementValidator = require("./ReactElementValidator");

var mapObject = require("./mapObject");

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if ("production" !== process.env.NODE_ENV) {
    return ReactElementValidator.createFactory(tag);
  }
  return ReactElement.createFactory(tag);
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOM = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  clipPath: 'clipPath',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOM;

}).call(this,require('_process'))
},{"./ReactElement":125,"./ReactElementValidator":126,"./mapObject":221,"_process":417}],109:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

'use strict';

var AutoFocusMixin = require("./AutoFocusMixin");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");

var keyMirror = require("./keyMirror");

var button = ReactElement.createFactory('button');

var mouseListenerNames = keyMirror({
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,
  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
});

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = ReactClass.createClass({
  displayName: 'ReactDOMButton',
  tagName: 'BUTTON',

  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

  render: function() {
    var props = {};

    // Copy the props; except the mouse listeners if we're disabled
    for (var key in this.props) {
      if (this.props.hasOwnProperty(key) &&
          (!this.props.disabled || !mouseListenerNames[key])) {
        props[key] = this.props[key];
      }
    }

    return button(props, this.props.children);
  }

});

module.exports = ReactDOMButton;

},{"./AutoFocusMixin":64,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125,"./keyMirror":219}],110:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 * @typechecks static-only
 */

/* global hasOwnProperty:true */

'use strict';

var CSSPropertyOperations = require("./CSSPropertyOperations");
var DOMProperty = require("./DOMProperty");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter");
var ReactComponentBrowserEnvironment =
  require("./ReactComponentBrowserEnvironment");
var ReactMount = require("./ReactMount");
var ReactMultiChild = require("./ReactMultiChild");
var ReactPerf = require("./ReactPerf");

var assign = require("./Object.assign");
var escapeTextContentForBrowser = require("./escapeTextContentForBrowser");
var invariant = require("./invariant");
var isEventSupported = require("./isEventSupported");
var keyOf = require("./keyOf");
var warning = require("./warning");

var deleteListener = ReactBrowserEventEmitter.deleteListener;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = {'string': true, 'number': true};

var STYLE = keyOf({style: null});

var ELEMENT_NODE_TYPE = 1;

/**
 * Optionally injectable operations for mutating the DOM
 */
var BackendIDOperations = null;

/**
 * @param {?object} props
 */
function assertValidProps(props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (props.dangerouslySetInnerHTML != null) {
    ("production" !== process.env.NODE_ENV ? invariant(
      props.children == null,
      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
    ) : invariant(props.children == null));
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof props.dangerouslySetInnerHTML === 'object' &&
      '__html' in props.dangerouslySetInnerHTML,
      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
      'for more information.'
    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&
    '__html' in props.dangerouslySetInnerHTML));
  }
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      props.innerHTML == null,
      'Directly setting property `innerHTML` is not permitted. ' +
      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
    ) : null);
    ("production" !== process.env.NODE_ENV ? warning(
      !props.contentEditable || props.children == null,
      'A component is `contentEditable` and contains `children` managed by ' +
      'React. It is now your responsibility to guarantee that none of ' +
      'those nodes are unexpectedly modified or duplicated. This is ' +
      'probably not intentional.'
    ) : null);
  }
  ("production" !== process.env.NODE_ENV ? invariant(
    props.style == null || typeof props.style === 'object',
    'The `style` prop expects a mapping from style properties to values, ' +
    'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' +
    'using JSX.'
  ) : invariant(props.style == null || typeof props.style === 'object'));
}

function putListener(id, registrationName, listener, transaction) {
  if ("production" !== process.env.NODE_ENV) {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    ("production" !== process.env.NODE_ENV ? warning(
      registrationName !== 'onScroll' || isEventSupported('scroll', true),
      'This browser doesn\'t support the `onScroll` event'
    ) : null);
  }
  var container = ReactMount.findReactContainerForID(id);
  if (container) {
    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
      container.ownerDocument :
      container;
    listenTo(registrationName, doc);
  }
  transaction.getPutListenerQueue().enqueuePutListener(
    id,
    registrationName,
    listener
  );
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special cased tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// We accept any tag to be rendered but since this gets injected into abitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    ("production" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
    validatedTagCache[tag] = true;
  }
}

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(tag) {
  validateDangerousTag(tag);
  this._tag = tag;
  this._renderedChildren = null;
  this._previousStyleCopy = null;
  this._rootNodeID = null;
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  construct: function(element) {
    this._currentElement = element;
  },

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {string} rootID The root DOM ID for this node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} The computed markup.
   */
  mountComponent: function(rootID, transaction, context) {
    this._rootNodeID = rootID;
    assertValidProps(this._currentElement.props);
    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
    return (
      this._createOpenTagMarkupAndPutListeners(transaction) +
      this._createContentMarkup(transaction, context) +
      closeTag
    );
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function(transaction) {
    var props = this._currentElement.props;
    var ret = '<' + this._tag;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, propValue, transaction);
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            propValue = this._previousStyleCopy = assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
        }
        var markup =
          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret + '>';
    }

    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
    return ret + ' ' + markupForID + '>';
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function(transaction, context) {
    var prefix = '';
    if (this._tag === 'listing' ||
        this._tag === 'pre' ||
        this._tag === 'textarea') {
      // Add an initial newline because browsers ignore the first newline in
      // a <listing>, <pre>, or <textarea> as an "authoring convenience" -- see
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.
      prefix = '\n';
    }

    var props = this._currentElement.props;

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        return prefix + innerHTML.__html;
      }
    } else {
      var contentToUse =
        CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        return prefix + escapeTextContentForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(
          childrenToUse,
          transaction,
          context
        );
        return prefix + mountImages.join('');
      }
    }
    return prefix;
  },

  receiveComponent: function(nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function(transaction, prevElement, nextElement, context) {
    assertValidProps(this._currentElement.props);
    this._updateDOMProperties(prevElement.props, transaction);
    this._updateDOMChildren(prevElement.props, transaction, context);
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMProperties: function(lastProps, transaction) {
    var nextProps = this._currentElement.props;
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) ||
         !lastProps.hasOwnProperty(propKey)) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        deleteListener(this._rootNodeID, propKey);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        BackendIDOperations.deletePropertyByID(
          this._rootNodeID,
          propKey
        );
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ?
        this._previousStyleCopy :
        lastProps[propKey];
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          nextProp = this._previousStyleCopy = assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) &&
                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) &&
                lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, nextProp, transaction);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        BackendIDOperations.updatePropertyByID(
          this._rootNodeID,
          propKey,
          nextProp
        );
      }
    }
    if (styleUpdates) {
      BackendIDOperations.updateStylesByID(
        this._rootNodeID,
        styleUpdates
      );
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMChildren: function(lastProps, transaction, context) {
    var nextProps = this._currentElement.props;

    var lastContent =
      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent =
      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml =
      lastProps.dangerouslySetInnerHTML &&
      lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml =
      nextProps.dangerouslySetInnerHTML &&
      nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        BackendIDOperations.updateInnerHTMLByID(
          this._rootNodeID,
          nextHtml
        );
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction, context);
    }
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function() {
    this.unmountChildren();
    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
    this._rootNodeID = null;
  }

};

ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
  mountComponent: 'mountComponent',
  updateComponent: 'updateComponent'
});

assign(
  ReactDOMComponent.prototype,
  ReactDOMComponent.Mixin,
  ReactMultiChild.Mixin
);

ReactDOMComponent.injection = {
  injectIDOperations: function(IDOperations) {
    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;
  }
};

module.exports = ReactDOMComponent;

}).call(this,require('_process'))
},{"./CSSPropertyOperations":68,"./DOMProperty":73,"./DOMPropertyOperations":74,"./Object.assign":91,"./ReactBrowserEventEmitter":95,"./ReactComponentBrowserEnvironment":102,"./ReactMount":139,"./ReactMultiChild":140,"./ReactPerf":144,"./escapeTextContentForBrowser":194,"./invariant":213,"./isEventSupported":214,"./keyOf":220,"./warning":234,"_process":417}],111:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMForm
 */

'use strict';

var EventConstants = require("./EventConstants");
var LocalEventTrapMixin = require("./LocalEventTrapMixin");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");

var form = ReactElement.createFactory('form');

/**
 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
 * to capture it on the <form> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <form> a
 * composite component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMForm = ReactClass.createClass({
  displayName: 'ReactDOMForm',
  tagName: 'FORM',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
    // `jshint` fails to parse JSX so in order for linting to work in the open
    // source repo, we need to just use `ReactDOM.form`.
    return form(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
  }
});

module.exports = ReactDOMForm;

},{"./EventConstants":78,"./LocalEventTrapMixin":89,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125}],112:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 * @typechecks static-only
 */

/*jslint evil: true */

'use strict';

var CSSPropertyOperations = require("./CSSPropertyOperations");
var DOMChildrenOperations = require("./DOMChildrenOperations");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactMount = require("./ReactMount");
var ReactPerf = require("./ReactPerf");

var invariant = require("./invariant");
var setInnerHTML = require("./setInnerHTML");

/**
 * Errors for properties that should not be updated with `updatePropertyById()`.
 *
 * @type {object}
 * @private
 */
var INVALID_PROPERTY_ERRORS = {
  dangerouslySetInnerHTML:
    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
  style: '`style` must be set using `updateStylesByID()`.'
};

/**
 * Operations used to process updates to DOM nodes. This is made injectable via
 * `ReactDOMComponent.BackendIDOperations`.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a DOM node with new property values. This should only be used to
   * update DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A valid property name, see `DOMProperty`.
   * @param {*} value New value of the property.
   * @internal
   */
  updatePropertyByID: function(id, name, value) {
    var node = ReactMount.getNode(id);
    ("production" !== process.env.NODE_ENV ? invariant(
      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
      'updatePropertyByID(...): %s',
      INVALID_PROPERTY_ERRORS[name]
    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

    // If we're updating to null or undefined, we should remove the property
    // from the DOM node instead of inadvertantly setting to a string. This
    // brings us in line with the same behavior we have on initial render.
    if (value != null) {
      DOMPropertyOperations.setValueForProperty(node, name, value);
    } else {
      DOMPropertyOperations.deleteValueForProperty(node, name);
    }
  },

  /**
   * Updates a DOM node to remove a property. This should only be used to remove
   * DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A property name to remove, see `DOMProperty`.
   * @internal
   */
  deletePropertyByID: function(id, name, value) {
    var node = ReactMount.getNode(id);
    ("production" !== process.env.NODE_ENV ? invariant(
      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
      'updatePropertyByID(...): %s',
      INVALID_PROPERTY_ERRORS[name]
    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
    DOMPropertyOperations.deleteValueForProperty(node, name, value);
  },

  /**
   * Updates a DOM node with new style values. If a value is specified as '',
   * the corresponding style property will be unset.
   *
   * @param {string} id ID of the node to update.
   * @param {object} styles Mapping from styles to values.
   * @internal
   */
  updateStylesByID: function(id, styles) {
    var node = ReactMount.getNode(id);
    CSSPropertyOperations.setValueForStyles(node, styles);
  },

  /**
   * Updates a DOM node's innerHTML.
   *
   * @param {string} id ID of the node to update.
   * @param {string} html An HTML string.
   * @internal
   */
  updateInnerHTMLByID: function(id, html) {
    var node = ReactMount.getNode(id);
    setInnerHTML(node, html);
  },

  /**
   * Updates a DOM node's text content set by `props.content`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} content Text content.
   * @internal
   */
  updateTextContentByID: function(id, content) {
    var node = ReactMount.getNode(id);
    DOMChildrenOperations.updateTextContent(node, content);
  },

  /**
   * Replaces a DOM node that exists in the document with markup.
   *
   * @param {string} id ID of child to be replaced.
   * @param {string} markup Dangerous markup to inject in place of child.
   * @internal
   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
   */
  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {
    var node = ReactMount.getNode(id);
    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
  },

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markup List of markup strings.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function(updates, markup) {
    for (var i = 0; i < updates.length; i++) {
      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
    }
    DOMChildrenOperations.processUpdates(updates, markup);
  }
};

ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
  updatePropertyByID: 'updatePropertyByID',
  deletePropertyByID: 'deletePropertyByID',
  updateStylesByID: 'updateStylesByID',
  updateInnerHTMLByID: 'updateInnerHTMLByID',
  updateTextContentByID: 'updateTextContentByID',
  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
});

module.exports = ReactDOMIDOperations;

}).call(this,require('_process'))
},{"./CSSPropertyOperations":68,"./DOMChildrenOperations":72,"./DOMPropertyOperations":74,"./ReactMount":139,"./ReactPerf":144,"./invariant":213,"./setInnerHTML":227,"_process":417}],113:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIframe
 */

'use strict';

var EventConstants = require("./EventConstants");
var LocalEventTrapMixin = require("./LocalEventTrapMixin");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");

var iframe = ReactElement.createFactory('iframe');

/**
 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
 * capture it on the <iframe> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <iframe> a composite
 * component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMIframe = ReactClass.createClass({
  displayName: 'ReactDOMIframe',
  tagName: 'IFRAME',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    return iframe(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
  }
});

module.exports = ReactDOMIframe;

},{"./EventConstants":78,"./LocalEventTrapMixin":89,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125}],114:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMImg
 */

'use strict';

var EventConstants = require("./EventConstants");
var LocalEventTrapMixin = require("./LocalEventTrapMixin");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");

var img = ReactElement.createFactory('img');

/**
 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
 * capture it on the <img> element itself. There are lots of hacks we could do
 * to accomplish this, but the most reliable is to make <img> a composite
 * component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMImg = ReactClass.createClass({
  displayName: 'ReactDOMImg',
  tagName: 'IMG',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    return img(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
  }
});

module.exports = ReactDOMImg;

},{"./EventConstants":78,"./LocalEventTrapMixin":89,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125}],115:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

'use strict';

var AutoFocusMixin = require("./AutoFocusMixin");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var LinkedValueUtils = require("./LinkedValueUtils");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");
var ReactMount = require("./ReactMount");
var ReactUpdates = require("./ReactUpdates");

var assign = require("./Object.assign");
var invariant = require("./invariant");

var input = ReactElement.createFactory('input');

var instancesByReactID = {};

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = ReactClass.createClass({
  displayName: 'ReactDOMInput',
  tagName: 'INPUT',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    return {
      initialChecked: this.props.defaultChecked || false,
      initialValue: defaultValue != null ? defaultValue : null
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.defaultChecked = null;
    props.defaultValue = null;

    var value = LinkedValueUtils.getValue(this);
    props.value = value != null ? value : this.state.initialValue;

    var checked = LinkedValueUtils.getChecked(this);
    props.checked = checked != null ? checked : this.state.initialChecked;

    props.onChange = this._handleChange;

    return input(props, this.props.children);
  },

  componentDidMount: function() {
    var id = ReactMount.getID(this.getDOMNode());
    instancesByReactID[id] = this;
  },

  componentWillUnmount: function() {
    var rootNode = this.getDOMNode();
    var id = ReactMount.getID(rootNode);
    delete instancesByReactID[id];
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var rootNode = this.getDOMNode();
    if (this.props.checked != null) {
      DOMPropertyOperations.setValueForProperty(
        rootNode,
        'checked',
        this.props.checked || false
      );
    }

    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    // Here we use asap to wait until all updates have propagated, which
    // is important when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    ReactUpdates.asap(forceUpdateIfMounted, this);

    var name = this.props.name;
    if (this.props.type === 'radio' && name != null) {
      var rootNode = this.getDOMNode();
      var queryRoot = rootNode;

      while (queryRoot.parentNode) {
        queryRoot = queryRoot.parentNode;
      }

      // If `rootNode.form` was non-null, then we could try `form.elements`,
      // but that sometimes behaves strangely in IE8. We could also try using
      // `form.getElementsByName`, but that will only return direct children
      // and won't include inputs that use the HTML5 `form=` attribute. Since
      // the input might not even be in a form, let's just use the global
      // `querySelectorAll` to ensure we don't miss anything.
      var group = queryRoot.querySelectorAll(
        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode ||
            otherNode.form !== rootNode.form) {
          continue;
        }
        var otherID = ReactMount.getID(otherNode);
        ("production" !== process.env.NODE_ENV ? invariant(
          otherID,
          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
          'same `name` is not supported.'
        ) : invariant(otherID));
        var otherInstance = instancesByReactID[otherID];
        ("production" !== process.env.NODE_ENV ? invariant(
          otherInstance,
          'ReactDOMInput: Unknown radio button ID %s.',
          otherID
        ) : invariant(otherInstance));
        // If this is a controlled radio button group, forcing the input that
        // was previously checked to update will cause it to be come re-checked
        // as appropriate.
        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
      }
    }

    return returnValue;
  }

});

module.exports = ReactDOMInput;

}).call(this,require('_process'))
},{"./AutoFocusMixin":64,"./DOMPropertyOperations":74,"./LinkedValueUtils":88,"./Object.assign":91,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125,"./ReactMount":139,"./ReactUpdates":162,"./invariant":213,"_process":417}],116:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

'use strict';

var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");

var warning = require("./warning");

var option = ReactElement.createFactory('option');

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = ReactClass.createClass({
  displayName: 'ReactDOMOption',
  tagName: 'OPTION',

  mixins: [ReactBrowserComponentMixin],

  componentWillMount: function() {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        this.props.selected == null,
        'Use the `defaultValue` or `value` props on <select> instead of ' +
        'setting `selected` on <option>.'
      ) : null);
    }
  },

  render: function() {
    return option(this.props, this.props.children);
  }

});

module.exports = ReactDOMOption;

}).call(this,require('_process'))
},{"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125,"./warning":234,"_process":417}],117:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

'use strict';

var AutoFocusMixin = require("./AutoFocusMixin");
var LinkedValueUtils = require("./LinkedValueUtils");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");
var ReactUpdates = require("./ReactUpdates");

var assign = require("./Object.assign");

var select = ReactElement.createFactory('select');

function updateOptionsIfPendingUpdateAndMounted() {
  /*jshint validthis:true */
  if (this._pendingUpdate) {
    this._pendingUpdate = false;
    var value = LinkedValueUtils.getValue(this);
    if (value != null && this.isMounted()) {
      updateOptions(this, value);
    }
  }
}

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function selectValueType(props, propName, componentName) {
  if (props[propName] == null) {
    return null;
  }
  if (props.multiple) {
    if (!Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
        ("`multiple` is true.")
      );
    }
  } else {
    if (Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
        ("value if `multiple` is false.")
      );
    }
  }
}

/**
 * @param {ReactComponent} component Instance of ReactDOMSelect
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(component, propValue) {
  var selectedValue, i, l;
  var options = component.getDOMNode().options;

  if (component.props.multiple) {
    selectedValue = {};
    for (i = 0, l = propValue.length; i < l; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0, l = options.length; i < l; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0, l = options.length; i < l; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = ReactClass.createClass({
  displayName: 'ReactDOMSelect',
  tagName: 'SELECT',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  propTypes: {
    defaultValue: selectValueType,
    value: selectValueType
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.onChange = this._handleChange;
    props.value = null;

    return select(props, this.props.children);
  },

  componentWillMount: function() {
    this._pendingUpdate = false;
  },

  componentDidMount: function() {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      updateOptions(this, value);
    } else if (this.props.defaultValue != null) {
      updateOptions(this, this.props.defaultValue);
    }
  },

  componentDidUpdate: function(prevProps) {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      this._pendingUpdate = false;
      updateOptions(this, value);
    } else if (!prevProps.multiple !== !this.props.multiple) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (this.props.defaultValue != null) {
        updateOptions(this, this.props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(this, this.props.multiple ? [] : '');
      }
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }

    this._pendingUpdate = true;
    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMSelect;

},{"./AutoFocusMixin":64,"./LinkedValueUtils":88,"./Object.assign":91,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125,"./ReactUpdates":162}],118:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

'use strict';

var ExecutionEnvironment = require("./ExecutionEnvironment");

var getNodeForCharacterOffset = require("./getNodeForCharacterOffset");
var getTextContentAccessor = require("./getTextContentAccessor");

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(
    selection.anchorNode,
    selection.anchorOffset,
    selection.focusNode,
    selection.focusOffset
  );

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(
    tempRange.startContainer,
    tempRange.startOffset,
    tempRange.endContainer,
    tempRange.endOffset
  );

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (typeof offsets.end === 'undefined') {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = typeof offsets.end === 'undefined' ?
            start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = (
  ExecutionEnvironment.canUseDOM &&
  'selection' in document &&
  !('getSelection' in window)
);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

},{"./ExecutionEnvironment":84,"./getNodeForCharacterOffset":206,"./getTextContentAccessor":208}],119:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextComponent
 * @typechecks static-only
 */

'use strict';

var DOMPropertyOperations = require("./DOMPropertyOperations");
var ReactComponentBrowserEnvironment =
  require("./ReactComponentBrowserEnvironment");
var ReactDOMComponent = require("./ReactDOMComponent");

var assign = require("./Object.assign");
var escapeTextContentForBrowser = require("./escapeTextContentForBrowser");

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings in elements so that they can undergo
 * the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function(props) {
  // This constructor and its argument is currently used by mocks.
};

assign(ReactDOMTextComponent.prototype, {

  /**
   * @param {ReactText} text
   * @internal
   */
  construct: function(text) {
    // TODO: This is really a ReactText (ReactNode), not a ReactElement
    this._currentElement = text;
    this._stringText = '' + text;

    // Properties
    this._rootNodeID = null;
    this._mountIndex = 0;
  },

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function(rootID, transaction, context) {
    this._rootNodeID = rootID;
    var escapedText = escapeTextContentForBrowser(this._stringText);

    if (transaction.renderToStaticMarkup) {
      // Normally we'd wrap this in a `span` for the reasons stated above, but
      // since this is a situation where React won't take over (static pages),
      // we can simply return the text as it is.
      return escapedText;
    }

    return (
      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
        escapedText +
      '</span>'
    );
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function(nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        ReactDOMComponent.BackendIDOperations.updateTextContentByID(
          this._rootNodeID,
          nextStringText
        );
      }
    }
  },

  unmountComponent: function() {
    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
  }

});

module.exports = ReactDOMTextComponent;

},{"./DOMPropertyOperations":74,"./Object.assign":91,"./ReactComponentBrowserEnvironment":102,"./ReactDOMComponent":110,"./escapeTextContentForBrowser":194}],120:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

'use strict';

var AutoFocusMixin = require("./AutoFocusMixin");
var DOMPropertyOperations = require("./DOMPropertyOperations");
var LinkedValueUtils = require("./LinkedValueUtils");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");
var ReactUpdates = require("./ReactUpdates");

var assign = require("./Object.assign");
var invariant = require("./invariant");

var warning = require("./warning");

var textarea = ReactElement.createFactory('textarea');

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = ReactClass.createClass({
  displayName: 'ReactDOMTextarea',
  tagName: 'TEXTAREA',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = this.props.children;
    if (children != null) {
      if ("production" !== process.env.NODE_ENV) {
        ("production" !== process.env.NODE_ENV ? warning(
          false,
          'Use the `defaultValue` or `value` props instead of setting ' +
          'children on <textarea>.'
        ) : null);
      }
      ("production" !== process.env.NODE_ENV ? invariant(
        defaultValue == null,
        'If you supply `defaultValue` on a <textarea>, do not pass children.'
      ) : invariant(defaultValue == null));
      if (Array.isArray(children)) {
        ("production" !== process.env.NODE_ENV ? invariant(
          children.length <= 1,
          '<textarea> can only have at most one child.'
        ) : invariant(children.length <= 1));
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = LinkedValueUtils.getValue(this);
    return {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue)
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    ("production" !== process.env.NODE_ENV ? invariant(
      props.dangerouslySetInnerHTML == null,
      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
    ) : invariant(props.dangerouslySetInnerHTML == null));

    props.defaultValue = null;
    props.value = null;
    props.onChange = this._handleChange;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    return textarea(props, this.state.initialValue);
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      var rootNode = this.getDOMNode();
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    ReactUpdates.asap(forceUpdateIfMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMTextarea;

}).call(this,require('_process'))
},{"./AutoFocusMixin":64,"./DOMPropertyOperations":74,"./LinkedValueUtils":88,"./Object.assign":91,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactElement":125,"./ReactUpdates":162,"./invariant":213,"./warning":234,"_process":417}],121:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

'use strict';

var ReactUpdates = require("./ReactUpdates");
var Transaction = require("./Transaction");

var assign = require("./Object.assign");
var emptyFunction = require("./emptyFunction");

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

assign(
  ReactDefaultBatchingStrategyTransaction.prototype,
  Transaction.Mixin,
  {
    getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    }
  }
);

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function(callback, a, b, c, d) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b, c, d);
    } else {
      transaction.perform(callback, null, a, b, c, d);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

},{"./Object.assign":91,"./ReactUpdates":162,"./Transaction":179,"./emptyFunction":192}],122:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

'use strict';

var BeforeInputEventPlugin = require("./BeforeInputEventPlugin");
var ChangeEventPlugin = require("./ChangeEventPlugin");
var ClientReactRootIndex = require("./ClientReactRootIndex");
var DefaultEventPluginOrder = require("./DefaultEventPluginOrder");
var EnterLeaveEventPlugin = require("./EnterLeaveEventPlugin");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var HTMLDOMPropertyConfig = require("./HTMLDOMPropertyConfig");
var MobileSafariClickEventPlugin = require("./MobileSafariClickEventPlugin");
var ReactBrowserComponentMixin = require("./ReactBrowserComponentMixin");
var ReactClass = require("./ReactClass");
var ReactComponentBrowserEnvironment =
  require("./ReactComponentBrowserEnvironment");
var ReactDefaultBatchingStrategy = require("./ReactDefaultBatchingStrategy");
var ReactDOMComponent = require("./ReactDOMComponent");
var ReactDOMButton = require("./ReactDOMButton");
var ReactDOMForm = require("./ReactDOMForm");
var ReactDOMImg = require("./ReactDOMImg");
var ReactDOMIDOperations = require("./ReactDOMIDOperations");
var ReactDOMIframe = require("./ReactDOMIframe");
var ReactDOMInput = require("./ReactDOMInput");
var ReactDOMOption = require("./ReactDOMOption");
var ReactDOMSelect = require("./ReactDOMSelect");
var ReactDOMTextarea = require("./ReactDOMTextarea");
var ReactDOMTextComponent = require("./ReactDOMTextComponent");
var ReactElement = require("./ReactElement");
var ReactEventListener = require("./ReactEventListener");
var ReactInjection = require("./ReactInjection");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMount = require("./ReactMount");
var ReactReconcileTransaction = require("./ReactReconcileTransaction");
var SelectEventPlugin = require("./SelectEventPlugin");
var ServerReactRootIndex = require("./ServerReactRootIndex");
var SimpleEventPlugin = require("./SimpleEventPlugin");
var SVGDOMPropertyConfig = require("./SVGDOMPropertyConfig");

var createFullPageComponent = require("./createFullPageComponent");

function autoGenerateWrapperClass(type) {
  return ReactClass.createClass({
    tagName: type.toUpperCase(),
    render: function() {
      return new ReactElement(
        type,
        null,
        null,
        null,
        null,
        this.props
      );
    }
  });
}

function inject() {
  ReactInjection.EventEmitter.injectReactEventListener(
    ReactEventListener
  );

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
  ReactInjection.EventPluginHub.injectMount(ReactMount);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.NativeComponent.injectGenericComponentClass(
    ReactDOMComponent
  );

  ReactInjection.NativeComponent.injectTextComponentClass(
    ReactDOMTextComponent
  );

  ReactInjection.NativeComponent.injectAutoWrapper(
    autoGenerateWrapperClass
  );

  // This needs to happen before createFullPageComponent() otherwise the mixin
  // won't be included.
  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

  ReactInjection.NativeComponent.injectComponentClasses({
    'button': ReactDOMButton,
    'form': ReactDOMForm,
    'iframe': ReactDOMIframe,
    'img': ReactDOMImg,
    'input': ReactDOMInput,
    'option': ReactDOMOption,
    'select': ReactDOMSelect,
    'textarea': ReactDOMTextarea,

    'html': createFullPageComponent('html'),
    'head': createFullPageComponent('head'),
    'body': createFullPageComponent('body')
  });

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

  ReactInjection.Updates.injectReconcileTransaction(
    ReactReconcileTransaction
  );
  ReactInjection.Updates.injectBatchingStrategy(
    ReactDefaultBatchingStrategy
  );

  ReactInjection.RootIndex.injectCreateReactRootIndex(
    ExecutionEnvironment.canUseDOM ?
      ClientReactRootIndex.createReactRootIndex :
      ServerReactRootIndex.createReactRootIndex
  );

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);

  if ("production" !== process.env.NODE_ENV) {
    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
    if ((/[?&]react_perf\b/).test(url)) {
      var ReactDefaultPerf = require("./ReactDefaultPerf");
      ReactDefaultPerf.start();
    }
  }
}

module.exports = {
  inject: inject
};

}).call(this,require('_process'))
},{"./BeforeInputEventPlugin":65,"./ChangeEventPlugin":70,"./ClientReactRootIndex":71,"./DefaultEventPluginOrder":76,"./EnterLeaveEventPlugin":77,"./ExecutionEnvironment":84,"./HTMLDOMPropertyConfig":86,"./MobileSafariClickEventPlugin":90,"./ReactBrowserComponentMixin":94,"./ReactClass":100,"./ReactComponentBrowserEnvironment":102,"./ReactDOMButton":109,"./ReactDOMComponent":110,"./ReactDOMForm":111,"./ReactDOMIDOperations":112,"./ReactDOMIframe":113,"./ReactDOMImg":114,"./ReactDOMInput":115,"./ReactDOMOption":116,"./ReactDOMSelect":117,"./ReactDOMTextComponent":119,"./ReactDOMTextarea":120,"./ReactDefaultBatchingStrategy":121,"./ReactDefaultPerf":123,"./ReactElement":125,"./ReactEventListener":130,"./ReactInjection":132,"./ReactInstanceHandles":134,"./ReactMount":139,"./ReactReconcileTransaction":150,"./SVGDOMPropertyConfig":164,"./SelectEventPlugin":165,"./ServerReactRootIndex":166,"./SimpleEventPlugin":167,"./createFullPageComponent":188,"_process":417}],123:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerf
 * @typechecks static-only
 */

'use strict';

var DOMProperty = require("./DOMProperty");
var ReactDefaultPerfAnalysis = require("./ReactDefaultPerfAnalysis");
var ReactMount = require("./ReactMount");
var ReactPerf = require("./ReactPerf");

var performanceNow = require("./performanceNow");

function roundFloat(val) {
  return Math.floor(val * 100) / 100;
}

function addValue(obj, key, val) {
  obj[key] = (obj[key] || 0) + val;
}

var ReactDefaultPerf = {
  _allMeasurements: [], // last item in the list is the current one
  _mountStack: [0],
  _injected: false,

  start: function() {
    if (!ReactDefaultPerf._injected) {
      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
    }

    ReactDefaultPerf._allMeasurements.length = 0;
    ReactPerf.enableMeasure = true;
  },

  stop: function() {
    ReactPerf.enableMeasure = false;
  },

  getLastMeasurements: function() {
    return ReactDefaultPerf._allMeasurements;
  },

  printExclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Component class name': item.componentName,
        'Total inclusive time (ms)': roundFloat(item.inclusive),
        'Exclusive mount time (ms)': roundFloat(item.exclusive),
        'Exclusive render time (ms)': roundFloat(item.render),
        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
        'Render time per instance (ms)': roundFloat(item.render / item.count),
        'Instances': item.count
      };
    }));
    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
    // number.
  },

  printInclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Inclusive time (ms)': roundFloat(item.time),
        'Instances': item.count
      };
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  getMeasurementsSummaryMap: function(measurements) {
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
      measurements,
      true
    );
    return summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Wasted time (ms)': item.time,
        'Instances': item.count
      };
    });
  },

  printWasted: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  printDOM: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
    console.table(summary.map(function(item) {
      var result = {};
      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
      result['type'] = item.type;
      result['args'] = JSON.stringify(item.args);
      return result;
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  _recordWrite: function(id, fnName, totalTime, args) {
    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
    var writes =
      ReactDefaultPerf
        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
        .writes;
    writes[id] = writes[id] || [];
    writes[id].push({
      type: fnName,
      time: totalTime,
      args: args
    });
  },

  measure: function(moduleName, fnName, func) {
    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
      var totalTime;
      var rv;
      var start;

      if (fnName === '_renderNewRootComponent' ||
          fnName === 'flushBatchedUpdates') {
        // A "measurement" is a set of metrics recorded for each flush. We want
        // to group the metrics for a given flush together so we can look at the
        // components that rendered and the DOM operations that actually
        // happened to determine the amount of "wasted work" performed.
        ReactDefaultPerf._allMeasurements.push({
          exclusive: {},
          inclusive: {},
          render: {},
          counts: {},
          writes: {},
          displayNames: {},
          totalTime: 0
        });
        start = performanceNow();
        rv = func.apply(this, args);
        ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ].totalTime = performanceNow() - start;
        return rv;
      } else if (fnName === '_mountImageIntoNode' ||
          moduleName === 'ReactDOMIDOperations') {
        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (fnName === '_mountImageIntoNode') {
          var mountID = ReactMount.getID(args[1]);
          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
          // special format
          args[0].forEach(function(update) {
            var writeArgs = {};
            if (update.fromIndex !== null) {
              writeArgs.fromIndex = update.fromIndex;
            }
            if (update.toIndex !== null) {
              writeArgs.toIndex = update.toIndex;
            }
            if (update.textContent !== null) {
              writeArgs.textContent = update.textContent;
            }
            if (update.markupIndex !== null) {
              writeArgs.markup = args[1][update.markupIndex];
            }
            ReactDefaultPerf._recordWrite(
              update.parentID,
              update.type,
              totalTime,
              writeArgs
            );
          });
        } else {
          // basic format
          ReactDefaultPerf._recordWrite(
            args[0],
            fnName,
            totalTime,
            Array.prototype.slice.call(args, 1)
          );
        }
        return rv;
      } else if (moduleName === 'ReactCompositeComponent' && (
        (// TODO: receiveComponent()?
        (fnName === 'mountComponent' ||
        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {

        if (typeof this._currentElement.type === 'string') {
          return func.apply(this, args);
        }

        var rootNodeID = fnName === 'mountComponent' ?
          args[0] :
          this._rootNodeID;
        var isRender = fnName === '_renderValidatedComponent';
        var isMount = fnName === 'mountComponent';

        var mountStack = ReactDefaultPerf._mountStack;
        var entry = ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ];

        if (isRender) {
          addValue(entry.counts, rootNodeID, 1);
        } else if (isMount) {
          mountStack.push(0);
        }

        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (isRender) {
          addValue(entry.render, rootNodeID, totalTime);
        } else if (isMount) {
          var subMountTime = mountStack.pop();
          mountStack[mountStack.length - 1] += totalTime;
          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
          addValue(entry.inclusive, rootNodeID, totalTime);
        } else {
          addValue(entry.inclusive, rootNodeID, totalTime);
        }

        entry.displayNames[rootNodeID] = {
          current: this.getName(),
          owner: this._currentElement._owner ?
            this._currentElement._owner.getName() :
            '<root>'
        };

        return rv;
      } else {
        return func.apply(this, args);
      }
    };
  }
};

module.exports = ReactDefaultPerf;

},{"./DOMProperty":73,"./ReactDefaultPerfAnalysis":124,"./ReactMount":139,"./ReactPerf":144,"./performanceNow":225}],124:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerfAnalysis
 */

var assign = require("./Object.assign");

// Don't try to save users less than 1.2ms (a number I made up)
var DONT_CARE_THRESHOLD = 1.2;
var DOM_OPERATION_TYPES = {
  '_mountImageIntoNode': 'set innerHTML',
  INSERT_MARKUP: 'set innerHTML',
  MOVE_EXISTING: 'move',
  REMOVE_NODE: 'remove',
  TEXT_CONTENT: 'set textContent',
  'updatePropertyByID': 'update attribute',
  'deletePropertyByID': 'delete attribute',
  'updateStylesByID': 'update styles',
  'updateInnerHTMLByID': 'set innerHTML',
  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
};

function getTotalTime(measurements) {
  // TODO: return number of DOM ops? could be misleading.
  // TODO: measure dropped frames after reconcile?
  // TODO: log total time of each reconcile and the top-level component
  // class that triggered it.
  var totalTime = 0;
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    totalTime += measurement.totalTime;
  }
  return totalTime;
}

function getDOMSummary(measurements) {
  var items = [];
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var id;

    for (id in measurement.writes) {
      measurement.writes[id].forEach(function(write) {
        items.push({
          id: id,
          type: DOM_OPERATION_TYPES[write.type] || write.type,
          args: write.args
        });
      });
    }
  }
  return items;
}

function getExclusiveSummary(measurements) {
  var candidates = {};
  var displayName;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );

    for (var id in allIDs) {
      displayName = measurement.displayNames[id].current;

      candidates[displayName] = candidates[displayName] || {
        componentName: displayName,
        inclusive: 0,
        exclusive: 0,
        render: 0,
        count: 0
      };
      if (measurement.render[id]) {
        candidates[displayName].render += measurement.render[id];
      }
      if (measurement.exclusive[id]) {
        candidates[displayName].exclusive += measurement.exclusive[id];
      }
      if (measurement.inclusive[id]) {
        candidates[displayName].inclusive += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[displayName].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (displayName in candidates) {
    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[displayName]);
    }
  }

  arr.sort(function(a, b) {
    return b.exclusive - a.exclusive;
  });

  return arr;
}

function getInclusiveSummary(measurements, onlyClean) {
  var candidates = {};
  var inclusiveKey;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );
    var cleanComponents;

    if (onlyClean) {
      cleanComponents = getUnchangedComponents(measurement);
    }

    for (var id in allIDs) {
      if (onlyClean && !cleanComponents[id]) {
        continue;
      }

      var displayName = measurement.displayNames[id];

      // Inclusive time is not useful for many components without knowing where
      // they are instantiated. So we aggregate inclusive time with both the
      // owner and current displayName as the key.
      inclusiveKey = displayName.owner + ' > ' + displayName.current;

      candidates[inclusiveKey] = candidates[inclusiveKey] || {
        componentName: inclusiveKey,
        time: 0,
        count: 0
      };

      if (measurement.inclusive[id]) {
        candidates[inclusiveKey].time += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[inclusiveKey].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (inclusiveKey in candidates) {
    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[inclusiveKey]);
    }
  }

  arr.sort(function(a, b) {
    return b.time - a.time;
  });

  return arr;
}

function getUnchangedComponents(measurement) {
  // For a given reconcile, look at which components did not actually
  // render anything to the DOM and return a mapping of their ID to
  // the amount of time it took to render the entire subtree.
  var cleanComponents = {};
  var dirtyLeafIDs = Object.keys(measurement.writes);
  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

  for (var id in allIDs) {
    var isDirty = false;
    // For each component that rendered, see if a component that triggered
    // a DOM op is in its subtree.
    for (var i = 0; i < dirtyLeafIDs.length; i++) {
      if (dirtyLeafIDs[i].indexOf(id) === 0) {
        isDirty = true;
        break;
      }
    }
    if (!isDirty && measurement.counts[id] > 0) {
      cleanComponents[id] = true;
    }
  }
  return cleanComponents;
}

var ReactDefaultPerfAnalysis = {
  getExclusiveSummary: getExclusiveSummary,
  getInclusiveSummary: getInclusiveSummary,
  getDOMSummary: getDOMSummary,
  getTotalTime: getTotalTime
};

module.exports = ReactDefaultPerfAnalysis;

},{"./Object.assign":91}],125:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

'use strict';

var ReactContext = require("./ReactContext");
var ReactCurrentOwner = require("./ReactCurrentOwner");

var assign = require("./Object.assign");
var warning = require("./warning");

var RESERVED_PROPS = {
  key: true,
  ref: true
};

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} object
 * @param {string} key
 */
function defineWarningProperty(object, key) {
  Object.defineProperty(object, key, {

    configurable: false,
    enumerable: true,

    get: function() {
      if (!this._store) {
        return null;
      }
      return this._store[key];
    },

    set: function(value) {
      ("production" !== process.env.NODE_ENV ? warning(
        false,
        'Don\'t set the %s property of the React element. Instead, ' +
        'specify the correct value when initially creating the element.',
        key
      ) : null);
      this._store[key] = value;
    }

  });
}

/**
 * This is updated to true if the membrane is successfully created.
 */
var useMutationMembrane = false;

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} element
 */
function defineMutationMembrane(prototype) {
  try {
    var pseudoFrozenProperties = {
      props: true
    };
    for (var key in pseudoFrozenProperties) {
      defineWarningProperty(prototype, key);
    }
    useMutationMembrane = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

/**
 * Base constructor for all React elements. This is only used to make this
 * work with a dynamic instanceof check. Nothing should live on this prototype.
 *
 * @param {*} type
 * @param {string|object} ref
 * @param {*} key
 * @param {*} props
 * @internal
 */
var ReactElement = function(type, key, ref, owner, context, props) {
  // Built-in properties that belong on the element
  this.type = type;
  this.key = key;
  this.ref = ref;

  // Record the component responsible for creating this element.
  this._owner = owner;

  // TODO: Deprecate withContext, and then the context becomes accessible
  // through the owner.
  this._context = context;

  if ("production" !== process.env.NODE_ENV) {
    // The validation flag and props are currently mutative. We put them on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    this._store = {props: props, originalProps: assign({}, props)};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    try {
      Object.defineProperty(this._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true
      });
    } catch (x) {
    }
    this._store.validated = false;

    // We're not allowed to set props directly on the object so we early
    // return and rely on the prototype membrane to forward to the backing
    // store.
    if (useMutationMembrane) {
      Object.freeze(this);
      return;
    }
  }

  this.props = props;
};

// We intentionally don't expose the function on the constructor property.
// ReactElement should be indistinguishable from a plain object.
ReactElement.prototype = {
  _isReactElement: true
};

if ("production" !== process.env.NODE_ENV) {
  defineMutationMembrane(ReactElement.prototype);
}

ReactElement.createElement = function(type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;

  if (config != null) {
    ref = config.ref === undefined ? null : config.ref;
    key = config.key === undefined ? null : '' + config.key;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (config.hasOwnProperty(propName) &&
          !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (typeof props[propName] === 'undefined') {
        props[propName] = defaultProps[propName];
      }
    }
  }

  return new ReactElement(
    type,
    key,
    ref,
    ReactCurrentOwner.current,
    ReactContext.current,
    props
  );
};

ReactElement.createFactory = function(type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
  var newElement = new ReactElement(
    oldElement.type,
    oldElement.key,
    oldElement.ref,
    oldElement._owner,
    oldElement._context,
    newProps
  );

  if ("production" !== process.env.NODE_ENV) {
    // If the key on the original is valid, then the clone is valid
    newElement._store.validated = oldElement._store.validated;
  }
  return newElement;
};

ReactElement.cloneElement = function(element, config, children) {
  var propName;

  // Original props are copied
  var props = assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (config.ref !== undefined) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (config.key !== undefined) {
      key = '' + config.key;
    }
    // Remaining properties override existing props
    for (propName in config) {
      if (config.hasOwnProperty(propName) &&
          !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return new ReactElement(
    element.type,
    key,
    ref,
    owner,
    element._context,
    props
  );
};

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function(object) {
  // ReactTestUtils is often used outside of beforeEach where as React is
  // within it. This leads to two different instances of React on the same
  // page. To identify a element from a different React instance we use
  // a flag instead of an instanceof check.
  var isElement = !!(object && object._isReactElement);
  // if (isElement && !(object instanceof ReactElement)) {
  // This is an indicator that you're using multiple versions of React at the
  // same time. This will screw with ownership and stuff. Fix it, please.
  // TODO: We could possibly warn here.
  // }
  return isElement;
};

module.exports = ReactElement;

}).call(this,require('_process'))
},{"./Object.assign":91,"./ReactContext":106,"./ReactCurrentOwner":107,"./warning":234,"_process":417}],126:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElementValidator
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

'use strict';

var ReactElement = require("./ReactElement");
var ReactFragment = require("./ReactFragment");
var ReactPropTypeLocations = require("./ReactPropTypeLocations");
var ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactNativeComponent = require("./ReactNativeComponent");

var getIteratorFn = require("./getIteratorFn");
var invariant = require("./invariant");
var warning = require("./warning");

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

var loggedTypeFailures = {};

var NUMERIC_PROPERTY_REGEX = /^\d+$/;

/**
 * Gets the instance's name for use in warnings.
 *
 * @internal
 * @return {?string} Display name or undefined
 */
function getName(instance) {
  var publicInstance = instance && instance.getPublicInstance();
  if (!publicInstance) {
    return undefined;
  }
  var constructor = publicInstance.constructor;
  if (!constructor) {
    return undefined;
  }
  return constructor.displayName || constructor.name || undefined;
}

/**
 * Gets the current owner's displayName for use in warnings.
 *
 * @internal
 * @return {?string} Display name or undefined
 */
function getCurrentOwnerDisplayName() {
  var current = ReactCurrentOwner.current;
  return (
    current && getName(current) || undefined
  );
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  warnAndMonitorForKeyUse(
    'Each child in an array or iterator should have a unique "key" prop.',
    element,
    parentType
  );
}

/**
 * Warn if the key is being defined as an object property but has an incorrect
 * value.
 *
 * @internal
 * @param {string} name Property name of the key.
 * @param {ReactElement} element Component that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validatePropertyKey(name, element, parentType) {
  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
    return;
  }
  warnAndMonitorForKeyUse(
    'Child objects should have non-numeric keys so ordering is preserved.',
    element,
    parentType
  );
}

/**
 * Shared warning and monitoring code for the key warnings.
 *
 * @internal
 * @param {string} message The base warning that gets output.
 * @param {ReactElement} element Component that requires a key.
 * @param {*} parentType element's parent's type.
 */
function warnAndMonitorForKeyUse(message, element, parentType) {
  var ownerName = getCurrentOwnerDisplayName();
  var parentName = typeof parentType === 'string' ?
    parentType : parentType.displayName || parentType.name;

  var useName = ownerName || parentName;
  var memoizer = ownerHasKeyUseWarning[message] || (
    (ownerHasKeyUseWarning[message] = {})
  );
  if (memoizer.hasOwnProperty(useName)) {
    return;
  }
  memoizer[useName] = true;

  var parentOrOwnerAddendum =
    ownerName ? (" Check the render method of " + ownerName + ".") :
    parentName ? (" Check the React.render call using <" + parentName + ">.") :
    '';

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwnerAddendum = '';
  if (element &&
      element._owner &&
      element._owner !== ReactCurrentOwner.current) {
    // Name of the component that originally created this child.
    var childOwnerName = getName(element._owner);

    childOwnerAddendum = (" It was passed a child from " + childOwnerName + ".");
  }

  ("production" !== process.env.NODE_ENV ? warning(
    false,
    message + '%s%s See https://fb.me/react-warning-keys for more information.',
    parentOrOwnerAddendum,
    childOwnerAddendum
  ) : null);
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    node._store.validated = true;
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    } else if (typeof node === 'object') {
      var fragment = ReactFragment.extractIfFragment(node);
      for (var key in fragment) {
        if (fragment.hasOwnProperty(key)) {
          validatePropertyKey(key, fragment[key], parentType);
        }
      }
    }
  }
}

/**
 * Assert that the props are valid
 *
 * @param {string} componentName Name of the component for error messages.
 * @param {object} propTypes Map of prop name to a ReactPropType
 * @param {object} props
 * @param {string} location e.g. "prop", "context", "child context"
 * @private
 */
function checkPropTypes(componentName, propTypes, props, location) {
  for (var propName in propTypes) {
    if (propTypes.hasOwnProperty(propName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        ("production" !== process.env.NODE_ENV ? invariant(
          typeof propTypes[propName] === 'function',
          '%s: %s type `%s` is invalid; it must be a function, usually from ' +
          'React.PropTypes.',
          componentName || 'React class',
          ReactPropTypeLocationNames[location],
          propName
        ) : invariant(typeof propTypes[propName] === 'function'));
        error = propTypes[propName](props, propName, componentName, location);
      } catch (ex) {
        error = ex;
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(this);
        ("production" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);
      }
    }
  }
}

var warnedPropsMutations = {};

/**
 * Warn about mutating props when setting `propName` on `element`.
 *
 * @param {string} propName The string key within props that was set
 * @param {ReactElement} element
 */
function warnForPropsMutation(propName, element) {
  var type = element.type;
  var elementName = typeof type === 'string' ? type : type.displayName;
  var ownerName = element._owner ?
    element._owner.getPublicInstance().constructor.displayName : null;

  var warningKey = propName + '|' + elementName + '|' + ownerName;
  if (warnedPropsMutations.hasOwnProperty(warningKey)) {
    return;
  }
  warnedPropsMutations[warningKey] = true;

  var elementInfo = '';
  if (elementName) {
    elementInfo = ' <' + elementName + ' />';
  }
  var ownerInfo = '';
  if (ownerName) {
    ownerInfo = ' The element was created by ' + ownerName + '.';
  }

  ("production" !== process.env.NODE_ENV ? warning(
    false,
    'Don\'t set .props.%s of the React component%s. Instead, specify the ' +
    'correct value when initially creating the element or use ' +
    'React.cloneElement to make a new element with updated props.%s',
    propName,
    elementInfo,
    ownerInfo
  ) : null);
}

// Inline Object.is polyfill
function is(a, b) {
  if (a !== a) {
    // NaN
    return b !== b;
  }
  if (a === 0 && b === 0) {
    // +-0
    return 1 / a === 1 / b;
  }
  return a === b;
}

/**
 * Given an element, check if its props have been mutated since element
 * creation (or the last call to this function). In particular, check if any
 * new props have been added, which we can't directly catch by defining warning
 * properties on the props object.
 *
 * @param {ReactElement} element
 */
function checkAndWarnForMutatedProps(element) {
  if (!element._store) {
    // Element was created using `new ReactElement` directly or with
    // `ReactElement.createElement`; skip mutation checking
    return;
  }

  var originalProps = element._store.originalProps;
  var props = element.props;

  for (var propName in props) {
    if (props.hasOwnProperty(propName)) {
      if (!originalProps.hasOwnProperty(propName) ||
          !is(originalProps[propName], props[propName])) {
        warnForPropsMutation(propName, element);

        // Copy over the new value so that the two props objects match again
        originalProps[propName] = props[propName];
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  if (element.type == null) {
    // This has already warned. Don't throw.
    return;
  }
  // Extract the component class from the element. Converts string types
  // to a composite class which may have propTypes.
  // TODO: Validating a string's propTypes is not decoupled from the
  // rendering target which is problematic.
  var componentClass = ReactNativeComponent.getComponentClassForElement(
    element
  );
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkPropTypes(
      name,
      componentClass.propTypes,
      element.props,
      ReactPropTypeLocations.prop
    );
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    ("production" !== process.env.NODE_ENV ? warning(
      componentClass.getDefaultProps.isReactClassApproved,
      'getDefaultProps is only used on classic React.createClass ' +
      'definitions. Use a static property named `defaultProps` instead.'
    ) : null);
  }
}

var ReactElementValidator = {

  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,

  createElement: function(type, props, children) {
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    ("production" !== process.env.NODE_ENV ? warning(
      type != null,
      'React.createElement: type should not be null or undefined. It should ' +
        'be a string (for DOM elements) or a ReactClass (for composite ' +
        'components).'
    ) : null);

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function(type) {
    var validatedFactory = ReactElementValidator.createElement.bind(
      null,
      type
    );
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if ("production" !== process.env.NODE_ENV) {
      try {
        Object.defineProperty(
          validatedFactory,
          'type',
          {
            enumerable: false,
            get: function() {
              ("production" !== process.env.NODE_ENV ? warning(
                false,
                'Factory.type is deprecated. Access the class directly ' +
                'before passing it to createFactory.'
              ) : null);
              Object.defineProperty(this, 'type', {
                value: type
              });
              return type;
            }
          }
        );
      } catch (x) {
        // IE will fail on defineProperty (es5-shim/sham too)
      }
    }


    return validatedFactory;
  },

  cloneElement: function(element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }

};

module.exports = ReactElementValidator;

}).call(this,require('_process'))
},{"./ReactCurrentOwner":107,"./ReactElement":125,"./ReactFragment":131,"./ReactNativeComponent":142,"./ReactPropTypeLocationNames":146,"./ReactPropTypeLocations":147,"./getIteratorFn":204,"./invariant":213,"./warning":234,"_process":417}],127:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

'use strict';

var ReactElement = require("./ReactElement");
var ReactInstanceMap = require("./ReactInstanceMap");

var invariant = require("./invariant");

var component;
// This registry keeps track of the React IDs of the components that rendered to
// `null` (in reality a placeholder such as `noscript`)
var nullComponentIDsRegistry = {};

var ReactEmptyComponentInjection = {
  injectEmptyComponent: function(emptyComponent) {
    component = ReactElement.createFactory(emptyComponent);
  }
};

var ReactEmptyComponentType = function() {};
ReactEmptyComponentType.prototype.componentDidMount = function() {
  var internalInstance = ReactInstanceMap.get(this);
  // TODO: Make sure we run these methods in the correct order, we shouldn't
  // need this check. We're going to assume if we're here it means we ran
  // componentWillUnmount already so there is no internal instance (it gets
  // removed as part of the unmounting process).
  if (!internalInstance) {
    return;
  }
  registerNullComponentID(internalInstance._rootNodeID);
};
ReactEmptyComponentType.prototype.componentWillUnmount = function() {
  var internalInstance = ReactInstanceMap.get(this);
  // TODO: Get rid of this check. See TODO in componentDidMount.
  if (!internalInstance) {
    return;
  }
  deregisterNullComponentID(internalInstance._rootNodeID);
};
ReactEmptyComponentType.prototype.render = function() {
  ("production" !== process.env.NODE_ENV ? invariant(
    component,
    'Trying to return null from a render, but no null placeholder component ' +
    'was injected.'
  ) : invariant(component));
  return component();
};

var emptyElement = ReactElement.createElement(ReactEmptyComponentType);

/**
 * Mark the component as having rendered to null.
 * @param {string} id Component's `_rootNodeID`.
 */
function registerNullComponentID(id) {
  nullComponentIDsRegistry[id] = true;
}

/**
 * Unmark the component as having rendered to null: it renders to something now.
 * @param {string} id Component's `_rootNodeID`.
 */
function deregisterNullComponentID(id) {
  delete nullComponentIDsRegistry[id];
}

/**
 * @param {string} id Component's `_rootNodeID`.
 * @return {boolean} True if the component is rendered to null.
 */
function isNullComponentID(id) {
  return !!nullComponentIDsRegistry[id];
}

var ReactEmptyComponent = {
  emptyElement: emptyElement,
  injection: ReactEmptyComponentInjection,
  isNullComponentID: isNullComponentID
};

module.exports = ReactEmptyComponent;

}).call(this,require('_process'))
},{"./ReactElement":125,"./ReactInstanceMap":135,"./invariant":213,"_process":417}],128:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 * @typechecks
 */

"use strict";

var ReactErrorUtils = {
  /**
   * Creates a guarded version of a function. This is supposed to make debugging
   * of event handlers easier. To aid debugging with the browser's debugger,
   * this currently simply returns the original function.
   *
   * @param {function} func Function to be executed
   * @param {string} name The name of the guard
   * @return {function}
   */
  guard: function(func, name) {
    return func;
  }
};

module.exports = ReactErrorUtils;

},{}],129:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

'use strict';

var EventPluginHub = require("./EventPluginHub");

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue();
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native environment event.
   */
  handleTopLevel: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events = EventPluginHub.extractEvents(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent
    );

    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

},{"./EventPluginHub":80}],130:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 * @typechecks static-only
 */

'use strict';

var EventListener = require("./EventListener");
var ExecutionEnvironment = require("./ExecutionEnvironment");
var PooledClass = require("./PooledClass");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMount = require("./ReactMount");
var ReactUpdates = require("./ReactUpdates");

var assign = require("./Object.assign");
var getEventTarget = require("./getEventTarget");
var getUnboundedScrollPosition = require("./getUnboundedScrollPosition");

/**
 * Finds the parent React component of `node`.
 *
 * @param {*} node
 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
 *                           is not nested.
 */
function findParent(node) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  var nodeID = ReactMount.getID(node);
  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
  var container = ReactMount.findReactContainerForID(rootID);
  var parent = ReactMount.getFirstReactDOM(container);
  return parent;
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function() {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(
  TopLevelCallbackBookKeeping,
  PooledClass.twoArgumentPooler
);

function handleTopLevelImpl(bookKeeping) {
  var topLevelTarget = ReactMount.getFirstReactDOM(
    getEventTarget(bookKeeping.nativeEvent)
  ) || window;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = topLevelTarget;
  while (ancestor) {
    bookKeeping.ancestors.push(ancestor);
    ancestor = findParent(ancestor);
  }

  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
    topLevelTarget = bookKeeping.ancestors[i];
    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
    ReactEventListener._handleTopLevel(
      bookKeeping.topLevelType,
      topLevelTarget,
      topLevelTargetID,
      bookKeeping.nativeEvent
    );
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function(handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function(enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function() {
    return ReactEventListener._enabled;
  },


  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.listen(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return null;
    }
    return EventListener.capture(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  monitorScrollValue: function(refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function(topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
      topLevelType,
      nativeEvent
    );
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

},{"./EventListener":79,"./ExecutionEnvironment":84,"./Object.assign":91,"./PooledClass":92,"./ReactInstanceHandles":134,"./ReactMount":139,"./ReactUpdates":162,"./getEventTarget":203,"./getUnboundedScrollPosition":209}],131:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
* @providesModule ReactFragment
*/

'use strict';

var ReactElement = require("./ReactElement");

var warning = require("./warning");

/**
 * We used to allow keyed objects to serve as a collection of ReactElements,
 * or nested sets. This allowed us a way to explicitly key a set a fragment of
 * components. This is now being replaced with an opaque data structure.
 * The upgrade path is to call React.addons.createFragment({ key: value }) to
 * create a keyed fragment. The resulting data structure is opaque, for now.
 */

if ("production" !== process.env.NODE_ENV) {
  var fragmentKey = '_reactFragment';
  var didWarnKey = '_reactDidWarn';
  var canWarnForReactFragment = false;

  try {
    // Feature test. Don't even try to issue this warning if we can't use
    // enumerable: false.

    var dummy = function() {
      return 1;
    };

    Object.defineProperty(
      {},
      fragmentKey,
      {enumerable: false, value: true}
    );

    Object.defineProperty(
      {},
      'key',
      {enumerable: true, get: dummy}
    );

    canWarnForReactFragment = true;
  } catch (x) { }

  var proxyPropertyAccessWithWarning = function(obj, key) {
    Object.defineProperty(obj, key, {
      enumerable: true,
      get: function() {
        ("production" !== process.env.NODE_ENV ? warning(
          this[didWarnKey],
          'A ReactFragment is an opaque type. Accessing any of its ' +
          'properties is deprecated. Pass it to one of the React.Children ' +
          'helpers.'
        ) : null);
        this[didWarnKey] = true;
        return this[fragmentKey][key];
      },
      set: function(value) {
        ("production" !== process.env.NODE_ENV ? warning(
          this[didWarnKey],
          'A ReactFragment is an immutable opaque type. Mutating its ' +
          'properties is deprecated.'
        ) : null);
        this[didWarnKey] = true;
        this[fragmentKey][key] = value;
      }
    });
  };

  var issuedWarnings = {};

  var didWarnForFragment = function(fragment) {
    // We use the keys and the type of the value as a heuristic to dedupe the
    // warning to avoid spamming too much.
    var fragmentCacheKey = '';
    for (var key in fragment) {
      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';
    }
    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];
    issuedWarnings[fragmentCacheKey] = true;
    return alreadyWarnedOnce;
  };
}

var ReactFragment = {
  // Wrap a keyed object in an opaque proxy that warns you if you access any
  // of its properties.
  create: function(object) {
    if ("production" !== process.env.NODE_ENV) {
      if (typeof object !== 'object' || !object || Array.isArray(object)) {
        ("production" !== process.env.NODE_ENV ? warning(
          false,
          'React.addons.createFragment only accepts a single object.',
          object
        ) : null);
        return object;
      }
      if (ReactElement.isValidElement(object)) {
        ("production" !== process.env.NODE_ENV ? warning(
          false,
          'React.addons.createFragment does not accept a ReactElement ' +
          'without a wrapper object.'
        ) : null);
        return object;
      }
      if (canWarnForReactFragment) {
        var proxy = {};
        Object.defineProperty(proxy, fragmentKey, {
          enumerable: false,
          value: object
        });
        Object.defineProperty(proxy, didWarnKey, {
          writable: true,
          enumerable: false,
          value: false
        });
        for (var key in object) {
          proxyPropertyAccessWithWarning(proxy, key);
        }
        Object.preventExtensions(proxy);
        return proxy;
      }
    }
    return object;
  },
  // Extract the original keyed object from the fragment opaque type. Warn if
  // a plain object is passed here.
  extract: function(fragment) {
    if ("production" !== process.env.NODE_ENV) {
      if (canWarnForReactFragment) {
        if (!fragment[fragmentKey]) {
          ("production" !== process.env.NODE_ENV ? warning(
            didWarnForFragment(fragment),
            'Any use of a keyed object should be wrapped in ' +
            'React.addons.createFragment(object) before being passed as a ' +
            'child.'
          ) : null);
          return fragment;
        }
        return fragment[fragmentKey];
      }
    }
    return fragment;
  },
  // Check if this is a fragment and if so, extract the keyed object. If it
  // is a fragment-like object, warn that it should be wrapped. Ignore if we
  // can't determine what kind of object this is.
  extractIfFragment: function(fragment) {
    if ("production" !== process.env.NODE_ENV) {
      if (canWarnForReactFragment) {
        // If it is the opaque type, return the keyed object.
        if (fragment[fragmentKey]) {
          return fragment[fragmentKey];
        }
        // Otherwise, check each property if it has an element, if it does
        // it is probably meant as a fragment, so we can warn early. Defer,
        // the warning to extract.
        for (var key in fragment) {
          if (fragment.hasOwnProperty(key) &&
              ReactElement.isValidElement(fragment[key])) {
            // This looks like a fragment object, we should provide an
            // early warning.
            return ReactFragment.extract(fragment);
          }
        }
      }
    }
    return fragment;
  }
};

module.exports = ReactFragment;

}).call(this,require('_process'))
},{"./ReactElement":125,"./warning":234,"_process":417}],132:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

'use strict';

var DOMProperty = require("./DOMProperty");
var EventPluginHub = require("./EventPluginHub");
var ReactComponentEnvironment = require("./ReactComponentEnvironment");
var ReactClass = require("./ReactClass");
var ReactEmptyComponent = require("./ReactEmptyComponent");
var ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter");
var ReactNativeComponent = require("./ReactNativeComponent");
var ReactDOMComponent = require("./ReactDOMComponent");
var ReactPerf = require("./ReactPerf");
var ReactRootIndex = require("./ReactRootIndex");
var ReactUpdates = require("./ReactUpdates");

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  Class: ReactClass.injection,
  DOMComponent: ReactDOMComponent.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  NativeComponent: ReactNativeComponent.injection,
  Perf: ReactPerf.injection,
  RootIndex: ReactRootIndex.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

},{"./DOMProperty":73,"./EventPluginHub":80,"./ReactBrowserEventEmitter":95,"./ReactClass":100,"./ReactComponentEnvironment":103,"./ReactDOMComponent":110,"./ReactEmptyComponent":127,"./ReactNativeComponent":142,"./ReactPerf":144,"./ReactRootIndex":153,"./ReactUpdates":162}],133:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

'use strict';

var ReactDOMSelection = require("./ReactDOMSelection");

var containsNode = require("./containsNode");
var focusNode = require("./focusNode");
var getActiveElement = require("./getActiveElement");

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function(elem) {
    return elem && (
      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||
      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')
    );
  },

  getSelectionInformation: function() {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange:
          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
          ReactInputSelection.getSelection(focusedElem) :
          null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function(priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem &&
        isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(
          priorFocusedElem,
          priorSelectionRange
        );
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function(input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName === 'INPUT') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || {start: 0, end: 0};
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function(input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (typeof end === 'undefined') {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName === 'INPUT') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

},{"./ReactDOMSelection":118,"./containsNode":186,"./focusNode":197,"./getActiveElement":199}],134:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceHandles
 * @typechecks static-only
 */

'use strict';

var ReactRootIndex = require("./ReactRootIndex");

var invariant = require("./invariant");

var SEPARATOR = '.';
var SEPARATOR_LENGTH = SEPARATOR.length;

/**
 * Maximum depth of traversals before we consider the possibility of a bad ID.
 */
var MAX_TREE_DEPTH = 100;

/**
 * Creates a DOM ID prefix to use when mounting React components.
 *
 * @param {number} index A unique integer
 * @return {string} React root ID.
 * @internal
 */
function getReactRootIDString(index) {
  return SEPARATOR + index.toString(36);
}

/**
 * Checks if a character in the supplied ID is a separator or the end.
 *
 * @param {string} id A React DOM ID.
 * @param {number} index Index of the character to check.
 * @return {boolean} True if the character is a separator or end of the ID.
 * @private
 */
function isBoundary(id, index) {
  return id.charAt(index) === SEPARATOR || index === id.length;
}

/**
 * Checks if the supplied string is a valid React DOM ID.
 *
 * @param {string} id A React DOM ID, maybe.
 * @return {boolean} True if the string is a valid React DOM ID.
 * @private
 */
function isValidID(id) {
  return id === '' || (
    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
  );
}

/**
 * Checks if the first ID is an ancestor of or equal to the second ID.
 *
 * @param {string} ancestorID
 * @param {string} descendantID
 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
 * @internal
 */
function isAncestorIDOf(ancestorID, descendantID) {
  return (
    descendantID.indexOf(ancestorID) === 0 &&
    isBoundary(descendantID, ancestorID.length)
  );
}

/**
 * Gets the parent ID of the supplied React DOM ID, `id`.
 *
 * @param {string} id ID of a component.
 * @return {string} ID of the parent, or an empty string.
 * @private
 */
function getParentID(id) {
  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
}

/**
 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
 * supplied `destinationID`. If they are equal, the ID is returned.
 *
 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
 * @param {string} destinationID ID of the destination node.
 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
 * @private
 */
function getNextDescendantID(ancestorID, destinationID) {
  ("production" !== process.env.NODE_ENV ? invariant(
    isValidID(ancestorID) && isValidID(destinationID),
    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
    ancestorID,
    destinationID
  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
  ("production" !== process.env.NODE_ENV ? invariant(
    isAncestorIDOf(ancestorID, destinationID),
    'getNextDescendantID(...): React has made an invalid assumption about ' +
    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
    ancestorID,
    destinationID
  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
  if (ancestorID === destinationID) {
    return ancestorID;
  }
  // Skip over the ancestor and the immediate separator. Traverse until we hit
  // another separator or we reach the end of `destinationID`.
  var start = ancestorID.length + SEPARATOR_LENGTH;
  var i;
  for (i = start; i < destinationID.length; i++) {
    if (isBoundary(destinationID, i)) {
      break;
    }
  }
  return destinationID.substr(0, i);
}

/**
 * Gets the nearest common ancestor ID of two IDs.
 *
 * Using this ID scheme, the nearest common ancestor ID is the longest common
 * prefix of the two IDs that immediately preceded a "marker" in both strings.
 *
 * @param {string} oneID
 * @param {string} twoID
 * @return {string} Nearest common ancestor ID, or the empty string if none.
 * @private
 */
function getFirstCommonAncestorID(oneID, twoID) {
  var minLength = Math.min(oneID.length, twoID.length);
  if (minLength === 0) {
    return '';
  }
  var lastCommonMarkerIndex = 0;
  // Use `<=` to traverse until the "EOL" of the shorter string.
  for (var i = 0; i <= minLength; i++) {
    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
      lastCommonMarkerIndex = i;
    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
      break;
    }
  }
  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
  ("production" !== process.env.NODE_ENV ? invariant(
    isValidID(longestCommonID),
    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
    oneID,
    twoID,
    longestCommonID
  ) : invariant(isValidID(longestCommonID)));
  return longestCommonID;
}

/**
 * Traverses the parent path between two IDs (either up or down). The IDs must
 * not be the same, and there must exist a parent path between them. If the
 * callback returns `false`, traversal is stopped.
 *
 * @param {?string} start ID at which to start traversal.
 * @param {?string} stop ID at which to end traversal.
 * @param {function} cb Callback to invoke each ID with.
 * @param {?boolean} skipFirst Whether or not to skip the first node.
 * @param {?boolean} skipLast Whether or not to skip the last node.
 * @private
 */
function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
  start = start || '';
  stop = stop || '';
  ("production" !== process.env.NODE_ENV ? invariant(
    start !== stop,
    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
    start
  ) : invariant(start !== stop));
  var traverseUp = isAncestorIDOf(stop, start);
  ("production" !== process.env.NODE_ENV ? invariant(
    traverseUp || isAncestorIDOf(start, stop),
    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
    'not have a parent path.',
    start,
    stop
  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
  // Traverse from `start` to `stop` one depth at a time.
  var depth = 0;
  var traverse = traverseUp ? getParentID : getNextDescendantID;
  for (var id = start; /* until break */; id = traverse(id, stop)) {
    var ret;
    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
      ret = cb(id, traverseUp, arg);
    }
    if (ret === false || id === stop) {
      // Only break //after// visiting `stop`.
      break;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      depth++ < MAX_TREE_DEPTH,
      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
      start, stop
    ) : invariant(depth++ < MAX_TREE_DEPTH));
  }
}

/**
 * Manages the IDs assigned to DOM representations of React components. This
 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
 * order to simulate events).
 *
 * @internal
 */
var ReactInstanceHandles = {

  /**
   * Constructs a React root ID
   * @return {string} A React root ID.
   */
  createReactRootID: function() {
    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
  },

  /**
   * Constructs a React ID by joining a root ID with a name.
   *
   * @param {string} rootID Root ID of a parent component.
   * @param {string} name A component's name (as flattened children).
   * @return {string} A React ID.
   * @internal
   */
  createReactID: function(rootID, name) {
    return rootID + name;
  },

  /**
   * Gets the DOM ID of the React component that is the root of the tree that
   * contains the React component with the supplied DOM ID.
   *
   * @param {string} id DOM ID of a React component.
   * @return {?string} DOM ID of the React component that is the root.
   * @internal
   */
  getReactRootIDFromNodeID: function(id) {
    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
      var index = id.indexOf(SEPARATOR, 1);
      return index > -1 ? id.substr(0, index) : id;
    }
    return null;
  },

  /**
   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
   * should would receive a `mouseEnter` or `mouseLeave` event.
   *
   * NOTE: Does not invoke the callback on the nearest common ancestor because
   * nothing "entered" or "left" that element.
   *
   * @param {string} leaveID ID being left.
   * @param {string} enterID ID being entered.
   * @param {function} cb Callback to invoke on each entered/left ID.
   * @param {*} upArg Argument to invoke the callback with on left IDs.
   * @param {*} downArg Argument to invoke the callback with on entered IDs.
   * @internal
   */
  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
    if (ancestorID !== leaveID) {
      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
    }
    if (ancestorID !== enterID) {
      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
    }
  },

  /**
   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseTwoPhase: function(targetID, cb, arg) {
    if (targetID) {
      traverseParentPath('', targetID, cb, arg, true, false);
      traverseParentPath(targetID, '', cb, arg, false, true);
    }
  },

  /**
   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
   * example, passing `.0.$row-0.1` would result in `cb` getting called
   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseAncestors: function(targetID, cb, arg) {
    traverseParentPath('', targetID, cb, arg, true, false);
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _getFirstCommonAncestorID: getFirstCommonAncestorID,

  /**
   * Exposed for unit testing.
   * @private
   */
  _getNextDescendantID: getNextDescendantID,

  isAncestorIDOf: isAncestorIDOf,

  SEPARATOR: SEPARATOR

};

module.exports = ReactInstanceHandles;

}).call(this,require('_process'))
},{"./ReactRootIndex":153,"./invariant":213,"_process":417}],135:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceMap
 */

'use strict';

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
var ReactInstanceMap = {

  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function(key) {
    key._reactInternalInstance = undefined;
  },

  get: function(key) {
    return key._reactInternalInstance;
  },

  has: function(key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function(key, value) {
    key._reactInternalInstance = value;
  }

};

module.exports = ReactInstanceMap;

},{}],136:[function(require,module,exports){
/**
 * Copyright 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactLifeCycle
 */

'use strict';

/**
 * This module manages the bookkeeping when a component is in the process
 * of being mounted or being unmounted. This is used as a way to enforce
 * invariants (or warnings) when it is not recommended to call
 * setState/forceUpdate.
 *
 * currentlyMountingInstance: During the construction phase, it is not possible
 * to trigger an update since the instance is not fully mounted yet. However, we
 * currently allow this as a convenience for mutating the initial state.
 *
 * currentlyUnmountingInstance: During the unmounting phase, the instance is
 * still mounted and can therefore schedule an update. However, this is not
 * recommended and probably an error since it's about to be unmounted.
 * Therefore we still want to trigger in an error for that case.
 */

var ReactLifeCycle = {
  currentlyMountingInstance: null,
  currentlyUnmountingInstance: null
};

module.exports = ReactLifeCycle;

},{}],137:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactLink
 * @typechecks static-only
 */

'use strict';

/**
 * ReactLink encapsulates a common pattern in which a component wants to modify
 * a prop received from its parent. ReactLink allows the parent to pass down a
 * value coupled with a callback that, when invoked, expresses an intent to
 * modify that value. For example:
 *
 * React.createClass({
 *   getInitialState: function() {
 *     return {value: ''};
 *   },
 *   render: function() {
 *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);
 *     return <input valueLink={valueLink} />;
 *   },
 *   this._handleValueChange: function(newValue) {
 *     this.setState({value: newValue});
 *   }
 * });
 *
 * We have provided some sugary mixins to make the creation and
 * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.
 */

var React = require("./React");

/**
 * @param {*} value current value of the link
 * @param {function} requestChange callback to request a change
 */
function ReactLink(value, requestChange) {
  this.value = value;
  this.requestChange = requestChange;
}

/**
 * Creates a PropType that enforces the ReactLink API and optionally checks the
 * type of the value being passed inside the link. Example:
 *
 * MyComponent.propTypes = {
 *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)
 * }
 */
function createLinkTypeChecker(linkType) {
  var shapes = {
    value: typeof linkType === 'undefined' ?
      React.PropTypes.any.isRequired :
      linkType.isRequired,
    requestChange: React.PropTypes.func.isRequired
  };
  return React.PropTypes.shape(shapes);
}

ReactLink.PropTypes = {
  link: createLinkTypeChecker
};

module.exports = ReactLink;

},{"./React":93}],138:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

'use strict';

var adler32 = require("./adler32");

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function(markup) {
    var checksum = adler32(markup);
    return markup.replace(
      '>',
      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
    );
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function(markup, element) {
    var existingChecksum = element.getAttribute(
      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
    );
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

},{"./adler32":182}],139:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

'use strict';

var DOMProperty = require("./DOMProperty");
var ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactElement = require("./ReactElement");
var ReactElementValidator = require("./ReactElementValidator");
var ReactEmptyComponent = require("./ReactEmptyComponent");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactInstanceMap = require("./ReactInstanceMap");
var ReactMarkupChecksum = require("./ReactMarkupChecksum");
var ReactPerf = require("./ReactPerf");
var ReactReconciler = require("./ReactReconciler");
var ReactUpdateQueue = require("./ReactUpdateQueue");
var ReactUpdates = require("./ReactUpdates");

var emptyObject = require("./emptyObject");
var containsNode = require("./containsNode");
var getReactRootElementInContainer = require("./getReactRootElementInContainer");
var instantiateReactComponent = require("./instantiateReactComponent");
var invariant = require("./invariant");
var setInnerHTML = require("./setInnerHTML");
var shouldUpdateReactComponent = require("./shouldUpdateReactComponent");
var warning = require("./warning");

var SEPARATOR = ReactInstanceHandles.SEPARATOR;

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache = {};

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;

/** Mapping from reactRootID to React component instance. */
var instancesByReactRootID = {};

/** Mapping from reactRootID to `container` nodes. */
var containersByReactRootID = {};

if ("production" !== process.env.NODE_ENV) {
  /** __DEV__-only mapping from reactRootID to root elements. */
  var rootElementsByReactRootID = {};
}

// Used to store breadth-first search state in findComponentRoot.
var findComponentRootReusableArray = [];

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement} container DOM element that may contain a React component.
 * @return {?string} A "reactRoot" ID, if a React component is rendered.
 */
function getReactRootID(container) {
  var rootElement = getReactRootElementInContainer(container);
  return rootElement && ReactMount.getID(rootElement);
}

/**
 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
 * element can return its control whose name or ID equals ATTR_NAME. All
 * DOM nodes support `getAttributeNode` but this can also get called on
 * other objects so just return '' if we're given something other than a
 * DOM node (such as window).
 *
 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
 * @return {string} ID of the supplied `domNode`.
 */
function getID(node) {
  var id = internalGetID(node);
  if (id) {
    if (nodeCache.hasOwnProperty(id)) {
      var cached = nodeCache[id];
      if (cached !== node) {
        ("production" !== process.env.NODE_ENV ? invariant(
          !isValid(cached, id),
          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
          ATTR_NAME, id
        ) : invariant(!isValid(cached, id)));

        nodeCache[id] = node;
      }
    } else {
      nodeCache[id] = node;
    }
  }

  return id;
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Sets the React-specific ID of the given node.
 *
 * @param {DOMElement} node The DOM node whose ID will be set.
 * @param {string} id The value of the ID attribute.
 */
function setID(node, id) {
  var oldID = internalGetID(node);
  if (oldID !== id) {
    delete nodeCache[oldID];
  }
  node.setAttribute(ATTR_NAME, id);
  nodeCache[id] = node;
}

/**
 * Finds the node with the supplied React-generated DOM ID.
 *
 * @param {string} id A React-generated DOM ID.
 * @return {DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNode(id) {
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * Finds the node with the supplied public React instance.
 *
 * @param {*} instance A public React instance.
 * @return {?DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNodeFromInstance(instance) {
  var id = ReactInstanceMap.get(instance)._rootNodeID;
  if (ReactEmptyComponent.isNullComponentID(id)) {
    return null;
  }
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * A node is "valid" if it is contained by a currently mounted container.
 *
 * This means that the node does not have to be contained by a document in
 * order to be considered valid.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @param {string} id The expected ID of the node.
 * @return {boolean} Whether the node is contained by a mounted container.
 */
function isValid(node, id) {
  if (node) {
    ("production" !== process.env.NODE_ENV ? invariant(
      internalGetID(node) === id,
      'ReactMount: Unexpected modification of `%s`',
      ATTR_NAME
    ) : invariant(internalGetID(node) === id));

    var container = ReactMount.findReactContainerForID(id);
    if (container && containsNode(container, node)) {
      return true;
    }
  }

  return false;
}

/**
 * Causes the cache to forget about one React-specific ID.
 *
 * @param {string} id The ID to forget.
 */
function purgeID(id) {
  delete nodeCache[id];
}

var deepestNodeSoFar = null;
function findDeepestCachedAncestorImpl(ancestorID) {
  var ancestor = nodeCache[ancestorID];
  if (ancestor && isValid(ancestor, ancestorID)) {
    deepestNodeSoFar = ancestor;
  } else {
    // This node isn't populated in the cache, so presumably none of its
    // descendants are. Break out of the loop.
    return false;
  }
}

/**
 * Return the deepest cached node whose ID is a prefix of `targetID`.
 */
function findDeepestCachedAncestor(targetID) {
  deepestNodeSoFar = null;
  ReactInstanceHandles.traverseAncestors(
    targetID,
    findDeepestCachedAncestorImpl
  );

  var foundNode = deepestNodeSoFar;
  deepestNodeSoFar = null;
  return foundNode;
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {string} rootID DOM ID of the root node.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(
    componentInstance,
    rootID,
    container,
    transaction,
    shouldReuseMarkup) {
  var markup = ReactReconciler.mountComponent(
    componentInstance, rootID, transaction, emptyObject
  );
  componentInstance._isTopLevel = true;
  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {string} rootID DOM ID of the root node.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(
    componentInstance,
    rootID,
    container,
    shouldReuseMarkup) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
  transaction.perform(
    mountComponentIntoNode,
    null,
    componentInstance,
    rootID,
    container,
    transaction,
    shouldReuseMarkup
  );
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  /** Exposed for debugging purposes **/
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function(container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function(
      prevComponent,
      nextElement,
      container,
      callback) {
    if ("production" !== process.env.NODE_ENV) {
      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
    }

    ReactMount.scrollMonitor(container, function() {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    if ("production" !== process.env.NODE_ENV) {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[getReactRootID(container)] =
        getReactRootElementInContainer(container);
    }

    return prevComponent;
  },

  /**
   * Register a component into the instance map and starts scroll value
   * monitoring
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @return {string} reactRoot ID prefix
   */
  _registerComponent: function(nextComponent, container) {
    ("production" !== process.env.NODE_ENV ? invariant(
      container && (
        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
      ),
      '_registerComponent(...): Target container is not a DOM element.'
    ) : invariant(container && (
      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
    )));

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

    var reactRootID = ReactMount.registerContainer(container);
    instancesByReactRootID[reactRootID] = nextComponent;
    return reactRootID;
  },

  /**
   * Render a new component into the DOM.
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function(
    nextElement,
    container,
    shouldReuseMarkup
  ) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    ("production" !== process.env.NODE_ENV ? warning(
      ReactCurrentOwner.current == null,
      '_renderNewRootComponent(): Render methods should be a pure function ' +
      'of props and state; triggering nested component updates from ' +
      'render is not allowed. If necessary, trigger nested updates in ' +
      'componentDidUpdate.'
    ) : null);

    var componentInstance = instantiateReactComponent(nextElement, null);
    var reactRootID = ReactMount._registerComponent(
      componentInstance,
      container
    );

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(
      batchedMountComponentIntoNode,
      componentInstance,
      reactRootID,
      container,
      shouldReuseMarkup
    );

    if ("production" !== process.env.NODE_ENV) {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[reactRootID] =
        getReactRootElementInContainer(container);
    }

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function(nextElement, container, callback) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ReactElement.isValidElement(nextElement),
      'React.render(): Invalid component element.%s',
      (
        typeof nextElement === 'string' ?
          ' Instead of passing an element string, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        typeof nextElement === 'function' ?
          ' Instead of passing a component class, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        // Check if it quacks like an element
        nextElement != null && nextElement.props !== undefined ?
          ' This may be caused by unintentionally loading two independent ' +
          'copies of React.' :
          ''
      )
    ) : invariant(ReactElement.isValidElement(nextElement)));

    var prevComponent = instancesByReactRootID[getReactRootID(container)];

    if (prevComponent) {
      var prevElement = prevComponent._currentElement;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        return ReactMount._updateRootComponent(
          prevComponent,
          nextElement,
          container,
          callback
        ).getPublicInstance();
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup =
      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

    if ("production" !== process.env.NODE_ENV) {
      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (ReactMount.isRenderedByReact(rootElementSibling)) {
            ("production" !== process.env.NODE_ENV ? warning(
              false,
              'render(): Target node has markup rendered by React, but there ' +
              'are unrelated nodes as well. This is most commonly caused by ' +
              'white-space inserted around server-rendered markup.'
            ) : null);
            break;
          }

          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

    var component = ReactMount._renderNewRootComponent(
      nextElement,
      container,
      shouldReuseMarkup
    ).getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into the supplied `container`.
   *
   * @param {function} constructor React component constructor.
   * @param {?object} props Initial props of the component instance.
   * @param {DOMElement} container DOM element to render into.
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  constructAndRenderComponent: function(constructor, props, container) {
    var element = ReactElement.createElement(constructor, props);
    return ReactMount.render(element, container);
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into a container node identified by supplied `id`.
   *
   * @param {function} componentConstructor React component constructor
   * @param {?object} props Initial props of the component instance.
   * @param {string} id ID of the DOM element to render into.
   * @return {ReactComponent} Component instance rendered in the container node.
   */
  constructAndRenderComponentByID: function(constructor, props, id) {
    var domNode = document.getElementById(id);
    ("production" !== process.env.NODE_ENV ? invariant(
      domNode,
      'Tried to get element with id of "%s" but it is not present on the page.',
      id
    ) : invariant(domNode));
    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
  },

  /**
   * Registers a container node into which React components will be rendered.
   * This also creates the "reactRoot" ID that will be assigned to the element
   * rendered within.
   *
   * @param {DOMElement} container DOM element to register as a container.
   * @return {string} The "reactRoot" ID of elements rendered within.
   */
  registerContainer: function(container) {
    var reactRootID = getReactRootID(container);
    if (reactRootID) {
      // If one exists, make sure it is a valid "reactRoot" ID.
      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
    }
    if (!reactRootID) {
      // No valid "reactRoot" ID found, create one.
      reactRootID = ReactInstanceHandles.createReactRootID();
    }
    containersByReactRootID[reactRootID] = container;
    return reactRootID;
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function(container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    ("production" !== process.env.NODE_ENV ? warning(
      ReactCurrentOwner.current == null,
      'unmountComponentAtNode(): Render methods should be a pure function of ' +
      'props and state; triggering nested component updates from render is ' +
      'not allowed. If necessary, trigger nested updates in ' +
      'componentDidUpdate.'
    ) : null);

    ("production" !== process.env.NODE_ENV ? invariant(
      container && (
        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
      ),
      'unmountComponentAtNode(...): Target container is not a DOM element.'
    ) : invariant(container && (
      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
    )));

    var reactRootID = getReactRootID(container);
    var component = instancesByReactRootID[reactRootID];
    if (!component) {
      return false;
    }
    ReactMount.unmountComponentFromNode(component, container);
    delete instancesByReactRootID[reactRootID];
    delete containersByReactRootID[reactRootID];
    if ("production" !== process.env.NODE_ENV) {
      delete rootElementsByReactRootID[reactRootID];
    }
    return true;
  },

  /**
   * Unmounts a component and removes it from the DOM.
   *
   * @param {ReactComponent} instance React component instance.
   * @param {DOMElement} container DOM element to unmount from.
   * @final
   * @internal
   * @see {ReactMount.unmountComponentAtNode}
   */
  unmountComponentFromNode: function(instance, container) {
    ReactReconciler.unmountComponent(instance);

    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }

    // http://jsperf.com/emptying-a-node
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  },

  /**
   * Finds the container DOM element that contains React component to which the
   * supplied DOM `id` belongs.
   *
   * @param {string} id The ID of an element rendered by a React component.
   * @return {?DOMElement} DOM element that contains the `id`.
   */
  findReactContainerForID: function(id) {
    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
    var container = containersByReactRootID[reactRootID];

    if ("production" !== process.env.NODE_ENV) {
      var rootElement = rootElementsByReactRootID[reactRootID];
      if (rootElement && rootElement.parentNode !== container) {
        ("production" !== process.env.NODE_ENV ? invariant(
          // Call internalGetID here because getID calls isValid which calls
          // findReactContainerForID (this function).
          internalGetID(rootElement) === reactRootID,
          'ReactMount: Root element ID differed from reactRootID.'
        ) : invariant(// Call internalGetID here because getID calls isValid which calls
        // findReactContainerForID (this function).
        internalGetID(rootElement) === reactRootID));

        var containerChild = container.firstChild;
        if (containerChild &&
            reactRootID === internalGetID(containerChild)) {
          // If the container has a new child with the same ID as the old
          // root element, then rootElementsByReactRootID[reactRootID] is
          // just stale and needs to be updated. The case that deserves a
          // warning is when the container is empty.
          rootElementsByReactRootID[reactRootID] = containerChild;
        } else {
          ("production" !== process.env.NODE_ENV ? warning(
            false,
            'ReactMount: Root element has been removed from its original ' +
            'container. New container:', rootElement.parentNode
          ) : null);
        }
      }
    }

    return container;
  },

  /**
   * Finds an element rendered by React with the supplied ID.
   *
   * @param {string} id ID of a DOM node in the React component.
   * @return {DOMElement} Root DOM node of the React component.
   */
  findReactNodeByID: function(id) {
    var reactRoot = ReactMount.findReactContainerForID(id);
    return ReactMount.findComponentRoot(reactRoot, id);
  },

  /**
   * True if the supplied `node` is rendered by React.
   *
   * @param {*} node DOM Element to check.
   * @return {boolean} True if the DOM Element appears to be rendered by React.
   * @internal
   */
  isRenderedByReact: function(node) {
    if (node.nodeType !== 1) {
      // Not a DOMElement, therefore not a React component
      return false;
    }
    var id = ReactMount.getID(node);
    return id ? id.charAt(0) === SEPARATOR : false;
  },

  /**
   * Traverses up the ancestors of the supplied node to find a node that is a
   * DOM representation of a React component.
   *
   * @param {*} node
   * @return {?DOMEventTarget}
   * @internal
   */
  getFirstReactDOM: function(node) {
    var current = node;
    while (current && current.parentNode !== current) {
      if (ReactMount.isRenderedByReact(current)) {
        return current;
      }
      current = current.parentNode;
    }
    return null;
  },

  /**
   * Finds a node with the supplied `targetID` inside of the supplied
   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
   * quickly.
   *
   * @param {DOMEventTarget} ancestorNode Search from this root.
   * @pararm {string} targetID ID of the DOM representation of the component.
   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
   * @internal
   */
  findComponentRoot: function(ancestorNode, targetID) {
    var firstChildren = findComponentRootReusableArray;
    var childIndex = 0;

    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

    firstChildren[0] = deepestAncestor.firstChild;
    firstChildren.length = 1;

    while (childIndex < firstChildren.length) {
      var child = firstChildren[childIndex++];
      var targetChild;

      while (child) {
        var childID = ReactMount.getID(child);
        if (childID) {
          // Even if we find the node we're looking for, we finish looping
          // through its siblings to ensure they're cached so that we don't have
          // to revisit this node again. Otherwise, we make n^2 calls to getID
          // when visiting the many children of a single node in order.

          if (targetID === childID) {
            targetChild = child;
          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
            // If we find a child whose ID is an ancestor of the given ID,
            // then we can be sure that we only want to search the subtree
            // rooted at this child, so we can throw out the rest of the
            // search state.
            firstChildren.length = childIndex = 0;
            firstChildren.push(child.firstChild);
          }

        } else {
          // If this child had no ID, then there's a chance that it was
          // injected automatically by the browser, as when a `<table>`
          // element sprouts an extra `<tbody>` child as a side effect of
          // `.innerHTML` parsing. Optimistically continue down this
          // branch, but not before examining the other siblings.
          firstChildren.push(child.firstChild);
        }

        child = child.nextSibling;
      }

      if (targetChild) {
        // Emptying firstChildren/findComponentRootReusableArray is
        // not necessary for correctness, but it helps the GC reclaim
        // any nodes that were left at the end of the search.
        firstChildren.length = 0;

        return targetChild;
      }
    }

    firstChildren.length = 0;

    ("production" !== process.env.NODE_ENV ? invariant(
      false,
      'findComponentRoot(..., %s): Unable to find element. This probably ' +
      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
      'parent. ' +
      'Try inspecting the child nodes of the element with React ID `%s`.',
      targetID,
      ReactMount.getID(ancestorNode)
    ) : invariant(false));
  },

  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {
    ("production" !== process.env.NODE_ENV ? invariant(
      container && (
        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
      ),
      'mountComponentIntoNode(...): Target container is not valid.'
    ) : invariant(container && (
      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
    )));

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        return;
      } else {
        var checksum = rootElement.getAttribute(
          ReactMarkupChecksum.CHECKSUM_ATTR_NAME
        );
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(
          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
          checksum
        );

        var diffIndex = firstDifferenceIndex(markup, rootMarkup);
        var difference = ' (client) ' +
          markup.substring(diffIndex - 20, diffIndex + 20) +
          '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        ("production" !== process.env.NODE_ENV ? invariant(
          container.nodeType !== DOC_NODE_TYPE,
          'You\'re trying to render a component to the document using ' +
          'server rendering but the checksum was invalid. This usually ' +
          'means you rendered a different component type or props on ' +
          'the client from the one on the server, or your render() ' +
          'methods are impure. React cannot handle this case due to ' +
          'cross-browser quirks by rendering at the document root. You ' +
          'should look for environment dependent code in your components ' +
          'and ensure the props are the same client and server side:\n%s',
          difference
        ) : invariant(container.nodeType !== DOC_NODE_TYPE));

        if ("production" !== process.env.NODE_ENV) {
          ("production" !== process.env.NODE_ENV ? warning(
            false,
            'React attempted to reuse markup in a container but the ' +
            'checksum was invalid. This generally means that you are ' +
            'using server rendering and the markup generated on the ' +
            'server was not what the client was expecting. React injected ' +
            'new markup to compensate which works but you have lost many ' +
            'of the benefits of server rendering. Instead, figure out ' +
            'why the markup being generated is different on the client ' +
            'or server:\n%s',
            difference
          ) : null);
        }
      }
    }

    ("production" !== process.env.NODE_ENV ? invariant(
      container.nodeType !== DOC_NODE_TYPE,
      'You\'re trying to render a component to the document but ' +
        'you didn\'t use server rendering. We can\'t do this ' +
        'without using server rendering due to cross-browser quirks. ' +
        'See React.renderToString() for server rendering.'
    ) : invariant(container.nodeType !== DOC_NODE_TYPE));

    setInnerHTML(container, markup);
  },

  /**
   * React ID utilities.
   */

  getReactRootID: getReactRootID,

  getID: getID,

  setID: setID,

  getNode: getNode,

  getNodeFromInstance: getNodeFromInstance,

  purgeID: purgeID
};

ReactPerf.measureMethods(ReactMount, 'ReactMount', {
  _renderNewRootComponent: '_renderNewRootComponent',
  _mountImageIntoNode: '_mountImageIntoNode'
});

module.exports = ReactMount;

}).call(this,require('_process'))
},{"./DOMProperty":73,"./ReactBrowserEventEmitter":95,"./ReactCurrentOwner":107,"./ReactElement":125,"./ReactElementValidator":126,"./ReactEmptyComponent":127,"./ReactInstanceHandles":134,"./ReactInstanceMap":135,"./ReactMarkupChecksum":138,"./ReactPerf":144,"./ReactReconciler":151,"./ReactUpdateQueue":161,"./ReactUpdates":162,"./containsNode":186,"./emptyObject":193,"./getReactRootElementInContainer":207,"./instantiateReactComponent":212,"./invariant":213,"./setInnerHTML":227,"./shouldUpdateReactComponent":230,"./warning":234,"_process":417}],140:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 * @typechecks static-only
 */

'use strict';

var ReactComponentEnvironment = require("./ReactComponentEnvironment");
var ReactMultiChildUpdateTypes = require("./ReactMultiChildUpdateTypes");

var ReactReconciler = require("./ReactReconciler");
var ReactChildReconciler = require("./ReactChildReconciler");

/**
 * Updating children of a component may trigger recursive updates. The depth is
 * used to batch recursive updates to render markup more efficiently.
 *
 * @type {number}
 * @private
 */
var updateDepth = 0;

/**
 * Queue of update configuration objects.
 *
 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
 *
 * @type {array<object>}
 * @private
 */
var updateQueue = [];

/**
 * Queue of markup to be rendered.
 *
 * @type {array<string>}
 * @private
 */
var markupQueue = [];

/**
 * Enqueues markup to be rendered and inserted at a supplied index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function enqueueMarkup(parentID, markup, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    markupIndex: markupQueue.push(markup) - 1,
    textContent: null,
    fromIndex: null,
    toIndex: toIndex
  });
}

/**
 * Enqueues moving an existing element to another index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function enqueueMove(parentID, fromIndex, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: toIndex
  });
}

/**
 * Enqueues removing an element at an index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function enqueueRemove(parentID, fromIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: null
  });
}

/**
 * Enqueues setting the text content.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} textContent Text content to set.
 * @private
 */
function enqueueTextContent(parentID, textContent) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    markupIndex: null,
    textContent: textContent,
    fromIndex: null,
    toIndex: null
  });
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue() {
  if (updateQueue.length) {
    ReactComponentEnvironment.processChildrenUpdates(
      updateQueue,
      markupQueue
    );
    clearQueue();
  }
}

/**
 * Clears any enqueued updates.
 *
 * @private
 */
function clearQueue() {
  updateQueue.length = 0;
  markupQueue.length = 0;
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function(nestedChildren, transaction, context) {
      var children = ReactChildReconciler.instantiateChildren(
        nestedChildren, transaction, context
      );
      this._renderedChildren = children;
      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
          var rootID = this._rootNodeID + name;
          var mountImage = ReactReconciler.mountComponent(
            child,
            rootID,
            transaction,
            context
          );
          child._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function(nextContent) {
      updateDepth++;
      var errorThrown = true;
      try {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        ReactChildReconciler.unmountChildren(prevChildren);
        // TODO: The setTextContent operation should be enough
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        // Set new text content.
        this.setTextContent(nextContent);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          if (errorThrown) {
            clearQueue();
          } else {
            processQueue();
          }
        }
      }
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function(nextNestedChildren, transaction, context) {
      updateDepth++;
      var errorThrown = true;
      try {
        this._updateChildren(nextNestedChildren, transaction, context);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          if (errorThrown) {
            clearQueue();
          } else {
            processQueue();
          }
        }

      }
    },

    /**
     * Improve performance by isolating this hot code path from the try/catch
     * block in `updateChildren`.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function(nextNestedChildren, transaction, context) {
      var prevChildren = this._renderedChildren;
      var nextChildren = ReactChildReconciler.updateChildren(
        prevChildren, nextNestedChildren, transaction, context
      );
      this._renderedChildren = nextChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          // The child must be instantiated before it's mounted.
          this._mountChildByNameAtIndex(
            nextChild, name, nextIndex, transaction, context
          );
        }
        nextIndex++;
      }
      // Remove children that are no longer present.
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) &&
            !(nextChildren && nextChildren.hasOwnProperty(name))) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted.
     *
     * @internal
     */
    unmountChildren: function() {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function(child, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function(child, mountImage) {
      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    },

    /**
     * Sets this text content string.
     *
     * @param {string} textContent Text content to set.
     * @protected
     */
    setTextContent: function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildByNameAtIndex: function(
      child,
      name,
      index,
      transaction,
      context) {
      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
      var rootID = this._rootNodeID + name;
      var mountImage = ReactReconciler.mountComponent(
        child,
        rootID,
        transaction,
        context
      );
      child._mountIndex = index;
      this.createChild(child, mountImage);
    },

    /**
     * Unmounts a rendered child by name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @param {string} name Name of the child in `this._renderedChildren`.
     * @private
     */
    _unmountChildByName: function(child, name) {
      this.removeChild(child);
      child._mountIndex = null;
    }

  }

};

module.exports = ReactMultiChild;

},{"./ReactChildReconciler":98,"./ReactComponentEnvironment":103,"./ReactMultiChildUpdateTypes":141,"./ReactReconciler":151}],141:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

'use strict';

var keyMirror = require("./keyMirror");

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;

},{"./keyMirror":219}],142:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNativeComponent
 */

'use strict';

var assign = require("./Object.assign");
var invariant = require("./invariant");

var autoGenerateWrapperClass = null;
var genericComponentClass = null;
// This registry keeps track of wrapper classes around native tags
var tagToComponentClass = {};
var textComponentClass = null;

var ReactNativeComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function(componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function(componentClass) {
    textComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function(componentClasses) {
    assign(tagToComponentClass, componentClasses);
  },
  // Temporary hack since we expect DOM refs to behave like composites,
  // for this release.
  injectAutoWrapper: function(wrapperFactory) {
    autoGenerateWrapperClass = wrapperFactory;
  }
};

/**
 * Get a composite component wrapper class for a specific tag.
 *
 * @param {ReactElement} element The tag for which to get the class.
 * @return {function} The React class constructor function.
 */
function getComponentClassForElement(element) {
  if (typeof element.type === 'function') {
    return element.type;
  }
  var tag = element.type;
  var componentClass = tagToComponentClass[tag];
  if (componentClass == null) {
    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
  }
  return componentClass;
}

/**
 * Get a native internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  ("production" !== process.env.NODE_ENV ? invariant(
    genericComponentClass,
    'There is no registered component for the tag %s',
    element.type
  ) : invariant(genericComponentClass));
  return new genericComponentClass(element.type, element.props);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactNativeComponent = {
  getComponentClassForElement: getComponentClassForElement,
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactNativeComponentInjection
};

module.exports = ReactNativeComponent;

}).call(this,require('_process'))
},{"./Object.assign":91,"./invariant":213,"_process":417}],143:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

'use strict';

var invariant = require("./invariant");

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function(object) {
    return !!(
      (object &&
      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')
    );
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function(component, ref, owner) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ReactOwner.isValidOwner(owner),
      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to add a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function(component, ref, owner) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ReactOwner.isValidOwner(owner),
      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to remove a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    // Check that `component` is still the current ref because we do not want to
    // detach the ref if another component stole it.
    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }

};

module.exports = ReactOwner;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],144:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPerf
 * @typechecks static-only
 */

'use strict';

/**
 * ReactPerf is a general AOP system designed to measure performance. This
 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
 */
var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * @param {object} object
   * @param {string} objectName
   * @param {object<string>} methodNames
   */
  measureMethods: function(object, objectName, methodNames) {
    if ("production" !== process.env.NODE_ENV) {
      for (var key in methodNames) {
        if (!methodNames.hasOwnProperty(key)) {
          continue;
        }
        object[key] = ReactPerf.measure(
          objectName,
          methodNames[key],
          object[key]
        );
      }
    }
  },

  /**
   * Use this to wrap methods you want to measure. Zero overhead in production.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function(objName, fnName, func) {
    if ("production" !== process.env.NODE_ENV) {
      var measuredFunc = null;
      var wrapper = function() {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
      wrapper.displayName = objName + '_' + fnName;
      return wrapper;
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function(measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;

}).call(this,require('_process'))
},{"_process":417}],145:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTransferer
 */

'use strict';

var assign = require("./Object.assign");
var emptyFunction = require("./emptyFunction");
var joinClasses = require("./joinClasses");

/**
 * Creates a transfer strategy that will merge prop values using the supplied
 * `mergeStrategy`. If a prop was previously unset, this just sets it.
 *
 * @param {function} mergeStrategy
 * @return {function}
 */
function createTransferStrategy(mergeStrategy) {
  return function(props, key, value) {
    if (!props.hasOwnProperty(key)) {
      props[key] = value;
    } else {
      props[key] = mergeStrategy(props[key], value);
    }
  };
}

var transferStrategyMerge = createTransferStrategy(function(a, b) {
  // `merge` overrides the first object's (`props[key]` above) keys using the
  // second object's (`value`) keys. An object's style's existing `propA` would
  // get overridden. Flip the order here.
  return assign({}, b, a);
});

/**
 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
 * NOTE: if you add any more exceptions to this list you should be sure to
 * update `cloneWithProps()` accordingly.
 */
var TransferStrategies = {
  /**
   * Never transfer `children`.
   */
  children: emptyFunction,
  /**
   * Transfer the `className` prop by merging them.
   */
  className: createTransferStrategy(joinClasses),
  /**
   * Transfer the `style` prop (which is an object) by merging them.
   */
  style: transferStrategyMerge
};

/**
 * Mutates the first argument by transferring the properties from the second
 * argument.
 *
 * @param {object} props
 * @param {object} newProps
 * @return {object}
 */
function transferInto(props, newProps) {
  for (var thisKey in newProps) {
    if (!newProps.hasOwnProperty(thisKey)) {
      continue;
    }

    var transferStrategy = TransferStrategies[thisKey];

    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
      transferStrategy(props, thisKey, newProps[thisKey]);
    } else if (!props.hasOwnProperty(thisKey)) {
      props[thisKey] = newProps[thisKey];
    }
  }
  return props;
}

/**
 * ReactPropTransferer are capable of transferring props to another component
 * using a `transferPropsTo` method.
 *
 * @class ReactPropTransferer
 */
var ReactPropTransferer = {

  /**
   * Merge two props objects using TransferStrategies.
   *
   * @param {object} oldProps original props (they take precedence)
   * @param {object} newProps new props to merge in
   * @return {object} a new object containing both sets of props merged.
   */
  mergeProps: function(oldProps, newProps) {
    return transferInto(assign({}, oldProps), newProps);
  }

};

module.exports = ReactPropTransferer;

},{"./Object.assign":91,"./emptyFunction":192,"./joinClasses":218}],146:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

'use strict';

var ReactPropTypeLocationNames = {};

if ("production" !== process.env.NODE_ENV) {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

}).call(this,require('_process'))
},{"_process":417}],147:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

'use strict';

var keyMirror = require("./keyMirror");

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;

},{"./keyMirror":219}],148:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

'use strict';

var ReactElement = require("./ReactElement");
var ReactFragment = require("./ReactFragment");
var ReactPropTypeLocationNames = require("./ReactPropTypeLocationNames");

var emptyFunction = require("./emptyFunction");

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var elementTypeChecker = createElementTypeChecker();
var nodeTypeChecker = createNodeChecker();

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: elementTypeChecker,
  instanceOf: createInstanceTypeChecker,
  node: nodeTypeChecker,
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker
};

function createChainableTypeChecker(validate) {
  function checkType(isRequired, props, propName, componentName, location) {
    componentName = componentName || ANONYMOUS;
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error(
          ("Required " + locationName + " `" + propName + "` was not specified in ") +
          ("`" + componentName + "`.")
        );
      }
      return null;
    } else {
      return validate(props, propName, componentName, location);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns(null));
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
      );
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location);
      if (error instanceof Error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location) {
    if (!ReactElement.isValidElement(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactElement.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (propValue === expectedValues[i]) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
    );
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
      );
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location);
        if (error instanceof Error) {
          return error;
        }
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  function validate(props, propName, componentName, location) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location) == null) {
        return null;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
      ("`" + componentName + "`.")
    );
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactNode.")
      );
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
        ("supplied to `" + componentName + "`, expected `object`.")
      );
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location);
      if (error) {
        return error;
      }
    }
    return null;
  }
  return createChainableTypeChecker(validate);
}

function isNode(propValue) {
  switch (typeof propValue) {
    case 'number':
    case 'string':
    case 'undefined':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (propValue === null || ReactElement.isValidElement(propValue)) {
        return true;
      }
      propValue = ReactFragment.extractIfFragment(propValue);
      for (var k in propValue) {
        if (!isNode(propValue[k])) {
          return false;
        }
      }
      return true;
    default:
      return false;
  }
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

module.exports = ReactPropTypes;

},{"./ReactElement":125,"./ReactFragment":131,"./ReactPropTypeLocationNames":146,"./emptyFunction":192}],149:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPutListenerQueue
 */

'use strict';

var PooledClass = require("./PooledClass");
var ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter");

var assign = require("./Object.assign");

function ReactPutListenerQueue() {
  this.listenersToPut = [];
}

assign(ReactPutListenerQueue.prototype, {
  enqueuePutListener: function(rootNodeID, propKey, propValue) {
    this.listenersToPut.push({
      rootNodeID: rootNodeID,
      propKey: propKey,
      propValue: propValue
    });
  },

  putListeners: function() {
    for (var i = 0; i < this.listenersToPut.length; i++) {
      var listenerToPut = this.listenersToPut[i];
      ReactBrowserEventEmitter.putListener(
        listenerToPut.rootNodeID,
        listenerToPut.propKey,
        listenerToPut.propValue
      );
    }
  },

  reset: function() {
    this.listenersToPut.length = 0;
  },

  destructor: function() {
    this.reset();
  }
});

PooledClass.addPoolingTo(ReactPutListenerQueue);

module.exports = ReactPutListenerQueue;

},{"./Object.assign":91,"./PooledClass":92,"./ReactBrowserEventEmitter":95}],150:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 * @typechecks static-only
 */

'use strict';

var CallbackQueue = require("./CallbackQueue");
var PooledClass = require("./PooledClass");
var ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter");
var ReactInputSelection = require("./ReactInputSelection");
var ReactPutListenerQueue = require("./ReactPutListenerQueue");
var Transaction = require("./Transaction");

var assign = require("./Object.assign");

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function() {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
   *   restores the previous value.
   */
  close: function(previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function() {
    this.reactMountReady.notifyAll();
  }
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: function() {
    this.putListenerQueue.putListeners();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  SELECTION_RESTORATION,
  EVENT_SUPPRESSION,
  ON_DOM_READY_QUEUEING
];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction() {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap proceedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

},{"./CallbackQueue":69,"./Object.assign":91,"./PooledClass":92,"./ReactBrowserEventEmitter":95,"./ReactInputSelection":133,"./ReactPutListenerQueue":149,"./Transaction":179}],151:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconciler
 */

'use strict';

var ReactRef = require("./ReactRef");
var ReactElementValidator = require("./ReactElementValidator");

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function(internalInstance, rootID, transaction, context) {
    var markup = internalInstance.mountComponent(rootID, transaction, context);
    if ("production" !== process.env.NODE_ENV) {
      ReactElementValidator.checkAndWarnForMutatedProps(
        internalInstance._currentElement
      );
    }
    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    return markup;
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function(internalInstance) {
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent();
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function(
    internalInstance, nextElement, transaction, context
  ) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && nextElement._owner != null) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.
      return;
    }

    if ("production" !== process.env.NODE_ENV) {
      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
    }

    var refsChanged = ReactRef.shouldUpdateRefs(
      prevElement,
      nextElement
    );

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function(
    internalInstance,
    transaction
  ) {
    internalInstance.performUpdateIfNecessary(transaction);
  }

};

module.exports = ReactReconciler;

}).call(this,require('_process'))
},{"./ReactElementValidator":126,"./ReactRef":152,"_process":417}],152:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRef
 */

'use strict';

var ReactOwner = require("./ReactOwner");

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function(instance, element) {
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  return (
    nextElement._owner !== prevElement._owner ||
    nextElement.ref !== prevElement.ref
  );
};

ReactRef.detachRefs = function(instance, element) {
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

},{"./ReactOwner":143}],153:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRootIndex
 * @typechecks
 */

'use strict';

var ReactRootIndexInjection = {
  /**
   * @param {function} _createReactRootIndex
   */
  injectCreateReactRootIndex: function(_createReactRootIndex) {
    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
  }
};

var ReactRootIndex = {
  createReactRootIndex: null,
  injection: ReactRootIndexInjection
};

module.exports = ReactRootIndex;

},{}],154:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 * @providesModule ReactServerRendering
 */
'use strict';

var ReactElement = require("./ReactElement");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactMarkupChecksum = require("./ReactMarkupChecksum");
var ReactServerRenderingTransaction =
  require("./ReactServerRenderingTransaction");

var emptyObject = require("./emptyObject");
var instantiateReactComponent = require("./instantiateReactComponent");
var invariant = require("./invariant");

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup
 */
function renderToString(element) {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactElement.isValidElement(element),
    'renderToString(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(false);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      var markup =
        componentInstance.mountComponent(id, transaction, emptyObject);
      return ReactMarkupChecksum.addChecksumToMarkup(markup);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup, without the extra React ID and checksum
 * (for generating static pages)
 */
function renderToStaticMarkup(element) {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactElement.isValidElement(element),
    'renderToStaticMarkup(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(true);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      return componentInstance.mountComponent(id, transaction, emptyObject);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

module.exports = {
  renderToString: renderToString,
  renderToStaticMarkup: renderToStaticMarkup
};

}).call(this,require('_process'))
},{"./ReactElement":125,"./ReactInstanceHandles":134,"./ReactMarkupChecksum":138,"./ReactServerRenderingTransaction":155,"./emptyObject":193,"./instantiateReactComponent":212,"./invariant":213,"_process":417}],155:[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerRenderingTransaction
 * @typechecks
 */

'use strict';

var PooledClass = require("./PooledClass");
var CallbackQueue = require("./CallbackQueue");
var ReactPutListenerQueue = require("./ReactPutListenerQueue");
var Transaction = require("./Transaction");

var assign = require("./Object.assign");
var emptyFunction = require("./emptyFunction");

/**
 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
 * during the performing of the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  close: emptyFunction
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: emptyFunction
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  ON_DOM_READY_QUEUEING
];

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap proceedures.
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(
  ReactServerRenderingTransaction.prototype,
  Transaction.Mixin,
  Mixin
);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

},{"./CallbackQueue":69,"./Object.assign":91,"./PooledClass":92,"./ReactPutListenerQueue":149,"./Transaction":179,"./emptyFunction":192}],156:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactStateSetters
 */

'use strict';

var ReactStateSetters = {
  /**
   * Returns a function that calls the provided function, and uses the result
   * of that to set the component's state.
   *
   * @param {ReactCompositeComponent} component
   * @param {function} funcReturningState Returned callback uses this to
   *                                      determine how to update state.
   * @return {function} callback that when invoked uses funcReturningState to
   *                    determined the object literal to setState.
   */
  createStateSetter: function(component, funcReturningState) {
    return function(a, b, c, d, e, f) {
      var partialState = funcReturningState.call(component, a, b, c, d, e, f);
      if (partialState) {
        component.setState(partialState);
      }
    };
  },

  /**
   * Returns a single-argument callback that can be used to update a single
   * key in the component's state.
   *
   * Note: this is memoized function, which makes it inexpensive to call.
   *
   * @param {ReactCompositeComponent} component
   * @param {string} key The key in the state that you should update.
   * @return {function} callback of 1 argument which calls setState() with
   *                    the provided keyName and callback argument.
   */
  createStateKeySetter: function(component, key) {
    // Memoize the setters.
    var cache = component.__keySetters || (component.__keySetters = {});
    return cache[key] || (cache[key] = createStateKeySetter(component, key));
  }
};

function createStateKeySetter(component, key) {
  // Partial state is allocated outside of the function closure so it can be
  // reused with every call, avoiding memory allocation when this function
  // is called.
  var partialState = {};
  return function stateKeySetter(value) {
    partialState[key] = value;
    component.setState(partialState);
  };
}

ReactStateSetters.Mixin = {
  /**
   * Returns a function that calls the provided function, and uses the result
   * of that to set the component's state.
   *
   * For example, these statements are equivalent:
   *
   *   this.setState({x: 1});
   *   this.createStateSetter(function(xValue) {
   *     return {x: xValue};
   *   })(1);
   *
   * @param {function} funcReturningState Returned callback uses this to
   *                                      determine how to update state.
   * @return {function} callback that when invoked uses funcReturningState to
   *                    determined the object literal to setState.
   */
  createStateSetter: function(funcReturningState) {
    return ReactStateSetters.createStateSetter(this, funcReturningState);
  },

  /**
   * Returns a single-argument callback that can be used to update a single
   * key in the component's state.
   *
   * For example, these statements are equivalent:
   *
   *   this.setState({x: 1});
   *   this.createStateKeySetter('x')(1);
   *
   * Note: this is memoized function, which makes it inexpensive to call.
   *
   * @param {string} key The key in the state that you should update.
   * @return {function} callback of 1 argument which calls setState() with
   *                    the provided keyName and callback argument.
   */
  createStateKeySetter: function(key) {
    return ReactStateSetters.createStateKeySetter(this, key);
  }
};

module.exports = ReactStateSetters;

},{}],157:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactTestUtils
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPluginHub = require("./EventPluginHub");
var EventPropagators = require("./EventPropagators");
var React = require("./React");
var ReactElement = require("./ReactElement");
var ReactEmptyComponent = require("./ReactEmptyComponent");
var ReactBrowserEventEmitter = require("./ReactBrowserEventEmitter");
var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactInstanceHandles = require("./ReactInstanceHandles");
var ReactInstanceMap = require("./ReactInstanceMap");
var ReactMount = require("./ReactMount");
var ReactUpdates = require("./ReactUpdates");
var SyntheticEvent = require("./SyntheticEvent");

var assign = require("./Object.assign");
var emptyObject = require("./emptyObject");

var topLevelTypes = EventConstants.topLevelTypes;

function Event(suffix) {}

/**
 * @class ReactTestUtils
 */

/**
 * Todo: Support the entire DOM.scry query syntax. For now, these simple
 * utilities will suffice for testing purposes.
 * @lends ReactTestUtils
 */
var ReactTestUtils = {
  renderIntoDocument: function(instance) {
    var div = document.createElement('div');
    // None of our tests actually require attaching the container to the
    // DOM, and doing so creates a mess that we rely on test isolation to
    // clean up, so we're going to stop honoring the name of this method
    // (and probably rename it eventually) if no problems arise.
    // document.documentElement.appendChild(div);
    return React.render(instance, div);
  },

  isElement: function(element) {
    return ReactElement.isValidElement(element);
  },

  isElementOfType: function(inst, convenienceConstructor) {
    return (
      ReactElement.isValidElement(inst) &&
      inst.type === convenienceConstructor
    );
  },

  isDOMComponent: function(inst) {
    // TODO: Fix this heuristic. It's just here because composites can currently
    // pretend to be DOM components.
    return !!(inst && inst.tagName && inst.getDOMNode);
  },

  isDOMComponentElement: function(inst) {
    return !!(inst &&
              ReactElement.isValidElement(inst) &&
              !!inst.tagName);
  },

  isCompositeComponent: function(inst) {
    return typeof inst.render === 'function' &&
           typeof inst.setState === 'function';
  },

  isCompositeComponentWithType: function(inst, type) {
    return !!(ReactTestUtils.isCompositeComponent(inst) &&
             (inst.constructor === type));
  },

  isCompositeComponentElement: function(inst) {
    if (!ReactElement.isValidElement(inst)) {
      return false;
    }
    // We check the prototype of the type that will get mounted, not the
    // instance itself. This is a future proof way of duck typing.
    var prototype = inst.type.prototype;
    return (
      typeof prototype.render === 'function' &&
      typeof prototype.setState === 'function'
    );
  },

  isCompositeComponentElementWithType: function(inst, type) {
    return !!(ReactTestUtils.isCompositeComponentElement(inst) &&
             (inst.constructor === type));
  },

  getRenderedChildOfCompositeComponent: function(inst) {
    if (!ReactTestUtils.isCompositeComponent(inst)) {
      return null;
    }
    var internalInstance = ReactInstanceMap.get(inst);
    return internalInstance._renderedComponent.getPublicInstance();
  },

  findAllInRenderedTree: function(inst, test) {
    if (!inst) {
      return [];
    }
    var ret = test(inst) ? [inst] : [];
    if (ReactTestUtils.isDOMComponent(inst)) {
      var internalInstance = ReactInstanceMap.get(inst);
      var renderedChildren = internalInstance
        ._renderedComponent
        ._renderedChildren;
      var key;
      for (key in renderedChildren) {
        if (!renderedChildren.hasOwnProperty(key)) {
          continue;
        }
        if (!renderedChildren[key].getPublicInstance) {
          continue;
        }
        ret = ret.concat(
          ReactTestUtils.findAllInRenderedTree(
            renderedChildren[key].getPublicInstance(),
            test
          )
        );
      }
    } else if (ReactTestUtils.isCompositeComponent(inst)) {
      ret = ret.concat(
        ReactTestUtils.findAllInRenderedTree(
          ReactTestUtils.getRenderedChildOfCompositeComponent(inst),
          test
        )
      );
    }
    return ret;
  },

  /**
   * Finds all instance of components in the rendered tree that are DOM
   * components with the class name matching `className`.
   * @return an array of all the matches.
   */
  scryRenderedDOMComponentsWithClass: function(root, className) {
    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
      var instClassName = inst.props.className;
      return ReactTestUtils.isDOMComponent(inst) && (
        (instClassName && (' ' + instClassName + ' ').indexOf(' ' + className + ' ') !== -1)
      );
    });
  },

  /**
   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactDOMComponent} The one match.
   */
  findRenderedDOMComponentWithClass: function(root, className) {
    var all =
      ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
    if (all.length !== 1) {
      throw new Error('Did not find exactly one match ' +
        '(found: ' + all.length + ') for class:' + className
      );
    }
    return all[0];
  },


  /**
   * Finds all instance of components in the rendered tree that are DOM
   * components with the tag name matching `tagName`.
   * @return an array of all the matches.
   */
  scryRenderedDOMComponentsWithTag: function(root, tagName) {
    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
      return ReactTestUtils.isDOMComponent(inst) &&
            inst.tagName === tagName.toUpperCase();
    });
  },

  /**
   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactDOMComponent} The one match.
   */
  findRenderedDOMComponentWithTag: function(root, tagName) {
    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
    if (all.length !== 1) {
      throw new Error('Did not find exactly one match for tag:' + tagName);
    }
    return all[0];
  },


  /**
   * Finds all instances of components with type equal to `componentType`.
   * @return an array of all the matches.
   */
  scryRenderedComponentsWithType: function(root, componentType) {
    return ReactTestUtils.findAllInRenderedTree(root, function(inst) {
      return ReactTestUtils.isCompositeComponentWithType(
        inst,
        componentType
      );
    });
  },

  /**
   * Same as `scryRenderedComponentsWithType` but expects there to be one result
   * and returns that one result, or throws exception if there is any other
   * number of matches besides one.
   * @return {!ReactComponent} The one match.
   */
  findRenderedComponentWithType: function(root, componentType) {
    var all = ReactTestUtils.scryRenderedComponentsWithType(
      root,
      componentType
    );
    if (all.length !== 1) {
      throw new Error(
        'Did not find exactly one match for componentType:' + componentType
      );
    }
    return all[0];
  },

  /**
   * Pass a mocked component module to this method to augment it with
   * useful methods that allow it to be used as a dummy React component.
   * Instead of rendering as usual, the component will become a simple
   * <div> containing any provided children.
   *
   * @param {object} module the mock function object exported from a
   *                        module that defines the component to be mocked
   * @param {?string} mockTagName optional dummy root tag name to return
   *                              from render method (overrides
   *                              module.mockTagName if provided)
   * @return {object} the ReactTestUtils object (for chaining)
   */
  mockComponent: function(module, mockTagName) {
    mockTagName = mockTagName || module.mockTagName || "div";

    module.prototype.render.mockImplementation(function() {
      return React.createElement(
        mockTagName,
        null,
        this.props.children
      );
    });

    return this;
  },

  /**
   * Simulates a top level event being dispatched from a raw event that occured
   * on an `Element` node.
   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`
   * @param {!Element} node The dom to simulate an event occurring on.
   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
   */
  simulateNativeEventOnNode: function(topLevelType, node, fakeNativeEvent) {
    fakeNativeEvent.target = node;
    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(
      topLevelType,
      fakeNativeEvent
    );
  },

  /**
   * Simulates a top level event being dispatched from a raw event that occured
   * on the `ReactDOMComponent` `comp`.
   * @param topLevelType {Object} A type from `EventConstants.topLevelTypes`.
   * @param comp {!ReactDOMComponent}
   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
   */
  simulateNativeEventOnDOMComponent: function(
      topLevelType,
      comp,
      fakeNativeEvent) {
    ReactTestUtils.simulateNativeEventOnNode(
      topLevelType,
      comp.getDOMNode(),
      fakeNativeEvent
    );
  },

  nativeTouchData: function(x, y) {
    return {
      touches: [
        {pageX: x, pageY: y}
      ]
    };
  },

  createRenderer: function() {
    return new ReactShallowRenderer();
  },

  Simulate: null,
  SimulateNative: {}
};

/**
 * @class ReactShallowRenderer
 */
var ReactShallowRenderer = function() {
  this._instance = null;
};

ReactShallowRenderer.prototype.getRenderOutput = function() {
  return (
    (this._instance && this._instance._renderedComponent &&
     this._instance._renderedComponent._renderedOutput)
    || null
  );
};

var NoopInternalComponent = function(element) {
  this._renderedOutput = element;
  this._currentElement = element === null || element === false ?
    ReactEmptyComponent.emptyElement :
    element;
};

NoopInternalComponent.prototype = {

  mountComponent: function() {
  },

  receiveComponent: function(element) {
    this._renderedOutput = element;
    this._currentElement = element === null || element === false ?
      ReactEmptyComponent.emptyElement :
      element;
  },

  unmountComponent: function() {
  }

};

var ShallowComponentWrapper = function() { };
assign(
  ShallowComponentWrapper.prototype,
  ReactCompositeComponent.Mixin, {
    _instantiateReactComponent: function(element) {
      return new NoopInternalComponent(element);
    },
    _replaceNodeWithMarkupByID: function() {},
    _renderValidatedComponent:
      ReactCompositeComponent.Mixin.
        _renderValidatedComponentWithoutOwnerOrContext
  }
);

ReactShallowRenderer.prototype.render = function(element, context) {
  if (!context) {
    context = emptyObject;
  }
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
  this._render(element, transaction, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
};

ReactShallowRenderer.prototype.unmount = function() {
  if (this._instance) {
    this._instance.unmountComponent();
  }
};

ReactShallowRenderer.prototype._render = function(element, transaction, context) {
  if (!this._instance) {
    var rootID = ReactInstanceHandles.createReactRootID();
    var instance = new ShallowComponentWrapper(element.type);
    instance.construct(element);

    instance.mountComponent(rootID, transaction, context);

    this._instance = instance;
  } else {
    this._instance.receiveComponent(element, transaction, context);
  }
};

/**
 * Exports:
 *
 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
 * - ... (All keys from event plugin `eventTypes` objects)
 */
function makeSimulator(eventType) {
  return function(domComponentOrNode, eventData) {
    var node;
    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
      node = domComponentOrNode.getDOMNode();
    } else if (domComponentOrNode.tagName) {
      node = domComponentOrNode;
    }

    var fakeNativeEvent = new Event();
    fakeNativeEvent.target = node;
    // We don't use SyntheticEvent.getPooled in order to not have to worry about
    // properly destroying any properties assigned from `eventData` upon release
    var event = new SyntheticEvent(
      ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType],
      ReactMount.getID(node),
      fakeNativeEvent
    );
    assign(event, eventData);
    EventPropagators.accumulateTwoPhaseDispatches(event);

    ReactUpdates.batchedUpdates(function() {
      EventPluginHub.enqueueEvents(event);
      EventPluginHub.processEventQueue();
    });
  };
}

function buildSimulators() {
  ReactTestUtils.Simulate = {};

  var eventType;
  for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {
    /**
     * @param {!Element || ReactDOMComponent} domComponentOrNode
     * @param {?object} eventData Fake event data to use in SyntheticEvent.
     */
    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);
  }
}

// Rebuild ReactTestUtils.Simulate whenever event plugins are injected
var oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;
EventPluginHub.injection.injectEventPluginOrder = function() {
  oldInjectEventPluginOrder.apply(this, arguments);
  buildSimulators();
};
var oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;
EventPluginHub.injection.injectEventPluginsByName = function() {
  oldInjectEventPlugins.apply(this, arguments);
  buildSimulators();
};

buildSimulators();

/**
 * Exports:
 *
 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
 * - ... (All keys from `EventConstants.topLevelTypes`)
 *
 * Note: Top level event types are a subset of the entire set of handler types
 * (which include a broader set of "synthetic" events). For example, onDragDone
 * is a synthetic event. Except when testing an event plugin or React's event
 * handling code specifically, you probably want to use ReactTestUtils.Simulate
 * to dispatch synthetic events.
 */

function makeNativeSimulator(eventType) {
  return function(domComponentOrNode, nativeEventData) {
    var fakeNativeEvent = new Event(eventType);
    assign(fakeNativeEvent, nativeEventData);
    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
      ReactTestUtils.simulateNativeEventOnDOMComponent(
        eventType,
        domComponentOrNode,
        fakeNativeEvent
      );
    } else if (!!domComponentOrNode.tagName) {
      // Will allow on actual dom nodes.
      ReactTestUtils.simulateNativeEventOnNode(
        eventType,
        domComponentOrNode,
        fakeNativeEvent
      );
    }
  };
}

var eventType;
for (eventType in topLevelTypes) {
  // Event type is stored as 'topClick' - we transform that to 'click'
  var convenienceName = eventType.indexOf('top') === 0 ?
    eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
  /**
   * @param {!Element || ReactDOMComponent} domComponentOrNode
   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
   */
  ReactTestUtils.SimulateNative[convenienceName] =
    makeNativeSimulator(eventType);
}

module.exports = ReactTestUtils;

},{"./EventConstants":78,"./EventPluginHub":80,"./EventPropagators":83,"./Object.assign":91,"./React":93,"./ReactBrowserEventEmitter":95,"./ReactCompositeComponent":105,"./ReactElement":125,"./ReactEmptyComponent":127,"./ReactInstanceHandles":134,"./ReactInstanceMap":135,"./ReactMount":139,"./ReactUpdates":162,"./SyntheticEvent":171,"./emptyObject":193}],158:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 * @providesModule ReactTransitionChildMapping
 */

'use strict';

var ReactChildren = require("./ReactChildren");
var ReactFragment = require("./ReactFragment");

var ReactTransitionChildMapping = {
  /**
   * Given `this.props.children`, return an object mapping key to child. Just
   * simple syntactic sugar around ReactChildren.map().
   *
   * @param {*} children `this.props.children`
   * @return {object} Mapping of key to child
   */
  getChildMapping: function(children) {
    if (!children) {
      return children;
    }
    return ReactFragment.extract(ReactChildren.map(children, function(child) {
      return child;
    }));
  },

  /**
   * When you're adding or removing children some may be added or removed in the
   * same render pass. We want to show *both* since we want to simultaneously
   * animate elements in and out. This function takes a previous set of keys
   * and a new set of keys and merges them with its best guess of the correct
   * ordering. In the future we may expose some of the utilities in
   * ReactMultiChild to make this easy, but for now React itself does not
   * directly have this concept of the union of prevChildren and nextChildren
   * so we implement it here.
   *
   * @param {object} prev prev children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @param {object} next next children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @return {object} a key set that contains all keys in `prev` and all keys
   * in `next` in a reasonable order.
   */
  mergeChildMappings: function(prev, next) {
    prev = prev || {};
    next = next || {};

    function getValueForKey(key) {
      if (next.hasOwnProperty(key)) {
        return next[key];
      } else {
        return prev[key];
      }
    }

    // For each key of `next`, the list of keys to insert before that key in
    // the combined list
    var nextKeysPending = {};

    var pendingKeys = [];
    for (var prevKey in prev) {
      if (next.hasOwnProperty(prevKey)) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys;
          pendingKeys = [];
        }
      } else {
        pendingKeys.push(prevKey);
      }
    }

    var i;
    var childMapping = {};
    for (var nextKey in next) {
      if (nextKeysPending.hasOwnProperty(nextKey)) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
          var pendingNextKey = nextKeysPending[nextKey][i];
          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(
            pendingNextKey
          );
        }
      }
      childMapping[nextKey] = getValueForKey(nextKey);
    }

    // Finally, add the keys which didn't appear before any key in `next`
    for (i = 0; i < pendingKeys.length; i++) {
      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    }

    return childMapping;
  }
};

module.exports = ReactTransitionChildMapping;

},{"./ReactChildren":99,"./ReactFragment":131}],159:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactTransitionEvents
 */

'use strict';

var ExecutionEnvironment = require("./ExecutionEnvironment");

/**
 * EVENT_NAME_MAP is used to determine which event fired when a
 * transition/animation ends, based on the style property used to
 * define that event.
 */
var EVENT_NAME_MAP = {
  transitionend: {
    'transition': 'transitionend',
    'WebkitTransition': 'webkitTransitionEnd',
    'MozTransition': 'mozTransitionEnd',
    'OTransition': 'oTransitionEnd',
    'msTransition': 'MSTransitionEnd'
  },

  animationend: {
    'animation': 'animationend',
    'WebkitAnimation': 'webkitAnimationEnd',
    'MozAnimation': 'mozAnimationEnd',
    'OAnimation': 'oAnimationEnd',
    'msAnimation': 'MSAnimationEnd'
  }
};

var endEvents = [];

function detectEvents() {
  var testEl = document.createElement('div');
  var style = testEl.style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are useable, and if not remove them
  // from the map
  if (!('AnimationEvent' in window)) {
    delete EVENT_NAME_MAP.animationend.animation;
  }

  if (!('TransitionEvent' in window)) {
    delete EVENT_NAME_MAP.transitionend.transition;
  }

  for (var baseEventName in EVENT_NAME_MAP) {
    var baseEvents = EVENT_NAME_MAP[baseEventName];
    for (var styleName in baseEvents) {
      if (styleName in style) {
        endEvents.push(baseEvents[styleName]);
        break;
      }
    }
  }
}

if (ExecutionEnvironment.canUseDOM) {
  detectEvents();
}

// We use the raw {add|remove}EventListener() call because EventListener
// does not know how to remove event listeners and we really should
// clean up. Also, these events are not triggered in older browsers
// so we should be A-OK here.

function addEventListener(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}

function removeEventListener(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}

var ReactTransitionEvents = {
  addEndEventListener: function(node, eventListener) {
    if (endEvents.length === 0) {
      // If CSS transitions are not supported, trigger an "end animation"
      // event immediately.
      window.setTimeout(eventListener, 0);
      return;
    }
    endEvents.forEach(function(endEvent) {
      addEventListener(node, endEvent, eventListener);
    });
  },

  removeEndEventListener: function(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }
    endEvents.forEach(function(endEvent) {
      removeEventListener(node, endEvent, eventListener);
    });
  }
};

module.exports = ReactTransitionEvents;

},{"./ExecutionEnvironment":84}],160:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactTransitionGroup
 */

'use strict';

var React = require("./React");
var ReactTransitionChildMapping = require("./ReactTransitionChildMapping");

var assign = require("./Object.assign");
var cloneWithProps = require("./cloneWithProps");
var emptyFunction = require("./emptyFunction");

var ReactTransitionGroup = React.createClass({
  displayName: 'ReactTransitionGroup',

  propTypes: {
    component: React.PropTypes.any,
    childFactory: React.PropTypes.func
  },

  getDefaultProps: function() {
    return {
      component: 'span',
      childFactory: emptyFunction.thatReturnsArgument
    };
  },

  getInitialState: function() {
    return {
      children: ReactTransitionChildMapping.getChildMapping(this.props.children)
    };
  },

  componentWillMount: function() {
    this.currentlyTransitioningKeys = {};
    this.keysToEnter = [];
    this.keysToLeave = [];
  },

  componentDidMount: function() {
    var initialChildMapping = this.state.children;
    for (var key in initialChildMapping) {
      if (initialChildMapping[key]) {
        this.performAppear(key);
      }
    }
  },

  componentWillReceiveProps: function(nextProps) {
    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(
      nextProps.children
    );
    var prevChildMapping = this.state.children;

    this.setState({
      children: ReactTransitionChildMapping.mergeChildMappings(
        prevChildMapping,
        nextChildMapping
      )
    });

    var key;

    for (key in nextChildMapping) {
      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
      if (nextChildMapping[key] && !hasPrev &&
          !this.currentlyTransitioningKeys[key]) {
        this.keysToEnter.push(key);
      }
    }

    for (key in prevChildMapping) {
      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
      if (prevChildMapping[key] && !hasNext &&
          !this.currentlyTransitioningKeys[key]) {
        this.keysToLeave.push(key);
      }
    }

    // If we want to someday check for reordering, we could do it here.
  },

  componentDidUpdate: function() {
    var keysToEnter = this.keysToEnter;
    this.keysToEnter = [];
    keysToEnter.forEach(this.performEnter);

    var keysToLeave = this.keysToLeave;
    this.keysToLeave = [];
    keysToLeave.forEach(this.performLeave);
  },

  performAppear: function(key) {
    this.currentlyTransitioningKeys[key] = true;

    var component = this.refs[key];

    if (component.componentWillAppear) {
      component.componentWillAppear(
        this._handleDoneAppearing.bind(this, key)
      );
    } else {
      this._handleDoneAppearing(key);
    }
  },

  _handleDoneAppearing: function(key) {
    var component = this.refs[key];
    if (component.componentDidAppear) {
      component.componentDidAppear();
    }

    delete this.currentlyTransitioningKeys[key];

    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
      this.props.children
    );

    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
      // This was removed before it had fully appeared. Remove it.
      this.performLeave(key);
    }
  },

  performEnter: function(key) {
    this.currentlyTransitioningKeys[key] = true;

    var component = this.refs[key];

    if (component.componentWillEnter) {
      component.componentWillEnter(
        this._handleDoneEntering.bind(this, key)
      );
    } else {
      this._handleDoneEntering(key);
    }
  },

  _handleDoneEntering: function(key) {
    var component = this.refs[key];
    if (component.componentDidEnter) {
      component.componentDidEnter();
    }

    delete this.currentlyTransitioningKeys[key];

    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
      this.props.children
    );

    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
      // This was removed before it had fully entered. Remove it.
      this.performLeave(key);
    }
  },

  performLeave: function(key) {
    this.currentlyTransitioningKeys[key] = true;

    var component = this.refs[key];
    if (component.componentWillLeave) {
      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));
    } else {
      // Note that this is somewhat dangerous b/c it calls setState()
      // again, effectively mutating the component before all the work
      // is done.
      this._handleDoneLeaving(key);
    }
  },

  _handleDoneLeaving: function(key) {
    var component = this.refs[key];

    if (component.componentDidLeave) {
      component.componentDidLeave();
    }

    delete this.currentlyTransitioningKeys[key];

    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(
      this.props.children
    );

    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
      // This entered again before it fully left. Add it again.
      this.performEnter(key);
    } else {
      var newChildren = assign({}, this.state.children);
      delete newChildren[key];
      this.setState({children: newChildren});
    }
  },

  render: function() {
    // TODO: we could get rid of the need for the wrapper node
    // by cloning a single child
    var childrenToRender = [];
    for (var key in this.state.children) {
      var child = this.state.children[key];
      if (child) {
        // You may need to apply reactive updates to a child as it is leaving.
        // The normal React way to do it won't work since the child will have
        // already been removed. In case you need this behavior you can provide
        // a childFactory function to wrap every child, even the ones that are
        // leaving.
        childrenToRender.push(cloneWithProps(
          this.props.childFactory(child),
          {ref: key, key: key}
        ));
      }
    }
    return React.createElement(
      this.props.component,
      this.props,
      childrenToRender
    );
  }
});

module.exports = ReactTransitionGroup;

},{"./Object.assign":91,"./React":93,"./ReactTransitionChildMapping":158,"./cloneWithProps":185,"./emptyFunction":192}],161:[function(require,module,exports){
(function (process){
/**
 * Copyright 2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdateQueue
 */

'use strict';

var ReactLifeCycle = require("./ReactLifeCycle");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactElement = require("./ReactElement");
var ReactInstanceMap = require("./ReactInstanceMap");
var ReactUpdates = require("./ReactUpdates");

var assign = require("./Object.assign");
var invariant = require("./invariant");
var warning = require("./warning");

function enqueueUpdate(internalInstance) {
  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {
    // If we're in a componentWillMount handler, don't enqueue a rerender
    // because ReactUpdates assumes we're in a browser context (which is
    // wrong for server rendering) and we're about to do a render anyway.
    // See bug in #1740.
    ReactUpdates.enqueueUpdate(internalInstance);
  }
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactCurrentOwner.current == null,
    '%s(...): Cannot update during an existing state transition ' +
    '(such as within `render`). Render methods should be a pure function ' +
    'of props and state.',
    callerName
  ) : invariant(ReactCurrentOwner.current == null));

  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if ("production" !== process.env.NODE_ENV) {
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      ("production" !== process.env.NODE_ENV ? warning(
        !callerName,
        '%s(...): Can only update a mounted or mounting component. ' +
        'This usually means you called %s() on an unmounted ' +
        'component. This is a no-op.',
        callerName,
        callerName
      ) : null);
    }
    return null;
  }

  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {
    return null;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function(publicInstance, callback) {
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof callback === 'function',
      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
      'isn\'t callable.'
    ) : invariant(typeof callback === 'function'));
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance ||
        internalInstance === ReactLifeCycle.currentlyMountingInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function(internalInstance, callback) {
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof callback === 'function',
      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
      'isn\'t callable.'
    ) : invariant(typeof callback === 'function'));
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldUpdateComponent`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function(publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'forceUpdate'
    );

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function(publicInstance, completeState) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'replaceState'
    );

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function(publicInstance, partialState) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'setState'
    );

    if (!internalInstance) {
      return;
    }

    var queue =
      internalInstance._pendingStateQueue ||
      (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the props.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialProps Subset of the next props.
   * @internal
   */
  enqueueSetProps: function(publicInstance, partialProps) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'setProps'
    );

    if (!internalInstance) {
      return;
    }

    ("production" !== process.env.NODE_ENV ? invariant(
      internalInstance._isTopLevel,
      'setProps(...): You called `setProps` on a ' +
      'component with a parent. This is an anti-pattern since props will ' +
      'get reactively updated when rendered. Instead, change the owner\'s ' +
      '`render` method to pass the correct value as props to the component ' +
      'where it is created.'
    ) : invariant(internalInstance._isTopLevel));

    // Merge with the pending element if it exists, otherwise with existing
    // element props.
    var element = internalInstance._pendingElement ||
                  internalInstance._currentElement;
    var props = assign({}, element.props, partialProps);
    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
      element,
      props
    );

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the props.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} props New props.
   * @internal
   */
  enqueueReplaceProps: function(publicInstance, props) {
    var internalInstance = getInternalInstanceReadyForUpdate(
      publicInstance,
      'replaceProps'
    );

    if (!internalInstance) {
      return;
    }

    ("production" !== process.env.NODE_ENV ? invariant(
      internalInstance._isTopLevel,
      'replaceProps(...): You called `replaceProps` on a ' +
      'component with a parent. This is an anti-pattern since props will ' +
      'get reactively updated when rendered. Instead, change the owner\'s ' +
      '`render` method to pass the correct value as props to the component ' +
      'where it is created.'
    ) : invariant(internalInstance._isTopLevel));

    // Merge with the pending element if it exists, otherwise with existing
    // element props.
    var element = internalInstance._pendingElement ||
                  internalInstance._currentElement;
    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
      element,
      props
    );

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function(internalInstance, newElement) {
    internalInstance._pendingElement = newElement;
    enqueueUpdate(internalInstance);
  }

};

module.exports = ReactUpdateQueue;

}).call(this,require('_process'))
},{"./Object.assign":91,"./ReactCurrentOwner":107,"./ReactElement":125,"./ReactInstanceMap":135,"./ReactLifeCycle":136,"./ReactUpdates":162,"./invariant":213,"./warning":234,"_process":417}],162:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

'use strict';

var CallbackQueue = require("./CallbackQueue");
var PooledClass = require("./PooledClass");
var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactPerf = require("./ReactPerf");
var ReactReconciler = require("./ReactReconciler");
var Transaction = require("./Transaction");

var assign = require("./Object.assign");
var invariant = require("./invariant");
var warning = require("./warning");

var dirtyComponents = [];
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
    'ReactUpdates: must inject a reconcile transaction class and batching ' +
    'strategy'
  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
}

var NESTED_UPDATES = {
  initialize: function() {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function() {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function() {
    this.callbackQueue.reset();
  },
  close: function() {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction =
    ReactUpdates.ReactReconcileTransaction.getPooled();
}

assign(
  ReactUpdatesFlushTransaction.prototype,
  Transaction.Mixin, {
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function() {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function(method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(
      this,
      this.reconcileTransaction.perform,
      this.reconcileTransaction,
      method,
      scope,
      a
    );
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b, c, d);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  ("production" !== process.env.NODE_ENV ? invariant(
    len === dirtyComponents.length,
    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
    'match dirty-components array length (%s).',
    len,
    dirtyComponents.length
  ) : invariant(len === dirtyComponents.length));

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    ReactReconciler.performUpdateIfNecessary(
      component,
      transaction.reconcileTransaction
    );

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(
          callbacks[j],
          component.getPublicInstance()
        );
      }
    }
  }
}

var flushBatchedUpdates = function() {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};
flushBatchedUpdates = ReactPerf.measure(
  'ReactUpdates',
  'flushBatchedUpdates',
  flushBatchedUpdates
);

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setProps, setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)
  ("production" !== process.env.NODE_ENV ? warning(
    ReactCurrentOwner.current == null,
    'enqueueUpdate(): Render methods should be a pure function of props ' +
    'and state; triggering nested component updates from render is not ' +
    'allowed. If necessary, trigger nested updates in ' +
    'componentDidUpdate.'
  ) : null);

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  ("production" !== process.env.NODE_ENV ? invariant(
    batchingStrategy.isBatchingUpdates,
    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
    'updates are not being batched.'
  ) : invariant(batchingStrategy.isBatchingUpdates));
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function(ReconcileTransaction) {
    ("production" !== process.env.NODE_ENV ? invariant(
      ReconcileTransaction,
      'ReactUpdates: must provide a reconcile transaction class'
    ) : invariant(ReconcileTransaction));
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function(_batchingStrategy) {
    ("production" !== process.env.NODE_ENV ? invariant(
      _batchingStrategy,
      'ReactUpdates: must provide a batching strategy'
    ) : invariant(_batchingStrategy));
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof _batchingStrategy.batchedUpdates === 'function',
      'ReactUpdates: must provide a batchedUpdates() function'
    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;

}).call(this,require('_process'))
},{"./CallbackQueue":69,"./Object.assign":91,"./PooledClass":92,"./ReactCurrentOwner":107,"./ReactPerf":144,"./ReactReconciler":151,"./Transaction":179,"./invariant":213,"./warning":234,"_process":417}],163:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactWithAddons
 */

/**
 * This module exists purely in the open source project, and is meant as a way
 * to create a separate standalone build of React. This build has "addons", or
 * functionality we've built and think might be useful but doesn't have a good
 * place to live inside React core.
 */

'use strict';

var LinkedStateMixin = require("./LinkedStateMixin");
var React = require("./React");
var ReactComponentWithPureRenderMixin =
  require("./ReactComponentWithPureRenderMixin");
var ReactCSSTransitionGroup = require("./ReactCSSTransitionGroup");
var ReactFragment = require("./ReactFragment");
var ReactTransitionGroup = require("./ReactTransitionGroup");
var ReactUpdates = require("./ReactUpdates");

var cx = require("./cx");
var cloneWithProps = require("./cloneWithProps");
var update = require("./update");

React.addons = {
  CSSTransitionGroup: ReactCSSTransitionGroup,
  LinkedStateMixin: LinkedStateMixin,
  PureRenderMixin: ReactComponentWithPureRenderMixin,
  TransitionGroup: ReactTransitionGroup,

  batchedUpdates: ReactUpdates.batchedUpdates,
  classSet: cx,
  cloneWithProps: cloneWithProps,
  createFragment: ReactFragment.create,
  update: update
};

if ("production" !== process.env.NODE_ENV) {
  React.addons.Perf = require("./ReactDefaultPerf");
  React.addons.TestUtils = require("./ReactTestUtils");
}

module.exports = React;

}).call(this,require('_process'))
},{"./LinkedStateMixin":87,"./React":93,"./ReactCSSTransitionGroup":96,"./ReactComponentWithPureRenderMixin":104,"./ReactDefaultPerf":123,"./ReactFragment":131,"./ReactTestUtils":157,"./ReactTransitionGroup":160,"./ReactUpdates":162,"./cloneWithProps":185,"./cx":190,"./update":233,"_process":417}],164:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

/*jslint bitwise: true*/

'use strict';

var DOMProperty = require("./DOMProperty");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

var SVGDOMPropertyConfig = {
  Properties: {
    clipPath: MUST_USE_ATTRIBUTE,
    cx: MUST_USE_ATTRIBUTE,
    cy: MUST_USE_ATTRIBUTE,
    d: MUST_USE_ATTRIBUTE,
    dx: MUST_USE_ATTRIBUTE,
    dy: MUST_USE_ATTRIBUTE,
    fill: MUST_USE_ATTRIBUTE,
    fillOpacity: MUST_USE_ATTRIBUTE,
    fontFamily: MUST_USE_ATTRIBUTE,
    fontSize: MUST_USE_ATTRIBUTE,
    fx: MUST_USE_ATTRIBUTE,
    fy: MUST_USE_ATTRIBUTE,
    gradientTransform: MUST_USE_ATTRIBUTE,
    gradientUnits: MUST_USE_ATTRIBUTE,
    markerEnd: MUST_USE_ATTRIBUTE,
    markerMid: MUST_USE_ATTRIBUTE,
    markerStart: MUST_USE_ATTRIBUTE,
    offset: MUST_USE_ATTRIBUTE,
    opacity: MUST_USE_ATTRIBUTE,
    patternContentUnits: MUST_USE_ATTRIBUTE,
    patternUnits: MUST_USE_ATTRIBUTE,
    points: MUST_USE_ATTRIBUTE,
    preserveAspectRatio: MUST_USE_ATTRIBUTE,
    r: MUST_USE_ATTRIBUTE,
    rx: MUST_USE_ATTRIBUTE,
    ry: MUST_USE_ATTRIBUTE,
    spreadMethod: MUST_USE_ATTRIBUTE,
    stopColor: MUST_USE_ATTRIBUTE,
    stopOpacity: MUST_USE_ATTRIBUTE,
    stroke: MUST_USE_ATTRIBUTE,
    strokeDasharray: MUST_USE_ATTRIBUTE,
    strokeLinecap: MUST_USE_ATTRIBUTE,
    strokeOpacity: MUST_USE_ATTRIBUTE,
    strokeWidth: MUST_USE_ATTRIBUTE,
    textAnchor: MUST_USE_ATTRIBUTE,
    transform: MUST_USE_ATTRIBUTE,
    version: MUST_USE_ATTRIBUTE,
    viewBox: MUST_USE_ATTRIBUTE,
    x1: MUST_USE_ATTRIBUTE,
    x2: MUST_USE_ATTRIBUTE,
    x: MUST_USE_ATTRIBUTE,
    y1: MUST_USE_ATTRIBUTE,
    y2: MUST_USE_ATTRIBUTE,
    y: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    clipPath: 'clip-path',
    fillOpacity: 'fill-opacity',
    fontFamily: 'font-family',
    fontSize: 'font-size',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    patternContentUnits: 'patternContentUnits',
    patternUnits: 'patternUnits',
    preserveAspectRatio: 'preserveAspectRatio',
    spreadMethod: 'spreadMethod',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strokeDasharray: 'stroke-dasharray',
    strokeLinecap: 'stroke-linecap',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    textAnchor: 'text-anchor',
    viewBox: 'viewBox'
  }
};

module.exports = SVGDOMPropertyConfig;

},{"./DOMProperty":73}],165:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPropagators = require("./EventPropagators");
var ReactInputSelection = require("./ReactInputSelection");
var SyntheticEvent = require("./SyntheticEvent");

var getActiveElement = require("./getActiveElement");
var isTextInputElement = require("./isTextInputElement");
var keyOf = require("./keyOf");
var shallowEqual = require("./shallowEqual");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSelect: null}),
      captured: keyOf({onSelectCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topContextMenu,
      topLevelTypes.topFocus,
      topLevelTypes.topKeyDown,
      topLevelTypes.topMouseDown,
      topLevelTypes.topMouseUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

var activeElement = null;
var activeElementID = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @param {object}
 */
function getSelection(node) {
  if ('selectionStart' in node &&
      ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown ||
      activeElement == null ||
      activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(
      eventTypes.select,
      activeElementID,
      nativeEvent
    );

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(topLevelTarget) ||
            topLevelTarget.contentEditable === 'true') {
          activeElement = topLevelTarget;
          activeElementID = topLevelTargetID;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementID = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't).
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      case topLevelTypes.topSelectionChange:
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent);
    }
  }
};

module.exports = SelectEventPlugin;

},{"./EventConstants":78,"./EventPropagators":83,"./ReactInputSelection":133,"./SyntheticEvent":171,"./getActiveElement":199,"./isTextInputElement":216,"./keyOf":220,"./shallowEqual":229}],166:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ServerReactRootIndex
 * @typechecks
 */

'use strict';

/**
 * Size of the reactRoot ID space. We generate random numbers for React root
 * IDs and if there's a collision the events and DOM update system will
 * get confused. In the future we need a way to generate GUIDs but for
 * now this will work on a smaller scale.
 */
var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

var ServerReactRootIndex = {
  createReactRootIndex: function() {
    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
  }
};

module.exports = ServerReactRootIndex;

},{}],167:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

'use strict';

var EventConstants = require("./EventConstants");
var EventPluginUtils = require("./EventPluginUtils");
var EventPropagators = require("./EventPropagators");
var SyntheticClipboardEvent = require("./SyntheticClipboardEvent");
var SyntheticEvent = require("./SyntheticEvent");
var SyntheticFocusEvent = require("./SyntheticFocusEvent");
var SyntheticKeyboardEvent = require("./SyntheticKeyboardEvent");
var SyntheticMouseEvent = require("./SyntheticMouseEvent");
var SyntheticDragEvent = require("./SyntheticDragEvent");
var SyntheticTouchEvent = require("./SyntheticTouchEvent");
var SyntheticUIEvent = require("./SyntheticUIEvent");
var SyntheticWheelEvent = require("./SyntheticWheelEvent");

var getEventCharCode = require("./getEventCharCode");

var invariant = require("./invariant");
var keyOf = require("./keyOf");
var warning = require("./warning");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBlur: true}),
      captured: keyOf({onBlurCapture: true})
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({onClick: true}),
      captured: keyOf({onClickCapture: true})
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({onContextMenu: true}),
      captured: keyOf({onContextMenuCapture: true})
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCopy: true}),
      captured: keyOf({onCopyCapture: true})
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCut: true}),
      captured: keyOf({onCutCapture: true})
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDoubleClick: true}),
      captured: keyOf({onDoubleClickCapture: true})
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrag: true}),
      captured: keyOf({onDragCapture: true})
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnd: true}),
      captured: keyOf({onDragEndCapture: true})
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnter: true}),
      captured: keyOf({onDragEnterCapture: true})
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragExit: true}),
      captured: keyOf({onDragExitCapture: true})
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragLeave: true}),
      captured: keyOf({onDragLeaveCapture: true})
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragOver: true}),
      captured: keyOf({onDragOverCapture: true})
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragStart: true}),
      captured: keyOf({onDragStartCapture: true})
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrop: true}),
      captured: keyOf({onDropCapture: true})
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({onFocus: true}),
      captured: keyOf({onFocusCapture: true})
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({onInput: true}),
      captured: keyOf({onInputCapture: true})
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyDown: true}),
      captured: keyOf({onKeyDownCapture: true})
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyPress: true}),
      captured: keyOf({onKeyPressCapture: true})
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyUp: true}),
      captured: keyOf({onKeyUpCapture: true})
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({onLoad: true}),
      captured: keyOf({onLoadCapture: true})
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({onError: true}),
      captured: keyOf({onErrorCapture: true})
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseDown: true}),
      captured: keyOf({onMouseDownCapture: true})
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseMove: true}),
      captured: keyOf({onMouseMoveCapture: true})
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOut: true}),
      captured: keyOf({onMouseOutCapture: true})
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOver: true}),
      captured: keyOf({onMouseOverCapture: true})
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseUp: true}),
      captured: keyOf({onMouseUpCapture: true})
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({onPaste: true}),
      captured: keyOf({onPasteCapture: true})
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({onReset: true}),
      captured: keyOf({onResetCapture: true})
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({onScroll: true}),
      captured: keyOf({onScrollCapture: true})
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSubmit: true}),
      captured: keyOf({onSubmitCapture: true})
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchCancel: true}),
      captured: keyOf({onTouchCancelCapture: true})
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchEnd: true}),
      captured: keyOf({onTouchEndCapture: true})
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchMove: true}),
      captured: keyOf({onTouchMoveCapture: true})
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchStart: true}),
      captured: keyOf({onTouchStartCapture: true})
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onWheel: true}),
      captured: keyOf({onWheelCapture: true})
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topBlur:        eventTypes.blur,
  topClick:       eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy:        eventTypes.copy,
  topCut:         eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag:        eventTypes.drag,
  topDragEnd:     eventTypes.dragEnd,
  topDragEnter:   eventTypes.dragEnter,
  topDragExit:    eventTypes.dragExit,
  topDragLeave:   eventTypes.dragLeave,
  topDragOver:    eventTypes.dragOver,
  topDragStart:   eventTypes.dragStart,
  topDrop:        eventTypes.drop,
  topError:       eventTypes.error,
  topFocus:       eventTypes.focus,
  topInput:       eventTypes.input,
  topKeyDown:     eventTypes.keyDown,
  topKeyPress:    eventTypes.keyPress,
  topKeyUp:       eventTypes.keyUp,
  topLoad:        eventTypes.load,
  topMouseDown:   eventTypes.mouseDown,
  topMouseMove:   eventTypes.mouseMove,
  topMouseOut:    eventTypes.mouseOut,
  topMouseOver:   eventTypes.mouseOver,
  topMouseUp:     eventTypes.mouseUp,
  topPaste:       eventTypes.paste,
  topReset:       eventTypes.reset,
  topScroll:      eventTypes.scroll,
  topSubmit:      eventTypes.submit,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd:    eventTypes.touchEnd,
  topTouchMove:   eventTypes.touchMove,
  topTouchStart:  eventTypes.touchStart,
  topWheel:       eventTypes.wheel
};

for (var type in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[type].dependencies = [type];
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  /**
   * Same as the default implementation, except cancels the event when return
   * value is false. This behavior will be disabled in a future release.
   *
   * @param {object} Event to be dispatched.
   * @param {function} Application-level callback.
   * @param {string} domID DOM ID to pass to the callback.
   */
  executeDispatch: function(event, listener, domID) {
    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);

    ("production" !== process.env.NODE_ENV ? warning(
      typeof returnValue !== 'boolean',
      'Returning `false` from an event handler is deprecated and will be ' +
      'ignored in a future release. Instead, manually call ' +
      'e.stopPropagation() or e.preventDefault(), as appropriate.'
    ) : null);

    if (returnValue === false) {
      event.stopPropagation();
      event.preventDefault();
    }
  },

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topInput:
      case topLevelTypes.topLoad:
      case topLevelTypes.topError:
      case topLevelTypes.topReset:
      case topLevelTypes.topSubmit:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // FireFox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    ("production" !== process.env.NODE_ENV ? invariant(
      EventConstructor,
      'SimpleEventPlugin: Unhandled event type, `%s`.',
      topLevelType
    ) : invariant(EventConstructor));
    var event = EventConstructor.getPooled(
      dispatchConfig,
      topLevelTargetID,
      nativeEvent
    );
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

};

module.exports = SimpleEventPlugin;

}).call(this,require('_process'))
},{"./EventConstants":78,"./EventPluginUtils":82,"./EventPropagators":83,"./SyntheticClipboardEvent":168,"./SyntheticDragEvent":170,"./SyntheticEvent":171,"./SyntheticFocusEvent":172,"./SyntheticKeyboardEvent":174,"./SyntheticMouseEvent":175,"./SyntheticTouchEvent":176,"./SyntheticUIEvent":177,"./SyntheticWheelEvent":178,"./getEventCharCode":200,"./invariant":213,"./keyOf":220,"./warning":234,"_process":417}],168:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function(event) {
    return (
      'clipboardData' in event ?
        event.clipboardData :
        window.clipboardData
    );
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

},{"./SyntheticEvent":171}],169:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticCompositionEvent,
  CompositionEventInterface
);

module.exports = SyntheticCompositionEvent;

},{"./SyntheticEvent":171}],170:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticMouseEvent = require("./SyntheticMouseEvent");

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

},{"./SyntheticMouseEvent":175}],171:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 * @typechecks static-only
 */

'use strict';

var PooledClass = require("./PooledClass");

var assign = require("./Object.assign");
var emptyFunction = require("./emptyFunction");
var getEventTarget = require("./getEventTarget");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: getEventTarget,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 */
function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  this.dispatchConfig = dispatchConfig;
  this.dispatchMarker = dispatchMarker;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      this[propName] = nativeEvent[propName];
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ?
    nativeEvent.defaultPrevented :
    nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
}

assign(SyntheticEvent.prototype, {

  preventDefault: function() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (event.preventDefault) {
      event.preventDefault();
    } else {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function() {
    var event = this.nativeEvent;
    if (event.stopPropagation) {
      event.stopPropagation();
    } else {
      event.cancelBubble = true;
    }
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      this[propName] = null;
    }
    this.dispatchConfig = null;
    this.dispatchMarker = null;
    this.nativeEvent = null;
  }

});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function(Class, Interface) {
  var Super = this;

  var prototype = Object.create(Super.prototype);
  assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;

},{"./Object.assign":91,"./PooledClass":92,"./emptyFunction":192,"./getEventTarget":203}],172:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = require("./SyntheticUIEvent");

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

},{"./SyntheticUIEvent":177}],173:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = require("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticInputEvent,
  InputEventInterface
);

module.exports = SyntheticInputEvent;

},{"./SyntheticEvent":171}],174:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = require("./SyntheticUIEvent");

var getEventCharCode = require("./getEventCharCode");
var getEventKey = require("./getEventKey");
var getEventModifierState = require("./getEventModifierState");

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function(event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function(event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function(event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

},{"./SyntheticUIEvent":177,"./getEventCharCode":200,"./getEventKey":201,"./getEventModifierState":202}],175:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = require("./SyntheticUIEvent");
var ViewportMetrics = require("./ViewportMetrics");

var getEventModifierState = require("./getEventModifierState");

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function(event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function(event) {
    return event.relatedTarget || (
      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))
    );
  },
  // "Proprietary" Interface.
  pageX: function(event) {
    return 'pageX' in event ?
      event.pageX :
      event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function(event) {
    return 'pageY' in event ?
      event.pageY :
      event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

},{"./SyntheticUIEvent":177,"./ViewportMetrics":180,"./getEventModifierState":202}],176:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticUIEvent = require("./SyntheticUIEvent");

var getEventModifierState = require("./getEventModifierState");

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

},{"./SyntheticUIEvent":177,"./getEventModifierState":202}],177:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticEvent = require("./SyntheticEvent");

var getEventTarget = require("./getEventTarget");

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function(event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target != null && target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function(event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

},{"./SyntheticEvent":171,"./getEventTarget":203}],178:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 * @typechecks static-only
 */

'use strict';

var SyntheticMouseEvent = require("./SyntheticMouseEvent");

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function(event) {
    return (
      'deltaX' in event ? event.deltaX :
      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
    );
  },
  deltaY: function(event) {
    return (
      'deltaY' in event ? event.deltaY :
      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
      'wheelDeltaY' in event ? -event.wheelDeltaY :
      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
      'wheelDelta' in event ? -event.wheelDelta : 0
    );
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

},{"./SyntheticMouseEvent":175}],179:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

'use strict';

var invariant = require("./invariant");

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (!this.wrapperInitData) {
      this.wrapperInitData = [];
    } else {
      this.wrapperInitData.length = 0;
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function() {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} args... Arguments to pass to the method (optional).
   *                           Helps prevent need to bind in many cases.
   * @return Return value from `method`.
   */
  perform: function(method, scope, a, b, c, d, e, f) {
    ("production" !== process.env.NODE_ENV ? invariant(
      !this.isInTransaction(),
      'Transaction.perform(...): Cannot initialize a transaction when there ' +
      'is already an outstanding transaction.'
    ) : invariant(!this.isInTransaction()));
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {
          }
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ?
          wrapper.initialize.call(this) :
          null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {
          }
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function(startIndex) {
    ("production" !== process.env.NODE_ENV ? invariant(
      this.isInTransaction(),
      'Transaction.closeAll(): Cannot close transaction when none are open.'
    ) : invariant(this.isInTransaction()));
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {
          }
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occured.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],180:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

'use strict';

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function(scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

},{}],181:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 */

'use strict';

var invariant = require("./invariant");

/**
 *
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  ("production" !== process.env.NODE_ENV ? invariant(
    next != null,
    'accumulateInto(...): Accumulated items must not be null or undefined.'
  ) : invariant(next != null));
  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  var currentIsArray = Array.isArray(current);
  var nextIsArray = Array.isArray(next);

  if (currentIsArray && nextIsArray) {
    current.push.apply(current, next);
    return current;
  }

  if (currentIsArray) {
    current.push(next);
    return current;
  }

  if (nextIsArray) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],182:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 */

/* jslint bitwise:true */

'use strict';

var MOD = 65521;

// This is a clean-room implementation of adler32 designed for detecting
// if markup is not what we expect it to be. It does not need to be
// cryptographically strong, only reasonably good at detecting if markup
// generated on the server is different than that on the client.
function adler32(data) {
  var a = 1;
  var b = 0;
  for (var i = 0; i < data.length; i++) {
    a = (a + data.charCodeAt(i)) % MOD;
    b = (b + a) % MOD;
  }
  return a | (b << 16);
}

module.exports = adler32;

},{}],183:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelize
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function(_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

},{}],184:[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelizeStyleName
 * @typechecks
 */

"use strict";

var camelize = require("./camelize");

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

},{"./camelize":183}],185:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 * @providesModule cloneWithProps
 */

'use strict';

var ReactElement = require("./ReactElement");
var ReactPropTransferer = require("./ReactPropTransferer");

var keyOf = require("./keyOf");
var warning = require("./warning");

var CHILDREN_PROP = keyOf({children: null});

/**
 * Sometimes you want to change the props of a child passed to you. Usually
 * this is to add a CSS class.
 *
 * @param {ReactElement} child child element you'd like to clone
 * @param {object} props props you'd like to modify. className and style will be
 * merged automatically.
 * @return {ReactElement} a clone of child with props merged in.
 */
function cloneWithProps(child, props) {
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      !child.ref,
      'You are calling cloneWithProps() on a child with a ref. This is ' +
      'dangerous because you\'re creating a new child which will not be ' +
      'added as a ref to its parent.'
    ) : null);
  }

  var newProps = ReactPropTransferer.mergeProps(props, child.props);

  // Use `child.props.children` if it is provided.
  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&
      child.props.hasOwnProperty(CHILDREN_PROP)) {
    newProps.children = child.props.children;
  }

  // The current API doesn't retain _owner and _context, which is why this
  // doesn't use ReactElement.cloneAndReplaceProps.
  return ReactElement.createElement(child.type, newProps);
}

module.exports = cloneWithProps;

}).call(this,require('_process'))
},{"./ReactElement":125,"./ReactPropTransferer":145,"./keyOf":220,"./warning":234,"_process":417}],186:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule containsNode
 * @typechecks
 */

var isTextNode = require("./isTextNode");

/*jslint bitwise:true */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

},{"./isTextNode":217}],187:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createArrayFromMixed
 * @typechecks
 */

var toArray = require("./toArray");

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj &&
    // arrays are objects, NodeLists are functions in Safari
    (typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    ('length' in obj) &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    (typeof obj.nodeType != 'number') &&
    (
      // a real array
      (// HTMLCollection/NodeList
      (Array.isArray(obj) ||
      // arguments
      ('callee' in obj) || 'item' in obj))
    )
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;

},{"./toArray":231}],188:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createFullPageComponent
 * @typechecks
 */

'use strict';

// Defeat circular references by requiring this directly.
var ReactClass = require("./ReactClass");
var ReactElement = require("./ReactElement");

var invariant = require("./invariant");

/**
 * Create a component that will throw an exception when unmounted.
 *
 * Components like <html> <head> and <body> can't be removed or added
 * easily in a cross-browser way, however it's valuable to be able to
 * take advantage of React's reconciliation for styling and <title>
 * management. So we just document it and throw in dangerous cases.
 *
 * @param {string} tag The tag to wrap
 * @return {function} convenience constructor of new component
 */
function createFullPageComponent(tag) {
  var elementFactory = ReactElement.createFactory(tag);

  var FullPageComponent = ReactClass.createClass({
    tagName: tag.toUpperCase(),
    displayName: 'ReactFullPageComponent' + tag,

    componentWillUnmount: function() {
      ("production" !== process.env.NODE_ENV ? invariant(
        false,
        '%s tried to unmount. Because of cross-browser quirks it is ' +
        'impossible to unmount some top-level components (eg <html>, <head>, ' +
        'and <body>) reliably and efficiently. To fix this, have a single ' +
        'top-level component that never unmounts render these elements.',
        this.constructor.displayName
      ) : invariant(false));
    },

    render: function() {
      return elementFactory(this.props);
    }
  });

  return FullPageComponent;
}

module.exports = createFullPageComponent;

}).call(this,require('_process'))
},{"./ReactClass":100,"./ReactElement":125,"./invariant":213,"_process":417}],189:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createNodesFromMarkup
 * @typechecks
 */

/*jslint evil: true, sub: true */

var ExecutionEnvironment = require("./ExecutionEnvironment");

var createArrayFromMixed = require("./createArrayFromMixed");
var getMarkupWrap = require("./getMarkupWrap");
var invariant = require("./invariant");

/**
 * Dummy container used to render all markup.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    ("production" !== process.env.NODE_ENV ? invariant(
      handleScript,
      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
    ) : invariant(handleScript));
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = createArrayFromMixed(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

}).call(this,require('_process'))
},{"./ExecutionEnvironment":84,"./createArrayFromMixed":187,"./getMarkupWrap":205,"./invariant":213,"_process":417}],190:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule cx
 */

/**
 * This function is used to mark string literals representing CSS class names
 * so that they can be transformed statically. This allows for modularization
 * and minification of CSS class names.
 *
 * In static_upstream, this function is actually implemented, but it should
 * eventually be replaced with something more descriptive, and the transform
 * that is used in the main stack should be ported for use elsewhere.
 *
 * @param string|object className to modularize, or an object of key/values.
 *                      In the object case, the values are conditions that
 *                      determine if the className keys should be included.
 * @param [string ...]  Variable list of classNames in the string case.
 * @return string       Renderable space-separated CSS className.
 */

'use strict';
var warning = require("./warning");

var warned = false;

function cx(classNames) {
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      warned,
      'React.addons.classSet will be deprecated in a future version. See ' +
      'http://fb.me/react-addons-classset'
    ) : null);
    warned = true;
  }

  if (typeof classNames == 'object') {
    return Object.keys(classNames).filter(function(className) {
      return classNames[className];
    }).join(' ');
  } else {
    return Array.prototype.join.call(arguments, ' ');
  }
}

module.exports = cx;

}).call(this,require('_process'))
},{"./warning":234,"_process":417}],191:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 * @typechecks static-only
 */

'use strict';

var CSSProperty = require("./CSSProperty");

var isUnitlessNumber = CSSProperty.isUnitlessNumber;

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 ||
      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;

},{"./CSSProperty":67}],192:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyFunction
 */

function makeEmptyFunction(arg) {
  return function() {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function() { return this; };
emptyFunction.thatReturnsArgument = function(arg) { return arg; };

module.exports = emptyFunction;

},{}],193:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyObject
 */

"use strict";

var emptyObject = {};

if ("production" !== process.env.NODE_ENV) {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

}).call(this,require('_process'))
},{"_process":417}],194:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule escapeTextContentForBrowser
 */

'use strict';

var ESCAPE_LOOKUP = {
  '&': '&amp;',
  '>': '&gt;',
  '<': '&lt;',
  '"': '&quot;',
  '\'': '&#x27;'
};

var ESCAPE_REGEX = /[&><"']/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextContentForBrowser;

},{}],195:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule findDOMNode
 * @typechecks static-only
 */

'use strict';

var ReactCurrentOwner = require("./ReactCurrentOwner");
var ReactInstanceMap = require("./ReactInstanceMap");
var ReactMount = require("./ReactMount");

var invariant = require("./invariant");
var isNode = require("./isNode");
var warning = require("./warning");

/**
 * Returns the DOM node rendered by this element.
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if ("production" !== process.env.NODE_ENV) {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      ("production" !== process.env.NODE_ENV ? warning(
        owner._warnedAboutRefsInRender,
        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +
        'render() should be a pure function of props and state. It should ' +
        'never access something that requires stale data from the previous ' +
        'render, such as refs. Move this logic to componentDidMount and ' +
        'componentDidUpdate instead.',
        owner.getName() || 'A component'
      ) : null);
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (isNode(componentOrElement)) {
    return componentOrElement;
  }
  if (ReactInstanceMap.has(componentOrElement)) {
    return ReactMount.getNodeFromInstance(componentOrElement);
  }
  ("production" !== process.env.NODE_ENV ? invariant(
    componentOrElement.render == null ||
    typeof componentOrElement.render !== 'function',
    'Component (with keys: %s) contains `render` method ' +
    'but is not mounted in the DOM',
    Object.keys(componentOrElement)
  ) : invariant(componentOrElement.render == null ||
  typeof componentOrElement.render !== 'function'));
  ("production" !== process.env.NODE_ENV ? invariant(
    false,
    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
    Object.keys(componentOrElement)
  ) : invariant(false));
}

module.exports = findDOMNode;

}).call(this,require('_process'))
},{"./ReactCurrentOwner":107,"./ReactInstanceMap":135,"./ReactMount":139,"./invariant":213,"./isNode":215,"./warning":234,"_process":417}],196:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 */

'use strict';

var traverseAllChildren = require("./traverseAllChildren");
var warning = require("./warning");

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  var keyUnique = !result.hasOwnProperty(name);
  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      keyUnique,
      'flattenChildren(...): Encountered two children with the same key, ' +
      '`%s`. Child keys must be unique; when two children share a key, only ' +
      'the first child will be used.',
      name
    ) : null);
  }
  if (keyUnique && child != null) {
    result[name] = child;
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;

}).call(this,require('_process'))
},{"./traverseAllChildren":232,"./warning":234,"_process":417}],197:[function(require,module,exports){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule focusNode
 */

"use strict";

/**
 * @param {DOMElement} node input/textarea to focus
 */
function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch(e) {
  }
}

module.exports = focusNode;

},{}],198:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 */

'use strict';

/**
 * @param {array} an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */
var forEachAccumulated = function(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;

},{}],199:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getActiveElement
 * @typechecks
 */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document body is not yet defined.
 */
function getActiveElement() /*?DOMElement*/ {
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;

},{}],200:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 * @typechecks static-only
 */

'use strict';

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

},{}],201:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 * @typechecks static-only
 */

'use strict';

var getEventCharCode = require("./getEventCharCode");

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

},{"./getEventCharCode":200}],202:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 * @typechecks static-only
 */

'use strict';

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  /*jshint validthis:true */
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

},{}],203:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 * @typechecks static-only
 */

'use strict';

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;
  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

},{}],204:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getIteratorFn
 * @typechecks static-only
 */

'use strict';

/* global Symbol */
var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (
    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])
  );
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

},{}],205:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getMarkupWrap
 */

var ExecutionEnvironment = require("./ExecutionEnvironment");

var invariant = require("./invariant");

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */
var shouldWrap = {
  // Force wrapping for SVG elements because if they get created inside a <div>,
  // they will be initialized in the wrong namespace (and will not display).
  'circle': true,
  'clipPath': true,
  'defs': true,
  'ellipse': true,
  'g': true,
  'line': true,
  'linearGradient': true,
  'path': true,
  'polygon': true,
  'polyline': true,
  'radialGradient': true,
  'rect': true,
  'stop': true,
  'text': true
};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg>', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap,

  'circle': svgWrap,
  'clipPath': svgWrap,
  'defs': svgWrap,
  'ellipse': svgWrap,
  'g': svgWrap,
  'line': svgWrap,
  'linearGradient': svgWrap,
  'path': svgWrap,
  'polygon': svgWrap,
  'polyline': svgWrap,
  'radialGradient': svgWrap,
  'rect': svgWrap,
  'stop': svgWrap,
  'text': svgWrap
};

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}


module.exports = getMarkupWrap;

}).call(this,require('_process'))
},{"./ExecutionEnvironment":84,"./invariant":213,"_process":417}],206:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

'use strict';

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

},{}],207:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getReactRootElementInContainer
 */

'use strict';

var DOC_NODE_TYPE = 9;

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 *                                           a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

module.exports = getReactRootElementInContainer;

},{}],208:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

'use strict';

var ExecutionEnvironment = require("./ExecutionEnvironment");

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ?
      'textContent' :
      'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

},{"./ExecutionEnvironment":84}],209:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getUnboundedScrollPosition
 * @typechecks
 */

"use strict";

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */
function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

},{}],210:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenate
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

},{}],211:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenateStyleName
 * @typechecks
 */

"use strict";

var hyphenate = require("./hyphenate");

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

},{"./hyphenate":210}],212:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 * @typechecks static-only
 */

'use strict';

var ReactCompositeComponent = require("./ReactCompositeComponent");
var ReactEmptyComponent = require("./ReactEmptyComponent");
var ReactNativeComponent = require("./ReactNativeComponent");

var assign = require("./Object.assign");
var invariant = require("./invariant");
var warning = require("./warning");

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function() { };
assign(
  ReactCompositeComponentWrapper.prototype,
  ReactCompositeComponent.Mixin,
  {
    _instantiateReactComponent: instantiateReactComponent
  }
);

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return (
    typeof type === 'function' &&
    typeof type.prototype !== 'undefined' &&
    typeof type.prototype.mountComponent === 'function' &&
    typeof type.prototype.receiveComponent === 'function'
  );
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {*} parentCompositeType The composite type that resolved this.
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, parentCompositeType) {
  var instance;

  if (node === null || node === false) {
    node = ReactEmptyComponent.emptyElement;
  }

  if (typeof node === 'object') {
    var element = node;
    if ("production" !== process.env.NODE_ENV) {
      ("production" !== process.env.NODE_ENV ? warning(
        element && (typeof element.type === 'function' ||
                    typeof element.type === 'string'),
        'Only functions or strings can be mounted as React components.'
      ) : null);
    }

    // Special case string values
    if (parentCompositeType === element.type &&
        typeof element.type === 'string') {
      // Avoid recursion if the wrapper renders itself.
      instance = ReactNativeComponent.createInternalComponent(element);
      // All native components are currently wrapped in a composite so we're
      // safe to assume that this is what we should instantiate.
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // represenations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);
    } else {
      instance = new ReactCompositeComponentWrapper();
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactNativeComponent.createInstanceForText(node);
  } else {
    ("production" !== process.env.NODE_ENV ? invariant(
      false,
      'Encountered invalid React node of type %s',
      typeof node
    ) : invariant(false));
  }

  if ("production" !== process.env.NODE_ENV) {
    ("production" !== process.env.NODE_ENV ? warning(
      typeof instance.construct === 'function' &&
      typeof instance.mountComponent === 'function' &&
      typeof instance.receiveComponent === 'function' &&
      typeof instance.unmountComponent === 'function',
      'Only React Components can be mounted.'
    ) : null);
  }

  // Sets up the instance. This can probably just move into the constructor now.
  instance.construct(node);

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if ("production" !== process.env.NODE_ENV) {
    instance._isOwnerNecessary = false;
    instance._warnedAboutRefsInRender = false;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if ("production" !== process.env.NODE_ENV) {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

module.exports = instantiateReactComponent;

}).call(this,require('_process'))
},{"./Object.assign":91,"./ReactCompositeComponent":105,"./ReactEmptyComponent":127,"./ReactNativeComponent":142,"./invariant":213,"./warning":234,"_process":417}],213:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule invariant
 */

"use strict";

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if ("production" !== process.env.NODE_ENV) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        'Invariant Violation: ' +
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

}).call(this,require('_process'))
},{"_process":417}],214:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

'use strict';

var ExecutionEnvironment = require("./ExecutionEnvironment");

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature =
    document.implementation &&
    document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM ||
      capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

},{"./ExecutionEnvironment":84}],215:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isNode
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (
    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&
    typeof object.nodeType === 'number' &&
    typeof object.nodeName === 'string'))
  ));
}

module.exports = isNode;

},{}],216:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 */

'use strict';

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  return elem && (
    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')
  );
}

module.exports = isTextInputElement;

},{}],217:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextNode
 * @typechecks
 */

var isNode = require("./isNode");

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

},{"./isNode":215}],218:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule joinClasses
 * @typechecks static-only
 */

'use strict';

/**
 * Combines multiple className strings into one.
 * http://jsperf.com/joinclasses-args-vs-array
 *
 * @param {...?string} classes
 * @return {string}
 */
function joinClasses(className/*, ... */) {
  if (!className) {
    className = '';
  }
  var nextClass;
  var argLength = arguments.length;
  if (argLength > 1) {
    for (var ii = 1; ii < argLength; ii++) {
      nextClass = arguments[ii];
      if (nextClass) {
        className = (className ? className + ' ' : '') + nextClass;
      }
    }
  }
  return className;
}

module.exports = joinClasses;

},{}],219:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyMirror
 * @typechecks static-only
 */

'use strict';

var invariant = require("./invariant");

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  ("production" !== process.env.NODE_ENV ? invariant(
    obj instanceof Object && !Array.isArray(obj),
    'keyMirror(...): Argument must be an object.'
  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],220:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyOf
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without loosing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};


module.exports = keyOf;

},{}],221:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule mapObject
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;

},{}],222:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule memoizeStringOnly
 * @typechecks static-only
 */

'use strict';

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */
function memoizeStringOnly(callback) {
  var cache = {};
  return function(string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

},{}],223:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
'use strict';

var ReactElement = require("./ReactElement");

var invariant = require("./invariant");

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection. The current implementation of this
 * function assumes that a single child gets passed without a wrapper, but the
 * purpose of this helper function is to abstract away the particular structure
 * of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactComponent} The first and only `ReactComponent` contained in the
 * structure.
 */
function onlyChild(children) {
  ("production" !== process.env.NODE_ENV ? invariant(
    ReactElement.isValidElement(children),
    'onlyChild must be passed a children with exactly one child.'
  ) : invariant(ReactElement.isValidElement(children)));
  return children;
}

module.exports = onlyChild;

}).call(this,require('_process'))
},{"./ReactElement":125,"./invariant":213,"_process":417}],224:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performance
 * @typechecks
 */

"use strict";

var ExecutionEnvironment = require("./ExecutionEnvironment");

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance =
    window.performance ||
    window.msPerformance ||
    window.webkitPerformance;
}

module.exports = performance || {};

},{"./ExecutionEnvironment":84}],225:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performanceNow
 * @typechecks
 */

var performance = require("./performance");

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (!performance || !performance.now) {
  performance = Date;
}

var performanceNow = performance.now.bind(performance);

module.exports = performanceNow;

},{"./performance":224}],226:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule quoteAttributeValueForBrowser
 */

'use strict';

var escapeTextContentForBrowser = require("./escapeTextContentForBrowser");

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

},{"./escapeTextContentForBrowser":194}],227:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

/* globals MSApp */

'use strict';

var ExecutionEnvironment = require("./ExecutionEnvironment");

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = function(node, html) {
  node.innerHTML = html;
};

// Win8 apps: Allow all html to be inserted
if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
  setInnerHTML = function(node, html) {
    MSApp.execUnsafeLocalFunction(function() {
      node.innerHTML = html;
    });
  };
}

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function(node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) ||
          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        node.innerHTML = '\uFEFF' + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
}

module.exports = setInnerHTML;

},{"./ExecutionEnvironment":84}],228:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setTextContent
 */

'use strict';

var ExecutionEnvironment = require("./ExecutionEnvironment");
var escapeTextContentForBrowser = require("./escapeTextContentForBrowser");
var setInnerHTML = require("./setInnerHTML");

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function(node, text) {
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function(node, text) {
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

},{"./ExecutionEnvironment":84,"./escapeTextContentForBrowser":194,"./setInnerHTML":227}],229:[function(require,module,exports){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shallowEqual
 */

'use strict';

/**
 * Performs equality by iterating through keys on an object and returning
 * false when any key has values which are not strictly equal between
 * objA and objB. Returns true when the values of all keys are strictly equal.
 *
 * @return {boolean}
 */
function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  var key;
  // Test for A's keys different from B.
  for (key in objA) {
    if (objA.hasOwnProperty(key) &&
        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
      return false;
    }
  }
  // Test for B's keys missing from A.
  for (key in objB) {
    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
      return false;
    }
  }
  return true;
}

module.exports = shallowEqual;

},{}],230:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 * @typechecks static-only
 */

'use strict';

var warning = require("./warning");

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */
function shouldUpdateReactComponent(prevElement, nextElement) {
  if (prevElement != null && nextElement != null) {
    var prevType = typeof prevElement;
    var nextType = typeof nextElement;
    if (prevType === 'string' || prevType === 'number') {
      return (nextType === 'string' || nextType === 'number');
    } else {
      if (nextType === 'object' &&
          prevElement.type === nextElement.type &&
          prevElement.key === nextElement.key) {
        var ownersMatch = prevElement._owner === nextElement._owner;
        var prevName = null;
        var nextName = null;
        var nextDisplayName = null;
        if ("production" !== process.env.NODE_ENV) {
          if (!ownersMatch) {
            if (prevElement._owner != null &&
                prevElement._owner.getPublicInstance() != null &&
                prevElement._owner.getPublicInstance().constructor != null) {
              prevName =
                prevElement._owner.getPublicInstance().constructor.displayName;
            }
            if (nextElement._owner != null &&
                nextElement._owner.getPublicInstance() != null &&
                nextElement._owner.getPublicInstance().constructor != null) {
              nextName =
                nextElement._owner.getPublicInstance().constructor.displayName;
            }
            if (nextElement.type != null &&
                nextElement.type.displayName != null) {
              nextDisplayName = nextElement.type.displayName;
            }
            if (nextElement.type != null && typeof nextElement.type === 'string') {
              nextDisplayName = nextElement.type;
            }
            if (typeof nextElement.type !== 'string' ||
                nextElement.type === 'input' ||
                nextElement.type === 'textarea') {
              if ((prevElement._owner != null &&
                  prevElement._owner._isOwnerNecessary === false) ||
                  (nextElement._owner != null &&
                  nextElement._owner._isOwnerNecessary === false)) {
                if (prevElement._owner != null) {
                  prevElement._owner._isOwnerNecessary = true;
                }
                if (nextElement._owner != null) {
                  nextElement._owner._isOwnerNecessary = true;
                }
                ("production" !== process.env.NODE_ENV ? warning(
                  false,
                  '<%s /> is being rendered by both %s and %s using the same ' +
                  'key (%s) in the same place. Currently, this means that ' +
                  'they don\'t preserve state. This behavior should be very ' +
                  'rare so we\'re considering deprecating it. Please contact ' +
                  'the React team and explain your use case so that we can ' +
                  'take that into consideration.',
                  nextDisplayName || 'Unknown Component',
                  prevName || '[Unknown]',
                  nextName || '[Unknown]',
                  prevElement.key
                ) : null);
              }
            }
          }
        }
        return ownersMatch;
      }
    }
  }
  return false;
}

module.exports = shouldUpdateReactComponent;

}).call(this,require('_process'))
},{"./warning":234,"_process":417}],231:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule toArray
 * @typechecks
 */

var invariant = require("./invariant");

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
  // old versions of Safari).
  ("production" !== process.env.NODE_ENV ? invariant(
    !Array.isArray(obj) &&
    (typeof obj === 'object' || typeof obj === 'function'),
    'toArray: Array-like object expected'
  ) : invariant(!Array.isArray(obj) &&
  (typeof obj === 'object' || typeof obj === 'function')));

  ("production" !== process.env.NODE_ENV ? invariant(
    typeof length === 'number',
    'toArray: Object needs a length property'
  ) : invariant(typeof length === 'number'));

  ("production" !== process.env.NODE_ENV ? invariant(
    length === 0 ||
    (length - 1) in obj,
    'toArray: Object should have keys for indices'
  ) : invariant(length === 0 ||
  (length - 1) in obj));

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

module.exports = toArray;

}).call(this,require('_process'))
},{"./invariant":213,"_process":417}],232:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

'use strict';

var ReactElement = require("./ReactElement");
var ReactFragment = require("./ReactFragment");
var ReactInstanceHandles = require("./ReactInstanceHandles");

var getIteratorFn = require("./getIteratorFn");
var invariant = require("./invariant");
var warning = require("./warning");

var SEPARATOR = ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR = ':';

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var userProvidedKeyEscaperLookup = {
  '=': '=0',
  '.': '=1',
  ':': '=2'
};

var userProvidedKeyEscapeRegex = /[=.:]/g;

var didWarnAboutMaps = false;

function userProvidedKeyEscaper(match) {
  return userProvidedKeyEscaperLookup[match];
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  if (component && component.key != null) {
    // Explicit key
    return wrapUserProvidedKey(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * Escape a component key so that it is safe to use in a reactid.
 *
 * @param {*} key Component key to be escaped.
 * @return {string} An escaped string.
 */
function escapeUserProvidedKey(text) {
  return ('' + text).replace(
    userProvidedKeyEscapeRegex,
    userProvidedKeyEscaper
  );
}

/**
 * Wrap a `key` value explicitly provided by the user to distinguish it from
 * implicitly-generated keys generated by a component's index in its parent.
 *
 * @param {string} key Value of a user-provided `key` attribute
 * @return {string}
 */
function wrapUserProvidedKey(key) {
  return '$' + escapeUserProvidedKey(key);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!number} indexSoFar Number of children encountered until this point.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(
  children,
  nameSoFar,
  indexSoFar,
  callback,
  traverseContext
) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null ||
      type === 'string' ||
      type === 'number' ||
      ReactElement.isValidElement(children)) {
    callback(
      traverseContext,
      children,
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows.
      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
      indexSoFar
    );
    return 1;
  }

  var child, nextName, nextIndex;
  var subtreeCount = 0; // Count of children found in the current subtree.

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = (
        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
        getComponentKey(child, i)
      );
      nextIndex = indexSoFar + subtreeCount;
      subtreeCount += traverseAllChildrenImpl(
        child,
        nextName,
        nextIndex,
        callback,
        traverseContext
      );
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = (
            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
            getComponentKey(child, ii++)
          );
          nextIndex = indexSoFar + subtreeCount;
          subtreeCount += traverseAllChildrenImpl(
            child,
            nextName,
            nextIndex,
            callback,
            traverseContext
          );
        }
      } else {
        if ("production" !== process.env.NODE_ENV) {
          ("production" !== process.env.NODE_ENV ? warning(
            didWarnAboutMaps,
            'Using Maps as children is not yet fully supported. It is an ' +
            'experimental feature that might be removed. Convert it to a ' +
            'sequence / iterable of keyed ReactElements instead.'
          ) : null);
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = (
              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +
              getComponentKey(child, 0)
            );
            nextIndex = indexSoFar + subtreeCount;
            subtreeCount += traverseAllChildrenImpl(
              child,
              nextName,
              nextIndex,
              callback,
              traverseContext
            );
          }
        }
      }
    } else if (type === 'object') {
      ("production" !== process.env.NODE_ENV ? invariant(
        children.nodeType !== 1,
        'traverseAllChildren(...): Encountered an invalid child; DOM ' +
        'elements are not valid children of React components.'
      ) : invariant(children.nodeType !== 1));
      var fragment = ReactFragment.extract(children);
      for (var key in fragment) {
        if (fragment.hasOwnProperty(key)) {
          child = fragment[key];
          nextName = (
            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
            wrapUserProvidedKey(key) + SUBSEPARATOR +
            getComponentKey(child, 0)
          );
          nextIndex = indexSoFar + subtreeCount;
          subtreeCount += traverseAllChildrenImpl(
            child,
            nextName,
            nextIndex,
            callback,
            traverseContext
          );
        }
      }
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
}

module.exports = traverseAllChildren;

}).call(this,require('_process'))
},{"./ReactElement":125,"./ReactFragment":131,"./ReactInstanceHandles":134,"./getIteratorFn":204,"./invariant":213,"./warning":234,"_process":417}],233:[function(require,module,exports){
(function (process){
/**
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule update
 */

 /* global hasOwnProperty:true */

'use strict';

var assign = require("./Object.assign");
var keyOf = require("./keyOf");
var invariant = require("./invariant");
var hasOwnProperty = {}.hasOwnProperty;

function shallowCopy(x) {
  if (Array.isArray(x)) {
    return x.concat();
  } else if (x && typeof x === 'object') {
    return assign(new x.constructor(), x);
  } else {
    return x;
  }
}

var COMMAND_PUSH = keyOf({$push: null});
var COMMAND_UNSHIFT = keyOf({$unshift: null});
var COMMAND_SPLICE = keyOf({$splice: null});
var COMMAND_SET = keyOf({$set: null});
var COMMAND_MERGE = keyOf({$merge: null});
var COMMAND_APPLY = keyOf({$apply: null});

var ALL_COMMANDS_LIST = [
  COMMAND_PUSH,
  COMMAND_UNSHIFT,
  COMMAND_SPLICE,
  COMMAND_SET,
  COMMAND_MERGE,
  COMMAND_APPLY
];

var ALL_COMMANDS_SET = {};

ALL_COMMANDS_LIST.forEach(function(command) {
  ALL_COMMANDS_SET[command] = true;
});

function invariantArrayCase(value, spec, command) {
  ("production" !== process.env.NODE_ENV ? invariant(
    Array.isArray(value),
    'update(): expected target of %s to be an array; got %s.',
    command,
    value
  ) : invariant(Array.isArray(value)));
  var specValue = spec[command];
  ("production" !== process.env.NODE_ENV ? invariant(
    Array.isArray(specValue),
    'update(): expected spec of %s to be an array; got %s. ' +
    'Did you forget to wrap your parameter in an array?',
    command,
    specValue
  ) : invariant(Array.isArray(specValue)));
}

function update(value, spec) {
  ("production" !== process.env.NODE_ENV ? invariant(
    typeof spec === 'object',
    'update(): You provided a key path to update() that did not contain one ' +
    'of %s. Did you forget to include {%s: ...}?',
    ALL_COMMANDS_LIST.join(', '),
    COMMAND_SET
  ) : invariant(typeof spec === 'object'));

  if (hasOwnProperty.call(spec, COMMAND_SET)) {
    ("production" !== process.env.NODE_ENV ? invariant(
      Object.keys(spec).length === 1,
      'Cannot have more than one key in an object with %s',
      COMMAND_SET
    ) : invariant(Object.keys(spec).length === 1));

    return spec[COMMAND_SET];
  }

  var nextValue = shallowCopy(value);

  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {
    var mergeObj = spec[COMMAND_MERGE];
    ("production" !== process.env.NODE_ENV ? invariant(
      mergeObj && typeof mergeObj === 'object',
      'update(): %s expects a spec of type \'object\'; got %s',
      COMMAND_MERGE,
      mergeObj
    ) : invariant(mergeObj && typeof mergeObj === 'object'));
    ("production" !== process.env.NODE_ENV ? invariant(
      nextValue && typeof nextValue === 'object',
      'update(): %s expects a target of type \'object\'; got %s',
      COMMAND_MERGE,
      nextValue
    ) : invariant(nextValue && typeof nextValue === 'object'));
    assign(nextValue, spec[COMMAND_MERGE]);
  }

  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {
    invariantArrayCase(value, spec, COMMAND_PUSH);
    spec[COMMAND_PUSH].forEach(function(item) {
      nextValue.push(item);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {
    invariantArrayCase(value, spec, COMMAND_UNSHIFT);
    spec[COMMAND_UNSHIFT].forEach(function(item) {
      nextValue.unshift(item);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {
    ("production" !== process.env.NODE_ENV ? invariant(
      Array.isArray(value),
      'Expected %s target to be an array; got %s',
      COMMAND_SPLICE,
      value
    ) : invariant(Array.isArray(value)));
    ("production" !== process.env.NODE_ENV ? invariant(
      Array.isArray(spec[COMMAND_SPLICE]),
      'update(): expected spec of %s to be an array of arrays; got %s. ' +
      'Did you forget to wrap your parameters in an array?',
      COMMAND_SPLICE,
      spec[COMMAND_SPLICE]
    ) : invariant(Array.isArray(spec[COMMAND_SPLICE])));
    spec[COMMAND_SPLICE].forEach(function(args) {
      ("production" !== process.env.NODE_ENV ? invariant(
        Array.isArray(args),
        'update(): expected spec of %s to be an array of arrays; got %s. ' +
        'Did you forget to wrap your parameters in an array?',
        COMMAND_SPLICE,
        spec[COMMAND_SPLICE]
      ) : invariant(Array.isArray(args)));
      nextValue.splice.apply(nextValue, args);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {
    ("production" !== process.env.NODE_ENV ? invariant(
      typeof spec[COMMAND_APPLY] === 'function',
      'update(): expected spec of %s to be a function; got %s.',
      COMMAND_APPLY,
      spec[COMMAND_APPLY]
    ) : invariant(typeof spec[COMMAND_APPLY] === 'function'));
    nextValue = spec[COMMAND_APPLY](nextValue);
  }

  for (var k in spec) {
    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {
      nextValue[k] = update(value[k], spec[k]);
    }
  }

  return nextValue;
}

module.exports = update;

}).call(this,require('_process'))
},{"./Object.assign":91,"./invariant":213,"./keyOf":220,"_process":417}],234:[function(require,module,exports){
(function (process){
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule warning
 */

"use strict";

var emptyFunction = require("./emptyFunction");

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("production" !== process.env.NODE_ENV) {
  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || /^[s\W]*$/.test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});
      console.warn(message);
      try {
        // --- Welcome to debugging React ---
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;

}).call(this,require('_process'))
},{"./emptyFunction":192,"_process":417}],235:[function(require,module,exports){
module.exports = require('./lib/React');

},{"./lib/React":93}],236:[function(require,module,exports){
module.exports=require(47)
},{"/home/tom/MakeMassive/makemassive-pages-react/node_modules/react-router-component/node_modules/url-pattern/lib/url-pattern.js":47}],237:[function(require,module,exports){
var window = require("global/window")
var once = require("once")
var parseHeaders = require('parse-headers')

var messages = {
    "0": "Internal XMLHttpRequest Error",
    "4": "4xx Client Error",
    "5": "5xx Server Error"
}

var XHR = window.XMLHttpRequest || noop
var XDR = "withCredentials" in (new XHR()) ? XHR : window.XDomainRequest

module.exports = createXHR

function createXHR(options, callback) {
    if (typeof options === "string") {
        options = { uri: options }
    }

    options = options || {}
    callback = once(callback)

    var xhr = options.xhr || null

    if (!xhr) {
        if (options.cors || options.useXDR) {
            xhr = new XDR()
        }else{
            xhr = new XHR()
        }
    }

    var uri = xhr.url = options.uri || options.url
    var method = xhr.method = options.method || "GET"
    var body = options.body || options.data
    var headers = xhr.headers = options.headers || {}
    var sync = !!options.sync
    var isJson = false
    var key
    var load = options.response ? loadResponse : loadXhr

    if ("json" in options) {
        isJson = true
        headers["Accept"] = "application/json"
        if (method !== "GET" && method !== "HEAD") {
            headers["Content-Type"] = "application/json"
            body = JSON.stringify(options.json)
        }
    }

    xhr.onreadystatechange = readystatechange
    xhr.onload = load
    xhr.onerror = error
    // IE9 must have onprogress be set to a unique function.
    xhr.onprogress = function () {
        // IE must die
    }
    // hate IE
    xhr.ontimeout = noop
    xhr.open(method, uri, !sync)
                                    //backward compatibility
    if (options.withCredentials || (options.cors && options.withCredentials !== false)) {
        xhr.withCredentials = true
    }

    // Cannot set timeout with sync request
    if (!sync) {
        xhr.timeout = "timeout" in options ? options.timeout : 5000
    }

    if (xhr.setRequestHeader) {
        for(key in headers){
            if(headers.hasOwnProperty(key)){
                xhr.setRequestHeader(key, headers[key])
            }
        }
    } else if (options.headers) {
        throw new Error("Headers cannot be set on an XDomainRequest object")
    }

    if ("responseType" in options) {
        xhr.responseType = options.responseType
    }
    
    if ("beforeSend" in options && 
        typeof options.beforeSend === "function"
    ) {
        options.beforeSend(xhr)
    }

    xhr.send(body)

    return xhr

    function readystatechange() {
        if (xhr.readyState === 4) {
            load()
        }
    }

    function getBody() {
        // Chrome with requestType=blob throws errors arround when even testing access to responseText
        var body = null

        if (xhr.response) {
            body = xhr.response
        } else if (xhr.responseType === 'text' || !xhr.responseType) {
            body = xhr.responseText || xhr.responseXML
        }

        if (isJson) {
            try {
                body = JSON.parse(body)
            } catch (e) {}
        }

        return body
    }

    function getStatusCode() {
        return xhr.status === 1223 ? 204 : xhr.status
    }

    // if we're getting a none-ok statusCode, build & return an error
    function errorFromStatusCode(status) {
        var error = null
        if (status === 0 || (status >= 400 && status < 600)) {
            var message = (typeof body === "string" ? body : false) ||
                messages[String(status).charAt(0)]
            error = new Error(message)
            error.statusCode = status
        }

        return error
    }

    // will load the data & process the response in a special response object
    function loadResponse() {
        var status = getStatusCode()
        var error = errorFromStatusCode(status)
        var response = {
            body: getBody(),
            statusCode: status,
            statusText: xhr.statusText,
            raw: xhr
        }
        if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE
            response.headers = parseHeaders(xhr.getAllResponseHeaders())
        } else {
            response.headers = {}
        }

        callback(error, response, response.body)
    }

    // will load the data and add some response properties to the source xhr
    // and then respond with that
    function loadXhr() {
        var status = getStatusCode()
        var error = errorFromStatusCode(status)

        xhr.status = xhr.statusCode = status
        xhr.body = getBody()
        xhr.headers = parseHeaders(xhr.getAllResponseHeaders())

        callback(error, xhr, xhr.body)
    }

    function error(evt) {
        callback(evt, xhr)
    }
}


function noop() {}

},{"global/window":238,"once":239,"parse-headers":243}],238:[function(require,module,exports){
(function (global){
if (typeof window !== "undefined") {
    module.exports = window;
} else if (typeof global !== "undefined") {
    module.exports = global;
} else if (typeof self !== "undefined"){
    module.exports = self;
} else {
    module.exports = {};
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],239:[function(require,module,exports){
module.exports = once

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })
})

function once (fn) {
  var called = false
  return function () {
    if (called) return
    called = true
    return fn.apply(this, arguments)
  }
}

},{}],240:[function(require,module,exports){
var isFunction = require('is-function')

module.exports = forEach

var toString = Object.prototype.toString
var hasOwnProperty = Object.prototype.hasOwnProperty

function forEach(list, iterator, context) {
    if (!isFunction(iterator)) {
        throw new TypeError('iterator must be a function')
    }

    if (arguments.length < 3) {
        context = this
    }
    
    if (toString.call(list) === '[object Array]')
        forEachArray(list, iterator, context)
    else if (typeof list === 'string')
        forEachString(list, iterator, context)
    else
        forEachObject(list, iterator, context)
}

function forEachArray(array, iterator, context) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            iterator.call(context, array[i], i, array)
        }
    }
}

function forEachString(string, iterator, context) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        iterator.call(context, string.charAt(i), i, string)
    }
}

function forEachObject(object, iterator, context) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            iterator.call(context, object[k], k, object)
        }
    }
}

},{"is-function":241}],241:[function(require,module,exports){
module.exports = isFunction

var toString = Object.prototype.toString

function isFunction (fn) {
  var string = toString.call(fn)
  return string === '[object Function]' ||
    (typeof fn === 'function' && string !== '[object RegExp]') ||
    (typeof window !== 'undefined' &&
     // IE8 and below
     (fn === window.setTimeout ||
      fn === window.alert ||
      fn === window.confirm ||
      fn === window.prompt))
};

},{}],242:[function(require,module,exports){

exports = module.exports = trim;

function trim(str){
  return str.replace(/^\s*|\s*$/g, '');
}

exports.left = function(str){
  return str.replace(/^\s*/, '');
};

exports.right = function(str){
  return str.replace(/\s*$/, '');
};

},{}],243:[function(require,module,exports){
var trim = require('trim')
  , forEach = require('for-each')
  , isArray = function(arg) {
      return Object.prototype.toString.call(arg) === '[object Array]';
    }

module.exports = function (headers) {
  if (!headers)
    return {}

  var result = {}

  forEach(
      trim(headers).split('\n')
    , function (row) {
        var index = row.indexOf(':')
          , key = trim(row.slice(0, index)).toLowerCase()
          , value = trim(row.slice(index + 1))

        if (typeof(result[key]) === 'undefined') {
          result[key] = value
        } else if (isArray(result[key])) {
          result[key].push(value)
        } else {
          result[key] = [ result[key], value ]
        }
      }
  )

  return result
}
},{"for-each":240,"trim":242}],244:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')

var ActivateComplete = React.createClass({displayName: "ActivateComplete",

	loginClick: function() {
		PubSub.publish('login', {})
	},

	render: function() {
		return (
			React.createElement("div", {className: "register-container m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "col-sm-12 col-middle"}, 							
							React.createElement("h3", null, "Account confirmed"), 
							React.createElement("p", {className: "p-b-10"}, "Thanks for you confirming you email, your account is now active and you have been logged in."), 
							React.createElement("p", null, 
								"Check out our ", React.createElement("a", {href: "/accounts/welcome/"}, "quick introduction"), " or go to the ", React.createElement("a", {href: "/"}, "home page to get started"), "." 
							)
						)
					)
				)
			)
		);
	}
})

module.exports = ActivateComplete

},{"pubsub-js":10,"react":235}],245:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var getCookie = require('../../utils/get-cookie.js')

var ActiveExpired = React.createClass({displayName: "ActiveExpired",

	getInitialState: function(){
		return {messages: []}
	},

	resendClick: function(){
		$(this.refs['button'].getDOMNode()).addClass('disabled')
		var data = {}
		data['email'] = this.refs['email'].getDOMNode().value
		data['csrfmiddlewaretoken'] = getCookie('csrftoken')
		$.ajax({
			url: '/accounts/activate/expired/',
			type: 'POST',
			headers: {'Accept':'application/json'},
			data: data,
			dataType: 'json'
		})
		.done(function(response){
			this.setState({messages: response.messages})
		}.bind(this))
		.fail(function(xhr, err){
			var messages = [{state: 'error', messages: 'Oops, please check your conection and try again.'}]
			this.setState({messages:messages})
		}.bind(this))
		.complete(function(){
			$(this.refs['button'].getDOMNode()).removeClass('disabled')
		}.bind(this))
	},

	render: function() {
		var messages = this.state.messages.map(function(message){
			var cls = ''
			if (message.state == 'error'){
				cls = 'text-danger'
			} else if (message.state == 'warning'){
				cls = 'text-warning'
			} else if (message.state == 'success'){
				cls = 'text-success'
			}
			return React.createElement("div", {className: cls}, message.message)
		})
		return (
			React.createElement("div", {className: "register-container m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "col-sm-12 col-middle"}, 							
							React.createElement("h3", null, "Activation expired"), 
							React.createElement("p", null, React.createElement("small", null, "Too much time has passed since we sent the activation email or your account is already active.")), 
							React.createElement("p", null, React.createElement("small", null, "Request a new activation email or try login.")), 
							messages, 
							React.createElement("div", {className: "row"}, 
								React.createElement("div", {className: "col-sm-12"}, 
									React.createElement("div", {className: "form-group form-group-default"}, 
										React.createElement("label", null, "Email"), 
								    	React.createElement("input", {ref: "email", "aria-required": "true", name: "email", placeholder: "The email you used to sign up", className: "form-control", required: "", type: "email"})
									)
								)
							), 
							React.createElement("button", {onClick: this.resendClick, ref: "button", className: "btn btn-primary btn-cons m-t-10", type: "submit"}, "Resend")
						)
					)
				)
			)
		);
	}
})

module.exports = ActiveExpired

},{"../../utils/get-cookie.js":407,"pubsub-js":10,"react":235}],246:[function(require,module,exports){
var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Messages = require('../form/messages.jsx');
var Button = require('../control/app-button.jsx');
var SubscriptionStatus = require('./app-subscriptionstatus.jsx');
var mustBeUser = require('../../utils/mustBeUser.jsx')

var ChangeCard = React.createClass({displayName: "ChangeCard",

	mixins: [ReactScriptLoaderMixin],

	getInitialState: function(){
		return {messages: [], disabled: false, updating: false, status: 0}
	},

    statics: {
        stripeHandler: null,
        scriptDidError: false,
    },

    // Indicates if the user has clicked on the button before the
    // the script has loaded.
    hasPendingClick: false,
    scriptLoaded: false,

    getScriptURL: function() {
        return 'https://checkout.stripe.com/checkout.js';
    },

    addStripeHandler: function(){
		ChangeCard.stripeHandler = StripeCheckout.configure({
            key: window._stripe_key,
            email: window._user.email,
            name: 'Update Card',
            description: 'Enter new credit card',
            panelLabel: 'Submit',
            token: function(token) {
                this.onUpdate(token.id)
            }.bind(this),
            closed: function(){
            	if (!this.state.updating){
            		this.setState({disabled: false})
            	}
            }.bind(this)
        });    
	},


    onScriptLoaded: function() {
        // Initialize the Stripe handler on the first onScriptLoaded call.
        // This handler is shared by all StripeButtons on the page.
        this.scriptLoaded = true
        if (this.hasPendingClick) {
	        if (!ChangeCard.stripeHandler) {
	        	this.addStripeHandler()
	        }	            
            this.showStripeDialog();
        }
    },
    
    showLoadingDialog: function() {
        // show a loading dialog
    },

    hideLoadingDialog: function() {
        // hide the loading dialog
    },

    showStripeDialog: function() {
        this.hideLoadingDialog();
        ChangeCard.stripeHandler.open({
            name:        'Change Card',
            description:  'Update Payment Method',
        });
    },

    onScriptError: function() {
        this.hideLoadingDialog();
        ChangeCard.scriptDidError = true;
    },

    updateCard: function(){
    	if (ChangeCard.scriptDidError) {
            alert('Oops, something has gone wrong. Please contact support.');
        } else if (this.scriptLoaded) {
        	//update stripeHandler with update data
        	this.setState({disabled: true})
            this.addStripeHandler();
            this.showStripeDialog();
        } else {
        	this.setState({disabled: true})
            this.showLoadingDialog();
            this.hasPendingClick = true;
        }
    },

    onUpdate: function(token){
    	var data = {
			stripe_token: token,
		}
		this.setState({
			messages: [{state: 'info', message:'Please wait, saving new card information...'}], 
			disabled: true,
			updating: true,
		});
		post('/accounts/change_card/', data, function(response){
			response.disabled = false
			response.updating = false
			response.status = this.state.status + 1
			this.setState(response)
		}.bind(this))
    },

    render: function() {

		var crumb_links = [
			{url : '/accounts/settings/', name: 'Account', className: ''},
			{url : '/accounts/change_card/', name: 'Change Card', className: 'active'}
		]

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 
		            	React.createElement(Breadcrumb, {links: crumb_links}), 
		                React.createElement("div", {className: "row"}, 
		                    React.createElement("div", {className: "col-xs-12"}, 
		                        React.createElement("div", {className: "panel panel-transparent"}, 
		                            React.createElement("div", {className: "panel-heading"}, 
		                                React.createElement("div", {className: "panel-title"}, "Account")
		                            ), 
		                            React.createElement("div", {className: "panel-body"}, 
		                                React.createElement("h3", null, "Change Card"), 
		                                React.createElement("div", {className: "m-t-40"}, 
		                                	
                                            React.createElement("p", null, "Use to button below to update your subscription credit card details."), 
                                            React.createElement("p", null, "You will not be charged when submitting the new credit card."), 
                                            React.createElement("p", null, "The updated card will only be charged on the monthly renewel date and only if you have active subscription "), 
                                            React.createElement("div", {className: "m-t-20"}, 
                                                React.createElement(Messages, {messages: this.state.messages}), 
							    		        React.createElement(Button, {color: "primary", disabled: this.state.disabled, onClick: this.updateCard}, "Update Card")
                                            )

							    		)
		                            )
		                        )
		                    )
		                )
		            )
                )
			)
		);
	}

});

module.exports = mustBeUser(ChangeCard);

},{"../../utils/ReactScriptLoader.js":405,"../../utils/mustBeUser.jsx":411,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-subscriptionstatus.jsx":267,"react":235}],247:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var Messages = require('../form/messages.jsx')
var Button = require('../control/app-button.jsx')

var LoginForm = React.createClass({displayName: "LoginForm",

	loginClick: function(e){

		var data = {
			username: this.refs['username'].getDOMNode().value,
			password: this.refs['password'].getDOMNode().value,
		}
		this.props.submitForm(data)
    e.preventDefault()
	},

	resetClick: function(){
		PubSub.publish('reset')
	},

	render: function() {
		return (
      React.createElement("div", null, 
    		React.createElement(Messages, {messages: this.props.messages}), 
        React.createElement("form", {id: "form-login", onSubmit: this.loginClick}, 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-sm-12"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "Username"), 
                React.createElement("input", {ref: "username", "aria-required": "true", name: "uname", placeholder: "Your username", className: "form-control", required: "", type: "text"}), 
              	React.createElement(Messages, {field: "username", messages: this.props.messages})
              )
            )
          ), 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-sm-12"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "Password"), 
                React.createElement("input", {ref: "password", "aria-required": "true", name: "pass", placeholder: "Your password", className: "form-control", required: "", type: "password"}), 
              	React.createElement(Messages, {field: "password", messages: this.props.messages})
              )
            )
          ), 
          React.createElement("div", {className: "m-t-10"}, 
            React.createElement(Button, {color: "primary", type: "submit", text: "Login", disabled: this.props.disabled}), 
            React.createElement("div", {className: "pull-right"}, "Forgot password? ", React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.resetClick}, "Reset my password"))
          )
        )
      )
		);
	}
})

module.exports = LoginForm

},{"../control/app-button.jsx":315,"../form/messages.jsx":328,"pubsub-js":10,"react":235}],248:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var getCookie = require('../../utils/get-cookie.js')
var Messages = require('../form/messages.jsx')
var post = require('../form/post.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Button = require('../control/app-button.jsx')

var ChangePassword = React.createClass({displayName: "ChangePassword",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		return {messages: [], disabled: false}
	},

	changeClick: function(){
		var data = {
			old_password: this.refs['old_password'].getDOMNode().value,
			new_password1: this.refs['new_password1'].getDOMNode().value,
			new_password2: this.refs['new_password2'].getDOMNode().value,
		}
		this.setState({messages: [], disabled: true})
		post('/accounts/password_change/', data, function(response){
			this.setState({messages: response.messages, disabled: false})
			if (response.changed == true){
				PubSub.publish('success', 'Password updated.')
				this.navigate('/accounts/settings/', function(){
					//
				})
			}
		}.bind(this))
	},

	render: function() {
		return (
			React.createElement("div", {className: "register-container m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "col-sm-12 col-middle"}, 							
							React.createElement("h3", null, "Change password"), 
							React.createElement("p", null, React.createElement("small", null, "Enter your current password and then your desired new password twice.")), 
							React.createElement(Messages, {messages: this.state.messages}), 
							React.createElement("div", {className: "row"}, 
								React.createElement("div", {className: "col-sm-12"}, 
									React.createElement("div", {className: "form-group form-group-default"}, 
										React.createElement("label", null, "Current Password"), 
								    	React.createElement("input", {ref: "old_password", "aria-required": "true", name: "old_password", placeholder: "Enter your current password", className: "form-control", required: "", type: "password"}), 
										React.createElement(Messages, {field: "old_password", messages: this.state.messages})
									)
								)
							), 
							React.createElement("div", {className: "row"}, 
								React.createElement("div", {className: "col-sm-12"}, 
									React.createElement("div", {className: "form-group form-group-default"}, 
										React.createElement("label", null, "New Password"), 
								    	React.createElement("input", {ref: "new_password1", "aria-required": "true", name: "new_password1", placeholder: "Enter your new password", className: "form-control", required: "", type: "password"}), 
										React.createElement(Messages, {field: "new_password1", messages: this.state.messages})
									)
								)
							), 
							React.createElement("div", {className: "row"}, 
								React.createElement("div", {className: "col-sm-12"}, 
									React.createElement("div", {className: "form-group form-group-default"}, 
										React.createElement("label", null, "Re-type New Password"), 
								    	React.createElement("input", {ref: "new_password2", "aria-required": "true", name: "new_password2", placeholder: "Re-type your new password", className: "form-control", required: "", type: "password"}), 
										React.createElement(Messages, {field: "new_password2", messages: this.state.messages})
									)
								)
							), 
							React.createElement(Button, {disabled: this.props.disabled, onClick: this.changeClick, ref: "button", color: "primary", type: "submit"}, "Change password")
						)
					)
				)
			)
		);
	}
})

module.exports = ChangePassword

},{"../../utils/get-cookie.js":407,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"pubsub-js":10,"react":235,"react-router-component":22}],249:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var getCookie = require('../../utils/get-cookie.js')
var Messages = require('../form/messages.jsx')
var post = require('../form/post.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin

var PasswordResetConfirm = React.createClass({displayName: "PasswordResetConfirm",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		return {messages: []}
	},

	changeClick: function(){
		var data = {
			new_password1: this.refs['new_password1'].getDOMNode().value,
			new_password2: this.refs['new_password2'].getDOMNode().value,
		}
		post(document.location.pathname, data, function(response){
			this.setState({messages: response.messages})
			if (response.reset == true){
				this.navigate('/accounts/reset/done/', function(){
					//
				})
			}
		}.bind(this))
	},

	render: function() {
		return (
			React.createElement("div", {className: "register-container m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "col-sm-12 col-middle"}, 							
							React.createElement("h3", null, "Password Reset"), 
							React.createElement("p", null, React.createElement("small", null, "Please enter your new password twice so we can verify you typed it in correctly.")), 
							React.createElement(Messages, {messages: this.state.messages}), 
							React.createElement("div", {className: "row"}, 
								React.createElement("div", {className: "col-sm-12"}, 
									React.createElement("div", {className: "form-group form-group-default"}, 
										React.createElement("label", null, "New Password"), 
								    	React.createElement("input", {ref: "new_password1", "aria-required": "true", name: "new_password1", placeholder: "Enter your new password", className: "form-control", required: "", type: "password"}), 
										React.createElement(Messages, {field: "new_password1", messages: this.state.messages})
									)
								)
							), 
							React.createElement("div", {className: "row"}, 
								React.createElement("div", {className: "col-sm-12"}, 
									React.createElement("div", {className: "form-group form-group-default"}, 
										React.createElement("label", null, "Re-type New Password"), 
								    	React.createElement("input", {ref: "new_password2", "aria-required": "true", name: "new_password2", placeholder: "Re-type your new password", className: "form-control", required: "", type: "password"}), 
										React.createElement(Messages, {field: "new_password2", messages: this.state.messages})
									)
								)
							), 
							React.createElement("button", {onClick: this.changeClick, ref: "button", className: "btn btn-primary btn-cons m-t-10", type: "submit"}, "Change my password")
						)
					)
				)
			)
		);
	}
})

module.exports = PasswordResetConfirm

},{"../../utils/get-cookie.js":407,"../form/messages.jsx":328,"../form/post.js":329,"pubsub-js":10,"react":235,"react-router-component":22}],250:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')

var PasswordResetDone = React.createClass({displayName: "PasswordResetDone",

	loginClick: function(){
		PubSub.publish('login')
	},

	render: function() {
		return (
			React.createElement("div", {className: "register-container m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "col-sm-12 col-middle"}, 							
							React.createElement("h3", null, "Password Reset Successful"), 
							React.createElement("p", null, React.createElement("small", null, "Your password has been changed. Please try login.")), 
							React.createElement("button", {onClick: this.loginClick, ref: "button", className: "btn btn-primary btn-cons m-t-10", type: "submit"}, "Login")
						)
					)
				)
			)
		);
	}
})

module.exports = PasswordResetDone

},{"pubsub-js":10,"react":235}],251:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')

var PasswordResetDone = React.createClass({displayName: "PasswordResetDone",

	resetClick: function(){
		PubSub.publish('reset')
	},

	render: function() {
		return (
			React.createElement("div", {className: "register-container m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "col-sm-12 col-middle"}, 							
							React.createElement("h3", null, "Password reset expired"), 
							React.createElement("p", null, React.createElement("small", null, "This password reset link has expired. Please request a new password reset.")), 
							React.createElement("button", {onClick: this.resetClick, ref: "button", className: "btn btn-primary btn-cons m-t-10", type: "submit"}, "Request password reset")
						)
					)
				)
			)
		);
	}
})

module.exports = PasswordResetDone

},{"pubsub-js":10,"react":235}],252:[function(require,module,exports){
var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var SubscriptionStatus = require('./app-subscriptionstatus.jsx');
var mustBeUser = require('../../utils/mustBeUser.jsx')

var PaymentHistory = React.createClass({displayName: "PaymentHistory",

	getInitialState: function(){
		return {status: 0}
	},

	timestampToDate: function(timestamp){
		var date = new Date(timestamp*1000);
		return date.toString().substr(0,15)
	},

	render: function() {

		var crumb_links = [
			{url : '/accounts/settings/', name: 'Account', className: ''},
			{url : '/accounts/history/', name: 'Payment History', className: 'active'}
		]

		var inner = (
			React.createElement("div", {className: "inner"}, 
            	React.createElement(Breadcrumb, {links: crumb_links}), 
                React.createElement("div", {className: "row"}, 
                    React.createElement("div", {className: "col-xs-12"}, 
                        React.createElement("div", {className: "panel panel-transparent"}, 
                            React.createElement("div", {className: "panel-heading"}, 
                                React.createElement("div", {className: "panel-title"}, "Account")
                            ), 
                            React.createElement("div", {className: "panel-body"}, 
                                React.createElement("h3", null, "Payment History")
                                
                            )
                        )
                    )
                )
            )
        )

		if (this.props.remote.loading){
			return (
				React.createElement("div", null, 
	                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                    inner
	                ), 
					React.createElement("div", {className: "container-fluid m-t-40"}, 
						React.createElement(Loading, null)
					)
				)
			)
		}

		
		var invoices = [];
		this.props.remote.invoices.forEach(function(invoice){
			var paid = '';
			if (invoice.paid && invoice.total > 0){
				paid = (
					React.createElement("div", null, React.createElement("span", {className: "label label-success"}, "Paid"), " $",  parseFloat(invoice.total / 100).toFixed(2) )
                	
                )
			}
			/*
			var credit = '';
			if (invoice.paid && invoice.total < 0){
				credit = (
					<p>
	                    <span className="label label-success">Credit</span> ${ parseFloat(invoice.total / 100).toFixed(2) }
	                </p>
	            )
			}
			*/
			invoices.push(
                React.createElement("tr", null, 
                    React.createElement("td", {className: "fixed"}, "#", invoice.id), 
                    React.createElement("td", null, this.timestampToDate(invoice.date)), 
                    React.createElement("td", null, 
                        paid
                    )
                )
	        )
		}.bind(this));

		if (invoices.length == 0){
			var table = React.createElement("p", null, "You have not made any payments yet.")
		} else {
			var table = (
				React.createElement("table", {className: "table table-striped"}, 
		            React.createElement("thead", null, 
		                React.createElement("tr", null, 
		                    React.createElement("th", null, "Transaction ID"), 
		                    React.createElement("th", null, "Date"), 
		                    React.createElement("th", null, "Amount")
		                )
		            ), 
		            React.createElement("tbody", null, 
		            	invoices
		            )
	            )
	        )
		}

		

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    inner
                ), 

				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "panel panel-transparent"}, 						    	
				    	React.createElement("div", {className: "panel-body"}, 
				    		table
				    	)
				    )
				)
			)
		);
	}

});

module.exports = mustBeUser(withAsyncState(PaymentHistory));

},{"../../utils/mustBeUser.jsx":411,"../../utils/withAsyncState.jsx":416,"../breadcrumb/app-breadcrumb.jsx":311,"../xhr/app-loading.jsx":401,"./app-subscriptionstatus.jsx":267,"react":235}],253:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var mustBeUser = require('../../utils/mustBeUser.jsx')

var Profile = React.createClass({displayName: "Profile",

	render: function() {
		return (
			React.createElement("div", null)
		);
	}
})

module.exports = mustBeUser(Profile)

},{"../../utils/mustBeUser.jsx":411,"pubsub-js":10,"react":235}],254:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var Messages = require('../form/messages.jsx')
var Button = require('../control/app-button.jsx')
var ResetPasswordForm = React.createClass({displayName: "ResetPasswordForm",

	resetClick: function(e){
		var data = {
			email: this.refs['email'].getDOMNode().value,
		}
		this.props.submitForm(data)
    e.preventDefault()
	},

	render: function() {
		return (
			React.createElement("div", null, 
      		React.createElement(Messages, {messages: this.props.messages}), 
          React.createElement("form", {id: "form-login", onSubmit: this.resetClick}, 
            React.createElement("div", {className: "row"}, 
              React.createElement("div", {className: "col-sm-12"}, 
                React.createElement("div", {className: "form-group form-group-default"}, 
                  React.createElement("label", null, "Email"), 
                  React.createElement("input", {ref: "email", "aria-required": "true", name: "email", placeholder: "Enter you account email", className: "form-control", required: "", type: "text"}), 
                	React.createElement(Messages, {field: "email", messages: this.props.messages})
                )
              )
            ), 
            React.createElement(Button, {color: "primary", type: "submit", text: "Reset Password", disabled: this.props.disabled})
          )
      )
		);
	}
})

module.exports = ResetPasswordForm

},{"../control/app-button.jsx":315,"../form/messages.jsx":328,"pubsub-js":10,"react":235}],255:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var Messages = require('../form/messages.jsx')

var ResetSent = React.createClass({displayName: "ResetSent",

  loginClick: function(){
    PubSub.publish('login')
  },

	render: function() {
		return (
        React.createElement("div", {id: "form-register"}, 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-xs-12"}, 
              React.createElement("p", null, "Please check your email for instructions to reset your password."), 
              React.createElement("p", null, "Once your password has been reset you can ", React.createElement("a", {onClick: this.loginClick}, "login"), ".")
            )
          )
        )
		);
	}
})

module.exports = ResetSent

},{"../form/messages.jsx":328,"pubsub-js":10,"react":235}],256:[function(require,module,exports){
var React = require('react')
var Link = require('react-router-component').Link
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var SubscriptionStatus = require('./app-subscriptionstatus.jsx');
var mustBeUser = require('../../utils/mustBeUser.jsx')
var role = require('../../utils/role.js')

var Settings = React.createClass({displayName: "Settings",

	getInitialState: function(){
		return {status: 0}
	},

	render: function() {

		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/accounts/settings/', name: 'Account Settings', className: 'active'}
		]

		var username = window._user.username
		var email = window._user.email

		var confirmed = 'Email address confirmed.'
		if (!role.is_active()){
			confirmed = React.createElement("div", {className: "alert alert-danger"}, "Email not confirmed! Check your inbox.")
		}

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 
		            	React.createElement(Breadcrumb, {links: crumb_links}), 
		                React.createElement("div", {className: "row"}, 
		                    React.createElement("div", {className: "col-xs-12"}, 
		                        React.createElement("div", {className: "panel panel-transparent"}, 
		                            React.createElement("div", {className: "panel-heading"}, 
		                                React.createElement("div", {className: "panel-title"}, "Account")
		                            ), 
		                            React.createElement("div", {className: "panel-body"}, 
		                                React.createElement("h3", null, "Account Settings")
		                            )
		                        )
		                    )
		                )
		            )
                ), 


				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "col-md-6"}, 
							React.createElement("div", {className: "panel"}, 						    	
								React.createElement("div", {className: "panel-heading"}, 
									React.createElement("div", {className: "panel-title"}, 
										"Account Information"
									)
								), 
						    	React.createElement("div", {className: "panel-body"}, 
						    		React.createElement("div", {className: "row m-b-10"}, 
										React.createElement("div", {className: "col-sm-4"}, 
											React.createElement("strong", null, "Username")
										), 
										React.createElement("div", {className: "col-sm-8"}, 
											username
										)
									), 
									React.createElement("div", {className: "row m-b-10"}, 
										React.createElement("div", {className: "col-sm-4"}, 
											React.createElement("strong", null, "Email")
										), 
										React.createElement("div", {className: "col-sm-8"}, 
											email
										)
									), 
									React.createElement("div", {className: "row m-b-10"}, 
										React.createElement("div", {className: "col-xs-12"}, 
											confirmed
										)
									), 
									React.createElement("div", {className: "row m-b-10"}, 
										React.createElement("div", {className: "col-sm-12"}, 
											React.createElement(Link, {href: "/accounts/password_change/"}, "Change password")
										)
									)						    		
						    	)
						    )
							
						), 
						React.createElement("div", {className: "col-md-6"}, 
							React.createElement("div", {className: "panel"}, 						    	
								React.createElement("div", {className: "panel-heading"}, 
									React.createElement("div", {className: "panel-title"}, 
										"Subscription Status"
									)
								), 
						    	React.createElement("div", {className: "panel-body"}, 
						    		React.createElement(SubscriptionStatus, {				    		
						    			async_path: "/accounts/subscription/status/?v=" + this.state.status})

						    		
						    	)
						    )
						)
					)
				)
			)
		);

	}
})

module.exports = mustBeUser(Settings)

},{"../../utils/mustBeUser.jsx":411,"../../utils/role.js":412,"../breadcrumb/app-breadcrumb.jsx":311,"./app-subscriptionstatus.jsx":267,"react":235,"react-router-component":22}],257:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var Messages = require('../form/messages.jsx')
var Button = require('../control/app-button.jsx')
var SignupForm = React.createClass({displayName: "SignupForm",

	submitClick: function(e){
		var data = this.getFormData();
		this.props.submitForm(data)
    e.preventDefault()
	},

  getFormData: function(){
    var data = {
      username: this.refs['username'].getDOMNode().value,
      email: this.refs['email'].getDOMNode().value,
      password1: this.refs['password1'].getDOMNode().value,
      password2: this.refs['password1'].getDOMNode().value,
    }
    if (this.refs['first_name'] !== undefined){
      data['first_name'] = this.refs['first_name'].getDOMNode().value
    }
    if (this.refs['last_name'] !== undefined){
      data['last_name'] = this.refs['last_name'].getDOMNode().value
    }
    if (this.refs['phone'] !== undefined){
      data['phone'] = this.refs['phone'].getDOMNode().value
    }

    return data
  },

	loginClick: function(){
		PubSub.publish('login')
	},

	render: function() {
		
    var fullName = ''
		if (this.props.require_name !== undefined && this.props.require_name){
        if (this.props.user !== undefined && this.props.user.first_name){
          var firstNameDefault = this.props.user.first_name
        } else {
          var firstNameDefault = ''
        }
        if (this.props.user !== undefined && this.props.user.last_name){
          var lastNameDefault = this.props.user.last_name
        } else {
          var lastNameDefault = ''
        }
		    var fullName = (
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-sm-6"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "First Name"), 
                React.createElement("input", {defaultValue: firstNameDefault, ref: "first_name", "aria-required": "true", name: "first_name", placeholder: "Your first name", className: "form-control", required: "", type: "text"}), 
                React.createElement(Messages, {field: "first_name", messages: this.props.messages})
              )
            ), 
            React.createElement("div", {className: "col-sm-6"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "Last Name"), 
                React.createElement("input", {defaultValue: lastNameDefault, ref: "last_name", "aria-required": "true", name: "last_name", placeholder: "Your last name", className: "form-control", required: "", type: "text"}), 
                React.createElement(Messages, {field: "last_name", messages: this.props.messages})
              )
            )
          )
        )
		}
    var phone = ''
    if (this.props.require_phone !== undefined && this.props.require_phone){
        if (this.props.user !== undefined && this.props.user.phone){
          var defaultValue = this.props.user.phone
        } else {
          var defaultValue = ''
        }
        var phone = (
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-sm-12"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "Phone Number"), 
                React.createElement("input", {defaultValue: defaultValue, ref: "phone", "aria-required": "true", name: "phone", placeholder: "Your contact phone number", className: "form-control", required: "", type: "text"}), 
                React.createElement(Messages, {field: "phone", messages: this.props.messages})
              )
            )
          )
        )
    }
    var submitBtn = React.createElement(Button, {color: "primary", type: "submit", text: "Create a new account", disabled: this.props.disabled})
    if (this.props.hideButton !== undefined && this.props.hideButton == true){
      var submitBtn = ''
    }

    var username = React.createElement("input", {ref: "username", "aria-required": "true", name: "uname", placeholder: "Desired username", className: "form-control", required: "", type: "text"})
    if (this.props.user !== undefined && this.props.user.username){
        username = React.createElement("input", {value: this.props.user.username, className: "disabled", ref: "username", "aria-required": "true", name: "uname", placeholder: "Desired username", className: "form-control", required: "", type: "text", disabled: true})  
    }

    var email = React.createElement("input", {ref: "email", "aria-required": "true", name: "email", placeholder: "Where to send account confirmation", className: "form-control", required: "", type: "text"})
    if (this.props.user !== undefined && this.props.user.email){
        email = React.createElement("input", {value: this.props.user.email, ref: "email", "aria-required": "true", name: "email", placeholder: "Where to send account confirmation", className: "form-control", required: "", type: "text", disabled: true})
    }

    var password1 = React.createElement("input", {ref: "password1", "aria-required": "true", name: "pass", placeholder: "Minimum 7 characters", className: "form-control", required: "", type: "password"})
    if (this.props.user !== undefined && this.props.user){
        password1 = React.createElement("input", {value: "********", ref: "password1", "aria-required": "true", name: "pass", placeholder: "Minimum 7 characters", className: "form-control", required: "", type: "password", disabled: true})        
    }

    var alreadyMember = React.createElement("div", {className: "pull-right"}, "Already a member? ", React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.loginClick}, "Login"))
    if (this.props.user !== undefined && this.props.user){
        alreadyMember = ''
    }

    var messages = React.createElement(Messages, {messages: this.props.messages})
    if (this.props.global_messages !== undefined && !this.props.global_messages){
      messages = ''
    }


		return (
      React.createElement("div", null, 
      messages, 
			React.createElement("form", {id: "form-register", onSubmit: this.submitClick}, 
          fullName, 
          phone, 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-sm-12"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "Username"), 
                username, 
                React.createElement(Messages, {field: "username", messages: this.props.messages})
              )
            )
          ), 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-sm-12"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "Password"), 
                password1, 
                React.createElement(Messages, {field: "password1", messages: this.props.messages})
              )
            )
          ), 
          React.createElement("div", {className: "row"}, 
            React.createElement("div", {className: "col-sm-12"}, 
              React.createElement("div", {className: "form-group form-group-default"}, 
                React.createElement("label", null, "Email"), 
                email, 
                React.createElement(Messages, {field: "email", messages: this.props.messages})
              )
            )
          ), 
          submitBtn, " ", alreadyMember
        )
      )
		);
	}
})

module.exports = SignupForm

},{"../control/app-button.jsx":315,"../form/messages.jsx":328,"pubsub-js":10,"react":235}],258:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var SignupForm = require('./app-signupform.jsx')
var LoginForm = require('./app-loginform.jsx')
var ResetForm = require('./app-resetpasswordform.jsx')
var ResetSent = require('./app-resetsent.jsx')
var getCookie = require('../../utils/get-cookie.js')
var post = require('../form/post.js')
var log = require('loglevel')

var SignupLoginModal = React.createClass({displayName: "SignupLoginModal",

    getInitialState: function(){
        return {open: false, view: 'signup', messages:[], disabled: false}
    },

    componentDidMount: function(){
        log.debug('SignupLoginModal', 'setting event handler')
        PubSub.subscribe( 'signup', function(msg, data){
            log.debug('singup publish recieved', msg, data)
            this.setState({open: true, view: 'signup', messages: [], disabled: false})
        }.bind(this));
        PubSub.subscribe( 'login', function(msg, data){
            log.debug('login publish recieved', msg, data)
            this.setState({open: true, view: 'login', messages: [], disabled: false})
        }.bind(this));
        
        PubSub.subscribe( 'reset', function(msg, data){
            log.debug('reset publish recieved', msg, data)
            this.setState({open: true, view: 'reset', messages: [], disabled: false})
        }.bind(this));
    },

    componentDidUpdate: function(){
        if (this.state.open == true){
            $('#modalSignupLogin').modal('show')
        }
    },

    signupSubmit: function(data){
        this.setState({messages: [], disabled: true})
        post('/accounts/register/', data, function(response){            
            if (response.registered){
                // redirect to profile
                this.setState({messages: response.messages})
                document.location.href = '/accounts/welcome/?confirm';
            } else {
                this.setState({messages: response.messages, disabled: false})
            }
        }.bind(this))
    },

    loginSubmit: function(data){
        this.setState({messages: [], disabled: true})
        post('/accounts/login/', data, function(response){        
            if (response.loggedin){
                // redirect to profile
                this.setState({messages: response.messages})
                if (document.location.href.indexOf('/accounts/activate/complete/') > -1
                    || document.location.href.indexOf('/accounts/reset/done/') > -1){
                    document.location.href = '/'
                } else {
                    document.location.reload()    
                }            
            } else {
                this.setState({messages: response.messages, disabled: false})
            }
        }.bind(this))
    },

    resetSubmit: function(data){
        this.setState({messages: [], disabled: true})
        post('/accounts/password_reset/', data, function(response){            
            if (response.reset){
                this.setState({messages: response.messages, open: true, view: 'reset_sent'})
            } else {
                this.setState({messages: response.messages, disabled: false})
            }
        }.bind(this))
    },

    render: function() {
        log.debug('SignupLoginModal', this.state, this.props)
        if (this.state.open == true){
            if (this.state.view == 'signup'){
                var title = 'Sign up'
                var content = React.createElement(SignupForm, {messages: this.state.messages, submitForm: this.signupSubmit, disabled: this.state.disabled})
                var message = React.createElement("h3", null, "Create a free account to access millions of ads and landers.")
            } else if (this.state.view == 'login') {
                var title = 'Login'
                var content = React.createElement(LoginForm, {messages: this.state.messages, submitForm: this.loginSubmit, disabled: this.state.disabled})
                var message = ''
            } else if (this.state.view == 'reset'){
                var title = 'Reset Password'
                var content = React.createElement(ResetForm, {messages: this.state.messages, submitForm: this.resetSubmit, disabled: this.state.disabled})
                var message = ''
            } else if (this.state.view == 'reset_sent'){
                var title = 'Reset Instruction Sent'
                var content = React.createElement(ResetSent, null)
                var message = ''
            } else {
                var title = 'Not Found'
                var content = 'Oops, something went wrong. Close this and carry on :}'
                var message = ''
            }
            return (
                React.createElement("div", {className: "modal fade fill-in disable-scroll", id: "modalSignupLogin", tabIndex: "-1", role: "dialog", "aria-labelledby": "modalSlideUpLabel", "aria-hidden": "false"}, 
                    React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true"}, 
                        React.createElement("i", {className: "fa fa-close"})
                    ), 
                    React.createElement("div", {className: "modal-dialog "}, 
                        React.createElement("div", {className: "modal-content"}, 
                            React.createElement("div", {className: "modal-header clearfix text-left"}, 
                                React.createElement("h5", null, title)
                            ), 
                            React.createElement("div", {className: "modal-body"}, 
                                content
                            )
                        )
                    )
                )
            );
        } else {
            return (React.createElement("div", null))
        }
        
    }
})

module.exports = SignupLoginModal

},{"../../utils/get-cookie.js":407,"../form/post.js":329,"./app-loginform.jsx":247,"./app-resetpasswordform.jsx":254,"./app-resetsent.jsx":255,"./app-signupform.jsx":257,"loglevel":9,"pubsub-js":10,"react":235}],259:[function(require,module,exports){
/** @jsx React.DOM */

var React = require('react');
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;

// Required Props:
// - stripe_public_key
// - logo
// - plan {name,description,amount}
// - text
// - paidCallback

var StripeButton = React.createClass({displayName: "StripeButton",
    mixins: [ReactScriptLoaderMixin],
    getScriptURL: function() {
        return 'https://checkout.stripe.com/checkout.js';
    },

    statics: {
        stripeHandler: null,
        scriptDidError: false,
    },

    // Indicates if the user has clicked on the button before the
    // the script has loaded.
    hasPendingClick: false,

    onScriptLoaded: function() {
        // Initialize the Stripe handler on the first onScriptLoaded call.
        // This handler is shared by all StripeButtons on the page.
        if (!StripeButton.stripeHandler) {
            StripeButton.stripeHandler = StripeCheckout.configure({
                panelLabel: 'Pay {{amount}} / Month',
                key: this.props.stripe_key,
                image: this.props.logo,
                email: this.props.email,
                token: function(token) {
                    this.props.paidCallback(token.id, this.props.plan.id)
                }.bind(this)
            });
            if (this.hasPendingClick) {
                this.showStripeDialog();
            }
        }
    },
    showLoadingDialog: function() {
        // show a loading dialog
    },
    hideLoadingDialog: function() {
        // hide the loading dialog
    },
    showStripeDialog: function() {
        this.hideLoadingDialog();
        StripeButton.stripeHandler.open({
                name: this.props.plan.name,
                description: this.props.plan.description,
                amount: this.props.plan.amount
            });
    },
    onScriptError: function() {
        this.hideLoadingDialog();
        StripeButton.scriptDidError = true;
    },
    onClick: function() {
        if (StripeButton.scriptDidError) {
            console.log('failed to load script');
        } else if (StripeButton.stripeHandler) {
            this.showStripeDialog();
        } else {
            this.showLoadingDialog();
            this.hasPendingClick = true;
        }
    },
    render: function() {
        return (
            React.createElement("button", {className: this.props.className, onClick: this.onClick}, this.props.text)
        );
    }
});

module.exports = StripeButton;

},{"../../utils/ReactScriptLoader.js":405,"react":235}],260:[function(require,module,exports){
var React = require('react');
var PubSub = require('pubsub-js');
var post = require('../form/post.js');
var Messages = require('../form/messages.jsx');
var StripeButton = require('./app-stripebutton.jsx');
var role = require('../../utils/role.js')
var SignupForm = require('./app-signupform.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Button = require('../control/app-button.jsx');

/**
 * Live version of the subscription page using stripe.js
 *
 */

var Subscribe = React.createClass({displayName: "Subscribe",

	mixins: [ReactScriptLoaderMixin],

    getScriptURL: function() {
        return 'https://checkout.stripe.com/checkout.js';
    },

    statics: {
        stripeHandler: null,
        scriptDidError: false,
    },

    // Indicates if the user has clicked on the button before the
    // the script has loaded.
    hasPendingClick: false,
    scriptLoaded: false,

    getInitialState: function(){
		return {
			user: window._user,
			messages: [], 
			disabled: false, 
			//when payment modal closes if payment is processing the do not disable:false
			//if payment not processing then disable: false
			processing: false,  
			//stripe_key: 'pk_test_yBzcM2bMijuqGcdKeJGaS4fv',
			stripe_key: window._stripe_key,
			plan: {
				id: 'pro-monthly',
				name: 'Make Massive Pro',
				description: '$149 / Month Subscription',
				label: 'Pay {{amount}} / Month',
				amount: 14900,
			}	
		}
	},

	addStripeHandler: function(){
		Subscribe.stripeHandler = StripeCheckout.configure({
            panelLabel: this.state.plan.label,
            key: this.state.stripe_key,
            image: this.state.logo,
            email: this.state.user.email,
            token: function(token) {
                this.onPaid(token.id, this.state.plan.id)
            }.bind(this),
            closed: function(){
            	if (!this.state.processing){
            		this.setState({disabled: false})
            	}
            }.bind(this)
        });          
	},

    onScriptLoaded: function() {
        // Initialize the Stripe handler on the first onScriptLoaded call.
        // This handler is shared by all StripeButtons on the page.
        this.scriptLoaded = true
        if (this.hasPendingClick) {
	        if (!StripeButton.stripeHandler) {
	        	this.addStripeHandler()
	        }	  
	        this.setState({messages: []})  //clear any please wait messages         
            this.showStripeDialog();
        }
    },

    showStripeDialog: function() {
        this.setState({disabled: true})
        Subscribe.stripeHandler.open({
            name: this.state.plan.name,
            description: this.state.plan.description,
            amount: this.state.plan.amount
        });
    },

    onScriptError: function() {
        Subscribe.scriptDidError = true;
    },

    onClick: function() {
    	console.log('onClick', this.state, 'processing:false expected')
    	if (this.state.user === undefined || this.state.user === false){
    		//try register    		
    		this.setState({disabled:true, processing:true})	
    		var data = this.refs['user-form'].getFormData()
    		post('/accounts/register/', data, function(response){            
	            if (response.registered){
	                // start payment
	                this.setState({user: response.user, processing: false})
	                this.startPayment()
	            } else {
	                this.setState({messages: response.messages, disabled: false, processing: false})
	            }
	        }.bind(this))
    	} else {
    		this.setState({disabled:true})
    		this.startPayment()
    	}
    },

    startPayment: function(){
    	if (Subscribe.scriptDidError) {
            alert('Oops the payment gateway failed to load. Please contact support.');
        } else if (this.scriptLoaded) {
        	//update stripeHandler with update data
            this.addStripeHandler();
            this.showStripeDialog();
        } else {
            this.setState({messages: [{state: 'info', message: 'Please wait while we load the payment gateway...'}]})
            this.hasPendingClick = true;
        }
    },

	onPaid: function(token, planId) {
		var data = {
			stripe_token: token,
			plan: planId
		}
		this.setState({messages: [{state:'info', message: 'One moment while we complete your subscription...'}], processing: true})
		post('/accounts/subscribe/', data, function(response){
			this.setState({messages: response.messages})
			if (response.subscribed){
				location.href = '/accounts/welcome-pro/'
			} else {
				this.setState({processing: false, disabled: false})
			}
		}.bind(this))
	},

	render: function() {

		if (role.is_pro()){
			// let the user know they are already pro and how to take advantage of their account
			window.location='/accounts/welcome-pro/?already=true'
			return React.createElement("div", null)
		}
		var userForm = ''

		if (role.is_guest()){
			console.log('is_guest')
			// show signup form
			userForm = React.createElement(SignupForm, {global_messages: false, ref: "user-form", messages: this.state.messages, disabled: this.state.disabled, hideButton: true})
			var accountStatus = 'Create your PRO account, choose a username and password.'
		} else {
			// show pre filled signup disabled form
			console.log('is_user')
			userForm = React.createElement(SignupForm, {global_messages: false, ref: "user-form", user: window._user, messages: this.state.messages, disabled: true, hideButton: true})
			var accountStatus = 'You are logged in as ' + window._user.username + ', upgrade this account to PRO.'
		}
		var email = window._user.email
		return (
			React.createElement("div", {className: "m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid text-center"}, 
					React.createElement("h2", null, "Sign me up for Make Massive Pro"), 
					React.createElement("h4", null, "Make Massive Pro for unlimited access to all ads and landers."), 
					
					React.createElement("div", {className: "row m-t-20 text-left", style: {maxWidth: '800px', marginLeft: 'auto', marginRight: 'auto'}}, 
						React.createElement("div", {className: "col-md-7"}, 
							React.createElement("h5", null, "Account Information"), 
							accountStatus, 
							React.createElement("div", {className: "m-t-10"}, 
								userForm
							), 
							React.createElement("div", {className: "m-t-40 text-center"}, 
								React.createElement(Messages, {messages: this.state.messages}), 
								React.createElement(Button, {disabled: this.state.disabled, color: "primary", onClick: this.onClick}, "Buy Now")
							), 
							React.createElement("div", {className: "m-t-40 text-center"}, 
								React.createElement("img", {src: "static/images/payment.png"})
							)
						), 
						React.createElement("div", {className: "col-md-5"}, 
							React.createElement("div", {className: "bg-success"}, 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											React.createElement("div", {className: "panel-heading text-black hint-text"}, 
												React.createElement("div", {className: "panel-title"}, 
													"Pro Plan"
												)
											), 
											React.createElement("div", {className: "panel-body"}, 
												React.createElement("h3", {className: "p-l-20 text-white"}, "$149/month")
											)
										)
									)
								)
							), 
							React.createElement("div", {className: "bg-white"}, 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											
											React.createElement("div", {className: "panel-body"}, 
												React.createElement("p", null, "Make Massive Pro allows you unlimited access to all ads and landers displayed on the site."), 
												React.createElement("p", null, "Complete access to our daily updated collection of affiliate landers."), 
												React.createElement("p", null, "Easily download any ad in a neatly packaged zip file.")
											)
										)
									)
								), 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											React.createElement("div", {className: "panel-heading text-black hint-text"}, 
												React.createElement("div", {className: "panel-title"}, 
													"Billing Information"
												)
											), 
											React.createElement("div", {className: "panel-body"}, 
												React.createElement("p", null, "Pro subscribers are billed every month on roughly the same day of the month you first subscribed."), 
												React.createElement("p", null, "Your payment is securely processed by ", React.createElement("a", {href: "https://stripe.com/help/security", target: "_blank"}, "Stripe"), ". Stripe is fully PCI compliant and you credit card information is sent directly to them. We do not store or access your credit card details.")
											)
										)
									)
								)
							)
						)
					)
					
					
				)
			)
		);
	}
})

module.exports = Subscribe

},{"../../utils/ReactScriptLoader.js":405,"../../utils/role.js":412,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-signupform.jsx":257,"./app-stripebutton.jsx":259,"pubsub-js":10,"react":235}],261:[function(require,module,exports){
var React = require('react');
var PubSub = require('pubsub-js');
var post = require('../form/post.js');
var Messages = require('../form/messages.jsx');
var StripeButton = require('./app-stripebutton.jsx');
var role = require('../../utils/role.js')
var SignupForm = require('./app-signupform.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Button = require('../control/app-button.jsx');
var SubscribeCore = require('./app-subscribecore.jsx');

var SubscribeAMC = React.createClass({displayName: "SubscribeAMC",

	render: function() {

		var plan = {
			id: 'pro-amc-exclusive',
			name: 'Make Massive Pro',
			description: 'AMC Exclusive One Month Free Trial',
			label: 'Subscribe 30-day Trial',
		}	

		return (
			React.createElement("div", {className: "m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid text-center"}, 
					React.createElement("h2", null, "AMC Exclusive 30-day Make Massive Free Trial"), 
					React.createElement("h4", null, "Make Massive Pro for unlimited access to all ads and landers."), 
					
					React.createElement("div", {className: "row m-t-20 text-left", style: {maxWidth: '800px', marginLeft: 'auto', marginRight: 'auto'}}, 
						React.createElement("div", {className: "col-md-7"}, 
							React.createElement(SubscribeCore, {plan: plan})
						), 
						React.createElement("div", {className: "col-md-5"}, 
							React.createElement("div", {className: "bg-success"}, 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											React.createElement("div", {className: "panel-heading text-black hint-text"}, 
												React.createElement("div", {className: "panel-title"}, 
													"Pro Plan"
												)
											), 
											React.createElement("div", {className: "panel-body"}, 
												React.createElement("h3", {className: "p-l-20 text-white"}, "Free 30-day trial"), 
												React.createElement("h5", {className: "p-l-20 text-white"}, "Then $149/month")
											)
										)
									)
								)
							), 
							React.createElement("div", {className: "bg-white"}, 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											
											React.createElement("div", {className: "panel-body"}, 
												React.createElement("p", null, "30 day free trial then $149/month. Cancel at any time. Cancelled trials will still be active for the full 30 days."), 
												React.createElement("p", null, "Make Massive Pro allows you unlimited access to all ads and landers displayed on the site."), 
												React.createElement("p", null, "Complete access to our daily updated collection of affiliate landers."), 
												React.createElement("p", null, "Easily download any ad in a neatly packaged zip file.")
											)
										)
									)
								), 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											React.createElement("div", {className: "panel-heading text-black hint-text"}, 
												React.createElement("div", {className: "panel-title"}, 
													"Billing Information"
												)
											), 
											React.createElement("div", {className: "panel-body"}, 												
												React.createElement("p", null, "Pro subscribers are billed every month on roughly the same day of the month you first subscribed."), 
												React.createElement("p", null, "Your payment is securely processed by ", React.createElement("a", {href: "https://stripe.com/help/security", target: "_blank"}, "Stripe"), ". Stripe is fully PCI compliant and you credit card information is sent directly to them. We do not store or access your credit card details.")
											)
										)
									)
								)
							)
						)
					)
					
					
				)
			)
		);
	}
})

module.exports = SubscribeAMC

},{"../../utils/ReactScriptLoader.js":405,"../../utils/role.js":412,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-signupform.jsx":257,"./app-stripebutton.jsx":259,"./app-subscribecore.jsx":264,"pubsub-js":10,"react":235}],262:[function(require,module,exports){
var React = require('react');
var PubSub = require('pubsub-js');
var post = require('../form/post.js');
var Messages = require('../form/messages.jsx');
var StripeButton = require('./app-stripebutton.jsx');
var role = require('../../utils/role.js')
var SignupForm = require('./app-signupform.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Button = require('../control/app-button.jsx');
var SubscribeCore = require('./app-subscribecore.jsx');

var SubscribeAWA = React.createClass({displayName: "SubscribeAWA",

	render: function() {

		var plan = {
			id: 'pro-monthly',
			name: 'Make Massive Pro',
			description: 'AWA Exclusive 50% Off',
			label: 'Subscribe',
			coupon: 'AWAEXCLUSIVE'
		}	

		return (
			React.createElement("div", {className: "m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid text-center"}, 

					React.createElement("h2", null, "AWA Exclusive 50% Off"), 
					React.createElement("h4", null, "Make Massive Pro for unlimited access to all ads and landers."), 
					
					React.createElement("div", {className: "row m-t-20 text-left", style: {maxWidth: '800px', marginLeft: 'auto', marginRight: 'auto'}}, 
						React.createElement("div", {className: "col-md-7"}, 
							React.createElement(SubscribeCore, {plan: plan})
						), 
						React.createElement("div", {className: "col-md-5"}, 
							React.createElement("div", {className: "bg-success"}, 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											React.createElement("div", {className: "panel-heading text-black hint-text"}, 
												React.createElement("div", {className: "panel-title"}, 
													"Pro Plan"
												)
											), 
											React.createElement("div", {className: "panel-body"}, 
												React.createElement("h3", {className: "p-l-20 text-white"}, "$74.50"), 
												React.createElement("h5", {className: "p-l-20 text-white"}, "50% off first month"), 
												React.createElement("h5", {className: "p-l-20 text-white"}, "Then $149/month")
											)
										)
									)
								)
							), 
							React.createElement("div", {className: "bg-white"}, 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											
											React.createElement("div", {className: "panel-body"}, 
												React.createElement("p", null, "$74.50 then $149/month."), 
												React.createElement("p", null, "Make Massive Pro allows you unlimited access to all ads and landers displayed on the site."), 
												React.createElement("p", null, "Complete access to our daily updated collection of affiliate landers."), 
												React.createElement("p", null, "Easily download any ad in a neatly packaged zip file.")
											)
										)
									)
								), 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-xs-12"}, 
										React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
											React.createElement("div", {className: "panel-heading text-black hint-text"}, 
												React.createElement("div", {className: "panel-title"}, 
													"Billing Information"
												)
											), 
											React.createElement("div", {className: "panel-body"}, 												
												React.createElement("p", null, "Pro subscribers are billed every month on roughly the same day of the month you first subscribed."), 
												React.createElement("p", null, "Your payment is securely processed by ", React.createElement("a", {href: "https://stripe.com/help/security", target: "_blank"}, "Stripe"), ". Stripe is fully PCI compliant and you credit card information is sent directly to them. We do not store or access your credit card details.")
											)
										)
									)
								)
							)
						)
					)
					
					
				)
			)
		);
	}
})

module.exports = SubscribeAWA

},{"../../utils/ReactScriptLoader.js":405,"../../utils/role.js":412,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-signupform.jsx":257,"./app-stripebutton.jsx":259,"./app-subscribecore.jsx":264,"pubsub-js":10,"react":235}],263:[function(require,module,exports){
var React = require('react');
var PubSub = require('pubsub-js');
var post = require('../form/post.js');
var Messages = require('../form/messages.jsx');
var StripeButton = require('./app-stripebutton.jsx');
var role = require('../../utils/role.js')
var SignupForm = require('./app-signupform.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Button = require('../control/app-button.jsx');

/**
 * Unused version of the subscription page using the chargebee hosted form
 *
 */

var SubscribeChargebee = React.createClass({displayName: "SubscribeChargebee",

	mixins: [ReactScriptLoaderMixin],

    getScriptURL: function() {
        return 'https://js.chargebee.com/v1/chargebee.js';
    },

    statics: {
    	scriptDidError: false,
    },

    // Indicates if the user has clicked on the button before the
    // the script has loaded.
    hasPendingClick: false,
    scriptLoaded: false,
    

    getInitialState: function(){
		return {
			user: window._user,
			messages: [], 
			disabled: false, 
			processing: false,
			plan_id: 'pro-monthly'
		}
	},

    onScriptLoaded: function() {
        // Initialize the Stripe handler on the first onScriptLoaded call.
        // This handler is shared by all StripeButtons on the page.
        this.scriptLoaded = true
        if (this.hasPendingClick) {	               
            this.newCheckout();
        }
    },

    onScriptError: function() {
        SubscribeChargebee.scriptDidError = true;
    },

    onClick: function() {
    	this.setState({disabled:true, processing:true})
    	if (this.state.user === undefined || this.state.user === false){
    		//try register    		
    		var data = this.refs['user-form'].getFormData()
    		data['subscribe'] = true
    		post('/accounts/register/', data, function(response){            
	            if (response.registered){
	                // start payment
	                this.setState({user: response.user, processing: false})
	                this.startCheckout()
	            } else {
	                this.setState({messages: response.messages, disabled: false, processing: false})
	            }
	        }.bind(this))
    	} else {
    		var data = this.refs['user-form'].getFormData()
    		data['subscribe'] = true
    		post('/accounts/update/', data, function(response){            
	            if (response.updated){
	                // start payment
	                this.setState({user: response.user, processing: false})
	                this.startCheckout()
	            } else {
	                this.setState({messages: response.messages, disabled: false, processing: false})
	            }
	        }.bind(this))
    	}
    },

    startCheckout: function(){
    	if (SubscribeChargebee.scriptDidError) {
            alert('Oops the payment gateway failed to load. Please contact support.');
        } else if (this.scriptLoaded) {
        	this.newCheckout()
        } else {
            this.setState({messages: [{state: 'info', message: 'Please wait while we load the payment gateway...'}]})
            this.hasPendingClick = true;
        }
    },

    newCheckout: function(){
    	this.setState({messages: []})  //clear any please wait messages 
    	var data = this.refs['user-form'].getFormData()
    	data['plan_id'] = this.state.plan_id
    	post('/accounts/chargebee/new_checkout/', data, function(response){
    		if (response.error !== undefined && response.error){
    			this.setState({messages: response.messages, disabled: false, processing: false})
    		} else {
    			this.newCheckoutResponsePopupHandler(response)
    		}
    	}.bind(this))
    },

    newCheckoutResponsePopupHandler: function(response) {
	    var hostedPageId = response.hosted_page_id;
	    $('.subscribe-process').show();

		ChargeBee.bootStrapModal(response.url, 
                      response.site_name, "paymentModal").load({

			/**
			* This function is called once the checkout form is loaded in the popup.
			*/
			onLoad: function() {
				hideProcessing();
				$('.submit-btn').attr("disabled", "disabled");
			},

			/* This function will be called after subscribe button is clicked 
			* and checkout is completed in the iframe checkout page.
			*/
			onSuccess: function() {
				this.redirectCall(hostedPageId);
			}.bind(this),

			/* This function will be called after cancel button is clicked in 
			* the iframe checkout page.
			*/
			onCancel: function() {
				$(".alert-danger").show().text("Payment Aborted !!");
				$('.submit-btn').removeAttr("disabled");
			}
		});
	},

	redirectCall: function(hostedPageId){
		window.location.href = "/accounts/chargebee/confim_checkout/?id=" 
       		+ encodeURIComponent(hostedPageId);
	},

	render: function() {

		if (role.is_pro()){
			// let the user know they are already pro and how to take advantage of their account
			window.location='/accounts/welcome-pro/?already=true'
		}
		var userForm = ''

		if (role.is_guest()){
			console.log('is_guest')
			// show signup form
			userForm = (
				React.createElement(SignupForm, {
					require_name: true, 
					require_phone: true, 
					global_messages: false, 
					ref: "user-form", 
					messages: this.state.messages, 
					disabled: this.state.disabled, 
					hideButton: true})
			);
		} else {
			// show pre filled signup disabled form
			console.log('is_user')
			userForm = (
				React.createElement(SignupForm, {
					require_name: true, 
					require_phone: true, 
					global_messages: false, 
					ref: "user-form", 
					user: window._user, 
					messages: this.state.messages, 
					disabled: true, 
					hideButton: true})
			);
		}
		var email = window._user.email
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "modal fade", id: "paymentModal", tabindex: "-1", role: "dialog", "aria-labelledby": "paymentModalLabel", "aria-hidden": "true"}, 
				    React.createElement("div", {className: "modal-dialog"}, 
				        React.createElement("div", {className: "modal-content", style: {maxWidth: '540px;'}}, 
				            React.createElement("div", {className: "modal-header"}, 
				                React.createElement("h4", {className: "modal-title"}, 
				                    "Payment Information"
				                )
				            ), 
				            React.createElement("div", {className: "modal-body", "data-cb-modal-body": "body", style: "padding-left: 0px;padding-right: 0px;"}

				            )
				        )
				    )
				), 
				React.createElement("div", {className: "m-t-40 m-b-40"}, 
					React.createElement("div", {className: "container-fluid text-center"}, 
						React.createElement("h2", null, "Sign me up for Make Massive Pro"), 
						React.createElement("h4", null, "Make Massive Pro for unlimited access to all ads and landers."), 
						
						React.createElement("div", {className: "row m-t-20 text-left", style: {maxWidth: '800px', marginLeft: 'auto', marginRight: 'auto'}}, 
							React.createElement("div", {className: "col-md-7"}, 
								React.createElement("h5", null, "Account Information"), 
								userForm, 
								React.createElement("div", {className: "m-t-40 text-center"}, 
									React.createElement(Messages, {messages: this.state.messages}), 
									React.createElement(Button, {disabled: this.state.disabled, color: "primary", onClick: this.onClick}, "Proceed to Payment")
								), 
								React.createElement("div", {className: "m-t-40 text-center"}, 
									React.createElement("img", {src: "static/images/payment.png"})
								)
							), 
							React.createElement("div", {className: "col-md-5"}, 
								React.createElement("div", {className: "bg-success"}, 
									React.createElement("div", {className: "row"}, 
										React.createElement("div", {className: "col-xs-12"}, 
											React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
												React.createElement("div", {className: "panel-heading text-black hint-text"}, 
													React.createElement("div", {className: "panel-title"}, 
														"Pro Plan"
													)
												), 
												React.createElement("div", {className: "panel-body"}, 
													React.createElement("h3", {className: "p-l-20 text-white"}, "$149/month")
												)
											)
										)
									)
								), 
								React.createElement("div", {className: "bg-white"}, 
									React.createElement("div", {className: "row"}, 
										React.createElement("div", {className: "col-xs-12"}, 
											React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
												
												React.createElement("div", {className: "panel-body"}, 
													React.createElement("p", null, "Make Massive Pro allows you unlimited access to all ads and landers displayed on the site."), 
													React.createElement("p", null, "Complete access to our daily updated collection of affiliate landers."), 
													React.createElement("p", null, "Easily download any ad in a neatly packaged zip file.")
												)
											)
										)
									), 
									React.createElement("div", {className: "row"}, 
										React.createElement("div", {className: "col-xs-12"}, 
											React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
												React.createElement("div", {className: "panel-heading text-black hint-text"}, 
													React.createElement("div", {className: "panel-title"}, 
														"Billing Information"
													)
												), 
												React.createElement("div", {className: "panel-body"}, 
													React.createElement("p", null, "Pro subscribers are billed every month on roughly the same day of the month you first subscribed."), 
													React.createElement("p", null, "Your payment is securely processed by ", React.createElement("a", {href: "https://stripe.com/help/security", target: "_blank"}, "Stripe"), ". Stripe is fully PCI compliant and you credit card information is sent directly to them. We do not store or access your credit card details.")
												)
											)
										)
									)
								)
							)
						)											
					)
				)
			)
		);
	}
})

module.exports = SubscribeChargebee

},{"../../utils/ReactScriptLoader.js":405,"../../utils/role.js":412,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-signupform.jsx":257,"./app-stripebutton.jsx":259,"pubsub-js":10,"react":235}],264:[function(require,module,exports){
var React = require('react');
var PubSub = require('pubsub-js');
var post = require('../form/post.js');
var Messages = require('../form/messages.jsx');
var StripeButton = require('./app-stripebutton.jsx');
var role = require('../../utils/role.js')
var SignupForm = require('./app-signupform.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Button = require('../control/app-button.jsx');

/**
 * Abstracted version of the subscription page using stripe.js
 *
 * To be used via composition method to create custom subscription layouts.
 */

var SubscribeCore = React.createClass({displayName: "SubscribeCore",

	mixins: [ReactScriptLoaderMixin],

    getScriptURL: function() {
        return 'https://checkout.stripe.com/checkout.js';
    },

    statics: {
        stripeHandler: null,
        scriptDidError: false,
    },

    // Indicates if the user has clicked on the button before the
    // the script has loaded.
    hasPendingClick: false,
    scriptLoaded: false,

    getInitialState: function(){
    	var plan = false
    	if (this.props.plan !== undefined && this.props.plan){
    		plan = this.props.plan
    	}
		return {
			user: window._user,
			messages: [], 
			disabled: false, 
			//when payment modal closes if payment is processing the do not disable:false
			//if payment not processing then disable: false
			processing: false,  
			//stripe_key: 'pk_test_yBzcM2bMijuqGcdKeJGaS4fv',
			stripe_key: window._stripe_key,
			plan: plan
		}
	},

	addStripeHandler: function(){
		SubscribeCore.stripeHandler = StripeCheckout.configure({
            panelLabel: this.state.plan.label,
            key: this.state.stripe_key,
            image: this.state.logo,
            email: this.state.user.email,
            token: function(token) {
                this.onPaid(token.id, this.state.plan.id)
            }.bind(this),
            closed: function(){
            	if (!this.state.processing){
            		this.setState({disabled: false})
            	}
            }.bind(this)
        });          
	},

    onScriptLoaded: function() {
        // Initialize the Stripe handler on the first onScriptLoaded call.
        // This handler is shared by all StripeButtons on the page.
        this.scriptLoaded = true
        if (this.hasPendingClick) {
	        if (!StripeButton.stripeHandler) {
	        	this.addStripeHandler()
	        }	  
	        this.setState({messages: []})  //clear any please wait messages         
            this.showStripeDialog();
        }
    },

    showStripeDialog: function() {
        this.setState({disabled: true})
        SubscribeCore.stripeHandler.open({
            name: this.state.plan.name,
            description: this.state.plan.description,
            amount: this.state.plan.amount
        });
    },

    onScriptError: function() {
        SubscribeCore.scriptDidError = true;
    },

    onClick: function() {
    	console.log('onClick', this.state, 'processing:false expected')
    	if (this.state.user === undefined || this.state.user === false){
    		//try register    		
    		this.setState({disabled:true, processing:true})	
    		var data = this.refs['user-form'].getFormData()
    		post('/accounts/register/', data, function(response){            
	            if (response.registered){
	                // start payment
	                this.setState({user: response.user, processing: false})
	                this.startPayment()
	            } else {
	                this.setState({messages: response.messages, disabled: false, processing: false})
	            }
	        }.bind(this))
    	} else {
    		this.setState({disabled:true})
    		this.startPayment()
    	}
    },

    startPayment: function(){
    	if (SubscribeCore.scriptDidError) {
            alert('Oops the payment gateway failed to load. Please contact support.');
        } else if (this.scriptLoaded) {
        	//update stripeHandler with update data
            this.addStripeHandler();
            this.showStripeDialog();
        } else {
            this.setState({messages: [{state: 'info', message: 'Please wait while we load the payment gateway...'}]})
            this.hasPendingClick = true;
        }
    },

	onPaid: function(token, planId) {
		var data = {
			stripe_token: token,
			plan: planId,
			coupon: false,	
		}
		if (this.state.plan.coupon !== undefined){
			data['coupon'] = this.state.plan.coupon
		}
		this.setState({messages: [{state:'info', message: 'One moment while we complete your subscription...'}], processing: true})
		post('/accounts/subscribe/', data, function(response){
			this.setState({messages: response.messages})
			if (response.subscribed){
				location.href = '/accounts/welcome-pro/'
			} else {
				this.setState({processing: false, disabled: false})
			}
		}.bind(this))
	},

	render: function() {

		var buttonText = 'Buy Now'
		if (this.props.button_text !== undefined && this.props.button_text){
			buttonText = this.props.button_text
		}

		if (role.is_pro()){
			// let the user know they are already pro and how to take advantage of their account
			window.location='/accounts/welcome-pro/?already=true'
			return React.createElement("div", null)
		}
		var userForm = ''

		if (role.is_guest()){
			console.log('is_guest')
			// show signup form
			userForm = React.createElement(SignupForm, {global_messages: false, ref: "user-form", messages: this.state.messages, disabled: this.state.disabled, hideButton: true})
			var accountStatus = 'Create your PRO account, choose a username and password.'
		} else {
			// show pre filled signup disabled form
			console.log('is_user')
			userForm = React.createElement(SignupForm, {global_messages: false, ref: "user-form", user: window._user, messages: this.state.messages, disabled: true, hideButton: true})
			var accountStatus = 'You are logged in as ' + window._user.username + ', upgrade this account to PRO.'
		}
		var email = window._user.email
		return (
			React.createElement("div", null, 
				React.createElement("h5", null, "Account Information"), 
				accountStatus, 
				React.createElement("div", {className: "m-t-10"}, 
					userForm
				), 
				React.createElement("div", {className: "m-t-40 text-center"}, 
					React.createElement(Messages, {messages: this.state.messages}), 
					React.createElement(Button, {disabled: this.state.disabled, color: "primary", onClick: this.onClick}, buttonText)
				), 
				React.createElement("div", {className: "m-t-40 text-center"}, 
					React.createElement("img", {src: "static/images/payment.png"})
				)
			)
			
		);
	}
})

module.exports = SubscribeCore

},{"../../utils/ReactScriptLoader.js":405,"../../utils/role.js":412,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-signupform.jsx":257,"./app-stripebutton.jsx":259,"pubsub-js":10,"react":235}],265:[function(require,module,exports){
var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Messages = require('../form/messages.jsx');
var Button = require('../control/app-button.jsx');
var SubscriptionStatus = require('./app-subscriptionstatus.jsx');
var mustBeUser = require('../../utils/mustBeUser.jsx')

var SubscriptionCancel = React.createClass({displayName: "SubscriptionCancel",

	getInitialState: function(){
		return {messages: [], disabled: false, status: 0}
	},

    cancelClick: function(){
		this.setState({
			messages: [{state: 'info', message:'Please wait, cancelling subscription...'}], 
			disabled: true,
		});
		post('/accounts/subscription/cancel/' + this.props.subscription_id + '/', {}, function(response){
			response.disabled = false
			response.status = this.state.status + 1
			this.setState(response)
		}.bind(this))
    },

    render: function() {

		var crumb_links = [
			{url : '/accounts/settings/', name: 'Account', className: ''},
			{url : '/accounts/cancel/', name: 'Cancel Subscription', className: 'active'}
		]

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 
		            	React.createElement(Breadcrumb, {links: crumb_links}), 
		                React.createElement("div", {className: "row"}, 
		                    React.createElement("div", {className: "col-xs-12"}, 
		                        React.createElement("div", {className: "panel panel-transparent"}, 
		                            React.createElement("div", {className: "panel-heading"}, 
		                                React.createElement("div", {className: "panel-title"}, "Account")
		                            ), 
		                            React.createElement("div", {className: "panel-body"}, 
		                                React.createElement("h3", null, "Cancel Subscription"), 
		                                React.createElement("div", {className: "m-t-40"}, 
		                                	React.createElement("p", null, "Use to button below to cancel your subscription."), 
		                                	React.createElement("p", null, "Your account will still be active until the end of the subscription period."), 
		                                	React.createElement("div", {className: "m-t-20"}, 
		                                		React.createElement(Messages, {messages: this.state.messages}), 
							    				React.createElement(Button, {color: "danger", disabled: this.state.disabled, onClick: this.cancelClick}, "Cancel Subscription")
							    			)
							    		)
		                            )
		                        )
		                    )
		                )
		            )
                ), 

				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "panel panel-transparent"}, 						    	
						React.createElement("div", {className: "panel-heading"}, 
							React.createElement("div", {className: "panel-title"}, 
								"Subscription Status"
							)
						), 
				    	React.createElement("div", {className: "panel-body"}, 
				    		React.createElement(SubscriptionStatus, {				    		
				    			async_path: "/accounts/subscription/status/" + this.props.subscription_id + "/?v=" + this.state.status})

				    		
				    	)
				    )
				)
			)
		);
	}

});

module.exports = mustBeUser(SubscriptionCancel);

},{"../../utils/ReactScriptLoader.js":405,"../../utils/mustBeUser.jsx":411,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-subscriptionstatus.jsx":267,"react":235}],266:[function(require,module,exports){
var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Messages = require('../form/messages.jsx');
var Button = require('../control/app-button.jsx');
var SubscriptionStatus = require('./app-subscriptionstatus.jsx');
var mustBeUser = require('../../utils/mustBeUser.jsx')

var SubscriptionReactivate = React.createClass({displayName: "SubscriptionReactivate",

	getInitialState: function(){
		return {messages: [], disabled: false, status: 0}
	},

	reactivateClick: function(){
		this.setState({
			messages: [{state: 'info', message:'Please wait, reactivating subscription...'}], 
			disabled: true,
		});
		post('/accounts/subscription/reactivate/' + this.props.subscription_id + '/', {}, function(response){
			response.disabled = false
			response.status = this.state.status + 1
			this.setState(response)
		}.bind(this))
	},

    render: function() {

		var crumb_links = [
			{url : '/accounts/settings/', name: 'Account', className: ''},
			{url : '/accounts/reactivate/', name: 'Reactivate Subscription', className: 'active'}
		]

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 
		            	React.createElement(Breadcrumb, {links: crumb_links}), 
		                React.createElement("div", {className: "row"}, 
		                    React.createElement("div", {className: "col-xs-12"}, 
		                        React.createElement("div", {className: "panel panel-transparent"}, 
		                            React.createElement("div", {className: "panel-heading"}, 
		                                React.createElement("div", {className: "panel-title"}, "Account")
		                            ), 
		                            React.createElement("div", {className: "panel-body"}, 
		                                React.createElement("h3", null, "Reactivate Subscription"), 
		                                React.createElement("div", {className: "m-t-40"}, 
		                                	React.createElement("p", null, "Use to button below to reactivate your cancelled subscription."), 
		                                	React.createElement("p", null, "By reactivating your subscription you will continue to be billed until you cancel."), 
		                                	React.createElement("div", {className: "m-t-20"}, 
		                                		React.createElement(Messages, {messages: this.state.messages}), 
							    				React.createElement(Button, {color: "success", disabled: this.state.disabled, onClick: this.reactivateClick}, "Reactivate Subscription")
							    			)
							    		)
		                            )
		                        )
		                    )
		                )
		            )
                ), 

				React.createElement("div", {className: "container-fluid"}, 
					React.createElement("div", {className: "panel panel-transparent"}, 						    	
						React.createElement("div", {className: "panel-heading"}, 
							React.createElement("div", {className: "panel-title"}, 
								"Subscription Status"
							)
						), 
				    	React.createElement("div", {className: "panel-body"}, 
				    		React.createElement(SubscriptionStatus, {				    		
				    			async_path: "/accounts/subscription/status/" + this.props.subscription_id + "/?v=" + this.state.status})
				    	)
				    )
				)
			)
		);
	}

});

module.exports = mustBeUser(SubscriptionReactivate);

},{"../../utils/ReactScriptLoader.js":405,"../../utils/mustBeUser.jsx":411,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"./app-subscriptionstatus.jsx":267,"react":235}],267:[function(require,module,exports){
var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var post = require('../form/post.js')
var Messages = require('../form/messages.jsx');
var Button = require('../control/app-button.jsx')
var Link = require('react-router-component').Link

var SubscriptionStatus = React.createClass({displayName: "SubscriptionStatus",

	timestampToDate: function(timestamp){
		var date = new Date(timestamp*1000);
		return date.toString().substr(0,15)
	},

    render: function() {

		if (this.props.remote.loading){
			return (
				React.createElement(Loading, null)
			)
		}
		
		subscriptions = []

		console.log('remote props', this.props.remote)

		if (!this.props.remote.customer || this.props.remote.customer.latest_subscriptions.length == 0){
			return (
				React.createElement("div", null, 
					React.createElement("p", null, "Upgade to Make Massive Pro to get unlimited access to all ads and landers."), 
					React.createElement("div", null, React.createElement(Link, {href: "/accounts/subscribe/", className: "btn btn-primary"}, "Upgrade to Pro"))
				)
			)
		}

		var status = ''

		for (var i = 0; i < this.props.remote.customer.latest_subscriptions.length; i++){

			var active = false
			var canceled = false
			var non_renewing = false
			

			var currentCard = ''			

			var subscription = this.props.remote.customer.latest_subscriptions[i]

			var reactivateSubscription = (
				React.createElement("div", {className: "m-t-10"}, 
					React.createElement(Link, {href: "/accounts/subscription/reactivate/" + subscription.id + "/"}, "Reactivate Subscription")
				)
			)
			
			var cancelAccount = (
				React.createElement("div", {className: "m-t-10"}, 
					React.createElement(Link, {href: "/accounts/subscription/cancel/" + subscription.id + "/", className: "text-danger"}, "Cancel Subscription")
				)
			)
					

			var current_term_end = ''
			if (subscription.current_term_end){
				current_term_end = this.timestampToDate(subscription.current_term_end)
			}
			var trial_end = ''
			if (subscription.trial_end){
				trial_end = this.timestampToDate(subscription.trial_end)
			}
			var current_term_start = ''
			if (subscription.current_term_start){
				current_term_start = this.timestampToDate(subscription.current_term_start)
			}
			
			if (subscription.status == 'future'){
				status = (
					React.createElement("div", null, 
	                    "Your subscription will start on ", React.createElement("strong", null,  current_term_start ), "."
	                )
	            )

			} else if (subscription.status == 'in_trial'){
				var active = true
				status = (
					React.createElement("div", null, 
                        "You have a trial subscription until ", React.createElement("strong", null, trial_end), "."
                    )
                )

			} else if (subscription.status == 'active'){
				var active = true
				status = (
					React.createElement("div", null, 
	                    "Your subscription will automatically renew on ", React.createElement("strong", null,  current_term_end ), "."
	                )
	            )
	            
			} else if (subscription.status == 'non_renewing'){
				non_renewing = true	
				status = (
					React.createElement("div", null, 
	                    "Your subscription has been ", React.createElement("strong", null, "canceled"), " but you can continue to use the site until ", React.createElement("strong", null,  current_term_end ), "."
	                )
	            )
			} else if (subscription.status == 'cancelled'){
				canceled = true
				status = (
					React.createElement("div", null, 
						React.createElement("div", null, 
                            "Your subscription to Make Massive Pro has canceled and ended."
                        ), 
                        React.createElement("div", null, 
                        	React.createElement(Link, {href: "/accounts/subscribe/", className: "btn btn-primary"}, "Renew Your Subscription")
                        )
                    )
				)
			}		

			var links = []
			if (this.props.remote.customer){
				if (non_renewing){
					links.push(reactivateSubscription)
				}
				links.push(paymentHistory)
				if (active){					
					links.push(changeCard)
					links.push(cancelAccount)
				}
			}
			
			

			subscriptions.push(
				React.createElement("div", {className: "p-b-10 m-b-10 b-b b-grey"}, 
					React.createElement("div", {className: "m-b-10"}, "Plan ID: ", subscription.plan_id), 
	                status, 
					currentCard, 
					React.createElement("div", null, 
						links
					)
				)
			);
		}

		var paymentHistory = (
			React.createElement("div", {className: "m-t-10"}, 
				React.createElement(Link, {href: "/accounts/payment_history/"}, "View Payment History")
			)
		)

		var changeCard = (
			React.createElement("div", {className: "m-t-10"}, 
				React.createElement(Link, {href: "/accounts/change_card/"}, "Change Payment Method")
			)
		)	

		if (this.props.remote.customer.card_kind && this.props.remote.customer.card_last_4){
			currentCard = (
				React.createElement("div", null, 
					React.createElement("p", null, "Current card on file is a ", React.createElement("strong", null, this.props.remote.customer.card_kind), " ending in the digits ", React.createElement("strong", null, this.props.remote.customer.card_last_4), "."), 
					React.createElement("p", null, "We do not store your full card details. You card details are stored by Stripe who are fully PCI compliant.")
				)
			)
		}

		return (
			React.createElement("div", null, 
				React.createElement("div", null, subscriptions), 
				currentCard, 
				changeCard, 
				paymentHistory
				
			)
		)

	}

});

module.exports = withAsyncState(SubscriptionStatus);

},{"../../utils/ReactScriptLoader.js":405,"../../utils/withAsyncState.jsx":416,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],268:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var Link = require('react-router-component').Link
var role = require('../../utils/role.js')
var UserWidget = React.createClass({displayName: "UserWidget",

  loginClick: function(){
      PubSub.publish('login', {})
  },

  signupClick: function(){
      PubSub.publish('signup', {})
  },

  componentDidMount: function(){
      if (role.is_logged_in() && !role.is_active()){          
          setTimeout(function(){
              PubSub.publish('warning', {message: 'Please check your inbox to confirm your account.', pgn_type: 'pgn-simple', position: 'top-right'})                
          }, 1000)                    
      }
  },

  render: function() {

    if (!role.is_logged_in()){
      return (
        React.createElement("div", {id: "user-widget"}, 
            React.createElement("div", {className: "p-r-20 pull-left"}, 
                React.createElement("a", {className: "user-widget-link", onClick: this.loginClick}, 
                    "Login"
                )
            ), 
            React.createElement("div", {className: "pull-left"}, 
                React.createElement("a", {className: "user-widget-link", onClick: this.signupClick}, 
                    "Sign up"
                )
            )
        ) 
      )
    } else {

      var username = window._user.username;

      return (
        React.createElement("div", {id: "user-widget", className: "pull-right"}, 
          React.createElement("div", {className: "dropdown pull-right"}, 
            React.createElement("button", {className: "profile-dropdown-toggle", type: "button", "data-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": "false"}, 
              React.createElement("span", null, 
                React.createElement("span", {className: "p-r-20"}, username), 
                React.createElement("i", {className: "fa fa-caret-down"})
              )
            ), 
            React.createElement("ul", {className: "dropdown-menu profile-dropdown", role: "menu"}, 
              React.createElement("li", {className: "hidden"}, React.createElement(Link, {href: "/accounts/profile/"}, React.createElement("i", {className: "fa fa-user"}), " Profile")
              ), 
              
              React.createElement("li", null, React.createElement(Link, {href: "/accounts/settings/"}, React.createElement("i", {className: "fa fa-cog"}), " Settings")
              ), 
              React.createElement("li", {className: "bg-master-lighter"}, 
                React.createElement("a", {href: "/accounts/logout/", className: "clearfix"}, 
                  React.createElement("span", {className: "pull-left"}, "Logout"), 
                  React.createElement("span", {className: "pull-right"}, React.createElement("i", {className: "pg-power"}))
                )
              )
            )
          )
        )
      );
    }
  }
})

module.exports = UserWidget

},{"../../utils/role.js":412,"pubsub-js":10,"react":235,"react-router-component":22}],269:[function(require,module,exports){
var React = require('react');
var PubSub = require('pubsub-js')
var Link = require('react-router-component').Link
var HelpTimeline = require('../help/app-helptimeline.jsx')

var Welcome = React.createClass({displayName: "Welcome",

	showLightbox: function(key){
		this.refs['lightbox'].show(key)
	},

	render: function() {

		var imgStyle = {
			'boxShadow': '0 1px 2px #aaa'
		}

		var reminder = ''
		if (window._user !== undefined && window._user !== false){
          if (!window._user.is_active){
          	var reminder = (
          		React.createElement("div", {className: "m-t-20 m-b-40 text-left"}, 
          			React.createElement("div", {className: "alert alert-success", role: "alert"}, 
						React.createElement("strong", null, "Account Created: "), "Please check your inbox to confirm your Make Massive account."
					)
				)
			)
          }
        }
        
        if (window.location.search.indexOf('?confirm') > -1){
        	var reminder = (
        		React.createElement("div", {className: "m-t-20 m-b-40 text-left"}, 
        			React.createElement("div", {className: "alert alert-success", role: "alert"}, 
						React.createElement("strong", null, "Account Created: "), "Please check your inbox to confirm your Make Massive account."
					)
				)
			)
        }

		return (
			
			React.createElement("div", {className: "container-fluid m-t-20 m-b-20"}, 
				{ /* NOT USING LIGHTBOX AT THIS TIME
				<Lightbox ref="lightbox">
	                <img key="homepage" className="img-responsive" src="static/welcome/original/homepage-min.png" />
	                <img key="nicesearch" className="img-responsive" src="static/welcome/original/nicesearch-min.png" />
	            </Lightbox>
	        	*/ }, 

				React.createElement("div", {className: "text-center"}, 
					React.createElement("h2", null, "Welcome to Make Massive"), 
					React.createElement("h4", null, "A quick introduction to get the most from Make Massive.")
				), 

				
				reminder, 
				

				React.createElement(HelpTimeline, null)
				
			)
		);
	}

});

module.exports = Welcome;

},{"../help/app-helptimeline.jsx":333,"pubsub-js":10,"react":235,"react-router-component":22}],270:[function(require,module,exports){
var React = require('react');
var Link = require('react-router-component').Link

var WelcomePro = React.createClass({displayName: "WelcomePro",

	render: function() {

		if (window.location.search.indexOf('?already') > -1){
        	var reminder = (
        		React.createElement("div", {className: "m-t-20 m-b-40 text-left"}, 
        			React.createElement("div", {className: "alert alert-success", role: "alert"}, 
						"You are already a Make Massive Pro member. If you have any questions please contact ", React.createElement(Link, {href: "/support/"}, "support.")			
					)
				)
			)
        }

		return (
			React.createElement("div", {className: "m-t-40 m-b-40"}, 
				React.createElement("div", {className: "container-fluid text-center"}, 
					React.createElement("h2", null, "Welcome to Make Massive Pro"), 
					React.createElement("h4", null, "You now have unlimited access to all ads and landers."), 

					reminder, 

					React.createElement("div", {className: "row text-left"}, 

						React.createElement("div", {className: "col-md-offset-3 col-md-6 text-left m-t-20"}, 
							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", null, "How to download ads")
								), 
								React.createElement("div", {className: "card-description"}, 
									React.createElement("p", null, "With your Pro account you can easily download any ad on Make Massive." + ' ' + 
									"The text and images will be packaged in a zipfile, use winzip or another file extractor" + ' ' +
									"to extract the contents on to your hard drive." + ' ' +
									"There are two ways you can download a ad:"
									), 
									React.createElement("p", null, "1) When viewing ads in a grid for example on a offer page in the ads sections. Below each" + ' ' +
									"ad you will see a 'Download Ad' link, click this link to start the download."), 
									React.createElement("p", null, "2) When viewing ads details in the popup sidebar you will see a download button at the top" + ' ' +
									"click this button to start the download."), 
									React.createElement("p", null)
								)
							), 

							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", {className: "m-t-20"}, "How to visit landers")
								), 
								React.createElement("div", {className: "card-description"}, 
									React.createElement("p", null, "With your Pro account you can visit and get the URL of any lander. Visiting a lander is similar" + ' ' +
									"to downloading a ad. There are two ways to visit a lander:"
									
									), 
									React.createElement("p", null, "1) When viewing landers in a grid for example on a traffic source page in the landers sections." + ' ' + 
									"Below each lander you will see a 'Visit Lander' link, click this link to open the visit dialog."), 
									React.createElement("p", null, "2) When viewing landers details in the popup sidebar you will see a visit button at the top" + ' ' +
									"click this button to open the visit dialog."), 
									React.createElement("p", null, React.createElement("b", null, "The visit dialog")), 
									React.createElement("p", null, "The visit dialog opens when you click the 'Visit Lander' link or button. The dialog provides you" + ' ' +
									"with the URL of the lander which you can click to open the lander in a new page. The visit dialog alow" + ' ' +
									"has a link to a full size screenshot of the original lander. This can be useful to view the entire lander" + ' ' +
									"if it is no longer accessible at the original URL.")
								)
							), 

							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", {className: "m-t-20"}, "Here to help")
								), 
								React.createElement("div", {className: "card-description"}, 
									React.createElement("p", null, "The Make Massive team is here to help you and your affiliate business"), 
									React.createElement("p", null, "We have years of experience running advertising campaigns on many different traffic" + ' ' +
									"sources and in many different niches"), 
									React.createElement("p", null, "Contact us at pro@makemassive.com for dedicated priority support.")
								)
							)
						)
					)
				)
			)
		);
	}

});

module.exports = WelcomePro;

},{"react":235,"react-router-component":22}],271:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var AdImage = require('./app-adimage.jsx')
var AdText = require('./app-adtext.jsx')
var AdFlash = require('./app-adflash.jsx')

var log = require('loglevel');

var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin
var role = require('../../utils/role.js')
var PubSub = require('pubsub-js')

var merge = function() {
    var obj = {},
        i = 0,
        il = arguments.length,
        key;
    for (; i < il; i++) {
        for (key in arguments[i]) {
            if (arguments[i].hasOwnProperty(key)) {
                obj[key] = arguments[i][key];
            }
        }
    }
    return obj;
};

/**
* Container for AdText, AdFlash, AdImage. Styled as a card and supports scaling for use in Grid
*
*/ 
var Ad = React.createClass({displayName: "Ad",

	mixins: [NavigatableMixin],

	downloadClick: function(ad_hash){
		if (role.is_pro()){
			window.open('/ad/' + ad_hash + '/download/', "_blank")
		} else {
			PubSub.publish('pro-required', {view: 'lander'})
		}
	},

	adClick: function(){
		if (this.props.no_click !== undefined && this.props.no_click){
			return
		}
		// assign ad view based on current ad path
		if (typeof(this.props.path) != 'undefined'){
			var url = this.props.path
		} else {
			// no path when viewing AdFeature in AdView modal
			log.info('No ad path. Do nothing.')
			return
		}
		// url should be subset of current path, modal should load via app-overlay.jsx routes
		if (this.props.navigate !== undefined){
			this.props.navigate(url)
		} else {
			this.navigate(url, function(err) {
				if (err) {
					throw err;
				}
			});
		}
	},

	overlayClick: function(){
		console.log('overlay click')
		this.adClick()
	},

	getDefaultProps: function(){
		return {
			style: {
				'overflow':'hidden'
			}
		}
	},

	render: function() {

		var adUnitStyle = {
			//'border': '1px solid #ccc',
			marginLeft: 'auto',
			marginRight: 'auto',		
			boxShadow: '0 1px 2px #aaa',	
			padding: '10px',
			backgroundColor: 'white',
		}

		var adCont = {
			overflow: 'hidden',
			backgroundColor: 'white',
		}

		var overlayStyle = {
			position: 'absolute',
			top: '0px',
			left: '0px',
			cursor: 'pointer',
		}

		var metaStyle = {
			paddingTop: '12px',
			paddingLeft: '10px',
			color: '#777',
			lineHeight: '20px'
		}

		var infoStyle = {
			position: 'absolute',
			bottom: '0px',
			left: '0px',
			/*
			backgroundColor: 'white',
			'-ms-filter': "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)",
			'filter': 'alpha(opacity=70)',
			'-moz-opacity': 0.7,
			'-khtml-opacity': 0.7,
			'opacity': 0.7,
			*/
		}

		adUnitStyle = merge(adUnitStyle, this.props.style)

		if (this.props.textAd){
			adCont['border'] = '1px solid #F5F5F5'
		}

		if (typeof this.props.newWidth == 'undefined'){
			scale = 1;
		} else {
			var contWidth = this.props.newWidth - 20 // new width - padding x2
			var contHeight = this.props.newHeight - 20
			if (this.props.fit == 'height'){
				scale = contHeight / this.props.height;	
			} else {
				scale = contWidth / this.props.width;	
			}
			
			adUnitStyle['width'] = this.props.newWidth;
					
			adCont['width'] = contWidth
			adCont['height'] = this.props.newHeight - 20 // new height - padding x2

			overlayStyle['width'] = this.props.newWidth;
			overlayStyle['height'] = this.props.newHeight;

			if (this.props.meta !== undefined && this.props.meta){
				adUnitStyle['height'] = this.props.newHeight + this.props.metaHeight;
			}
			

			//adUnitStyle['height'] = this.props.newHeight;
			//overlayStyle['height'] = this.props.newHeight;			
			//infoStyle['height'] = '20px'
		}
		

		var children = React.Children.map(this.props.children, function(child){
			newProps = child.props
			newProps.scale = scale
			return React.addons.cloneWithProps(child, newProps)
		})
		
		/*
		<div style={metaStyle}>
			Hello World
		</div>

		<div style={infoStyle}>
			Hello World
		</div>
		*/

		var countries = []
		if (this.props.meta !== undefined){
			if (this.props.meta.countries !== undefined){
				var countries = this.props.meta.countries.split(',')
				if (countries.length <= 7){
					countries = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-globe p-r-10", title: "Target countries"}), countries.join(' ')]				
				} else {
					countries = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-globe p-r-10", title: "Target countries"}), React.createElement("span", {style: {cursor: 'pointer'}, title: countries.join(' ')}, countries.length, " countries")]				
				}
			}
		}

		var lastSeen = []
		if (this.props.meta !== undefined){
			if (this.props.meta.last_seen !== undefined){
				lastSeen = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-eye p-r-10", title: "Last seen"}), 'Last seen ' + this.props.meta.last_seen]				
			}
		}

		var dimensions = []
		if (this.props.meta !== undefined){
			if (this.props.meta.dimensions !== undefined){
				dimensions = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-arrows-alt p-r-10", title: "Dimensions"}), this.props.meta.dimensions]				
			}
		}

		var frequency = []
		if (this.props.meta !== undefined){
			if (this.props.meta.frequency !== undefined){
				frequency = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-line-chart p-r-10", title: "Frequency"}), this.props.meta.frequency]				
			}
		}

		var age = []
		if (this.props.meta !== undefined){
			if (this.props.meta.age !== undefined){
				age = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-clock-o p-r-10", title: "Age"}), this.props.meta.age]				
			}
		}

		var sources = []
		if (this.props.meta != undefined){
			if (this.props.meta.sources !== undefined){				
				sources = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-exchange p-r-10", title: "Traffic source"})]	
				if (this.props.meta.sources.length > 2){
					sources.push(this.props.meta.sources.length + ' traffic sources')
				} else {		
					this.props.meta.sources.forEach(function(source){
						if (source.slug){
							var source_link = '/traffic-source/' + source.slug + '/'
						} else {
							var source_link = '/traffic-source/' + source.hash + '/'
						}					
						var name = source.name.substr(0,20)	
						sources.push(React.createElement(Link, {style: {color: '#777'}, className: "p-r-5", href: source_link}, name))
					})
				}
			}
		}

		return (	
			React.createElement("div", {style: adUnitStyle, className: "ad"}, 
				React.createElement("div", {style: overlayStyle, onClick: this.overlayClick}), 
				React.createElement("div", {style: adCont}, 
					children					
				), 
				React.createElement("div", {className: "small", style: metaStyle}, 
					React.createElement("div", null, countries), 
					React.createElement("div", {className: "clear-fix"}, 
						React.createElement("div", {style: {display: 'inline-block'}}, dimensions), 
						React.createElement("div", {style: {marginLeft: '20px', display: 'inline-block'}}, frequency)
					), 
					React.createElement("div", {style: {clear: 'both'}}), 
					React.createElement("div", null, age), 
					React.createElement("div", null, lastSeen), 			
					React.createElement("div", null, sources), 
					React.createElement("div", null, 
						React.createElement("span", {className: "fa fa-download p-r-10"}), 
						React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.downloadClick.bind(this, this.props.hash)}, "Download"), 							
						React.createElement("span", {className: "fa fa-info p-l-10 p-r-10", title: "More Info"}), 
						React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.adClick}, "More Info")
					)
				)
			)
		);		

	}

});

module.exports = Ad;

},{"../../utils/role.js":412,"./app-adflash.jsx":275,"./app-adimage.jsx":278,"./app-adtext.jsx":279,"loglevel":9,"pubsub-js":10,"react":235,"react-router-component":22}],272:[function(require,module,exports){
/**
 * @jsx React.DOM
 */
var React = require('react')
var Ad = require('../ad/app-ad.jsx')
var AdImage = require('../ad/app-adimage.jsx')
var AdText = require('../ad/app-adtext.jsx')
var AdFlash = require('../ad/app-adflash.jsx')

var log = require('loglevel');

/**
* Helper function takes item (ad data) and current path and return as a Ad component, used to build Ads for Grid from data
*
*/
var AdBuilder = function(item, path, navigate, optimized){ // navigate is optional navigation function used by modal
	var children = []

	if (optimized === undefined){
		optimized = true
	}

	var titlesLength = 0
	if (item.titles !== undefined){
		titlesLength = item.titles.length
	}

	var linksLength = 0
	if (item.display_links !== undefined){
		linksLength = item.display_links.length
	}

	var descriptionsLength = 0
	if (item.descriptions !== undefined){
		descriptionsLength = item.descriptions.length
	}

	var iMax = Math.max(titlesLength, linksLength, descriptionsLength)
	//if there is any type of text then make a ad text display
	var textAd = false
	if (iMax > 0){
		children.push(React.createElement(AdText, {key: "ad-text", titles: item.titles, descriptions: item.descriptions, display_links: item.display_links}))
		textAd = true
	}
	if (item.resources.length > 0){
		item.resources.forEach(function(resource, i){
			//console.log('AdBuilder', resource)
			if (resource['file_name'] == null || resource['width'] == null || resource['height'] == null){
				log.warn('Resource missing definitions')
				return false
			}
			if (resource['format'] == 'swf'){
				if (resource['optimized'] && optimized){
					var adElement = React.createElement(AdImage, {key: "ad-flash-" + i, src: resource['optimized'], width: resource['width'], height: resource['height']})
				} else {
					var adElement = React.createElement(AdFlash, {key: "ad-flash-" + i, src: resource['file_name'], width: resource['width'], height: resource['height']})
				}
				children.push(adElement)
			} else if (resource['format'] == 'img'){
				var adElement = React.createElement(AdImage, {key: "ad-image-" + i, src: resource['file_name'], width: resource['width'], height: resource['height']})
				children.push(adElement)
			} else {
				log.warn('Unkwown resource format')
			}						
		})
	}

	var key = 'ad' // provision key, if not supplied in item
	if (item.key !== undefined){
		key = item.key
	}

	// example meta
	var meta = {
		'countries': ['AU', 'DE', 'ZA', 'TH'],
		'sources': [{
			hash: 'abc',
			name: 'MarketGid'
		},
		{
			hash: 'def',
			name: 'exoClicks'
		}],
		'age': '12 days',
		'frequency': 'High',
		'last_seen': '23 July, 2015',
		'devices': ['Desktop'],
		'dimensions': '300x250'
	}

	if (children.length > 0){
		return (					
			React.createElement(Ad, {key: key, meta: item.meta, hash: item.hash, path: path, navigate: navigate, textAd: textAd}, children)
		)	
	}
}

module.exports = AdBuilder;

},{"../ad/app-ad.jsx":271,"../ad/app-adflash.jsx":275,"../ad/app-adimage.jsx":278,"../ad/app-adtext.jsx":279,"loglevel":9,"react":235}],273:[function(require,module,exports){
var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var role = require('../../utils/role.js')
var PubSub = require('pubsub-js')
var AdDetail = React.createClass({displayName: "AdDetail",

	downloadClick: function(url){
		if (role.is_pro()){
			window.open('/ad/' + ad_hash + '/download/', "_blank")
		} else {
			PubSub.publish('pro-required', {view: 'lander'})
		}
	},

	render: function() {
		if (this.props.remote.loading){
			return React.createElement("div", {className: "p-t-20 p-b-20"}, React.createElement(Loading, null))
		}
		var download = (
				React.createElement("div", null, 
					React.createElement("button", {onClick: this.downloadClick.bind(this, this.props.remote.hash), className: "btn btn-success"}, 
						React.createElement("span", {className: "fa fa-download"}), " Download"
					)
				)  
		)       
		return (			
            React.createElement("div", {className: "panel panel-transparent"}, 
            	React.createElement("div", {className: "panel-heading p-t-10"}, 
            		React.createElement("div", {className: "panel-title inline"}, this.props.remote.media_type), 
            		React.createElement("div", {className: "m-t-10"}, 
            			download
            		)
            	)
           	)
		);
	}

});

module.exports = withAsyncState(AdDetail);

},{"../../utils/role.js":412,"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"pubsub-js":10,"react":235}],274:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var AdBuilder = require('./app-adbuilder.jsx')
var calculateAdSize = require('./calculate-ad-size.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Next = require('../control/app-next.jsx')
var Previous = require('../control/app-previous.jsx')
var log = require('loglevel');

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var role = require('../../utils/role.js')
var PubSub = require('pubsub-js')
/**
* AdFeature - loads data for a single ad to be featured. Uses ad builder to generate a Ad and 
* display's the ad in the center of the screen.
* 
*/
var AdFeature = React.createClass({

	mixins: [NavigatableMixin],

	displayName: 'AdFeature',

	downloadClick: function(ad_hash){
		if (role.is_pro()){
			window.open('/ad/' + ad_hash + '/download/', "_blank")
		} else {
			PubSub.publish('pro-required', {view: 'lander'})
		}
	},

	getInitialState: function(){
		return {ready: false}
	},

	componentDidMount: function(){
		setTimeout(function(){
			this.setState({ready: true})
		}.bind(this), 500)
	},

	//make sure this rerenders on resize 
	render: function(position) {

		console.log("AdFeature render", this.props, this.state)

		if (this.props.remote.loading){
			return (
				React.createElement("div", {id: "ad-feature", className: "p-t-10 p-b-10"}, 
					React.createElement(Loading, null)
				))
		}
		if (!this.state.ready){
			return (
				React.createElement("div", {id: "ad-feature", className: "p-t-10 p-b-10"}, 
					React.createElement(Loading, null)
				))
		}
		var download = (
				React.createElement("div", null, 
					React.createElement("button", {onClick: this.downloadClick.bind(this, this.props.remote.hash), className: "btn btn-success"}, 
						React.createElement("span", {className: "fa fa-download"}), " Download"
					)
				)  
		)       

		log.debug("AdFeature render", this.props, this.state)
		ad_props = this.props.remote
		ad_props.meta = false
		ad = calculateAdSize(AdBuilder(this.props.remote, '', undefined, false))

		var featureWidth = $('#ad-feature').width()

		if (ad.props.width > featureWidth){
			var newWidth = featureWidth
			var newHeight = (ad.props.height / ad.props.width) * newWidth
		} else if (ad.props.height > 400) {
			var newHeight = 400
			var newWidth = (ad.props.width / ad.props.height) * newHeight
		} else {
			var newHeight = ad.props.height
			var newWidth = ad.props.width
		}

		//newHeight += '114'

		var marginLeft = Math.floor((featureWidth - newWidth) / 2)
		
		var childClone = React.addons.cloneWithProps(ad, 
			{
				style: {
					position: 'absolute',
					overflow: 'hidden',
					'marginTop': 0,
					'marginLeft': marginLeft,
					width: newWidth,
					height: newHeight,

				},
				newWidth: newWidth,
				newHeight: newHeight,
				width: ad.props.width,
				height: ad.props.height,
				key: ad.key,
				no_click: true
			}
		)

		var style = {
			height: newHeight + 'px',

		}
		
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "panel panel-transparent"}, 
	            	React.createElement("div", {className: "panel-heading p-t-10"}, 
	            		React.createElement("div", {className: "panel-title inline"}, this.props.remote.media_type), 
	            		React.createElement("div", {className: "m-t-10"}, 
	            			download
	            		)
	            	)
	           	), 
				React.createElement("div", {id: "ad-feature", className: "relative", style: style}, 
					childClone
				)
			))

		/*
		var children = []
		React.Children.map(this.props.children, function(child){
			if (child != null){
				children.push(this.calculateAdSize(child))
			}
		}.bind(this))

		var adFeatureStyle = {
			//'height': this.height+40,
			'width': this.width,
			'margin-left': 'auto',
			'margin-right': 'auto',
			'margin-top': '20px',
			'margin-bottom': '20px'
		}
		
		return (
			<div style={adFeatureStyle} id="adFeature" ref="adFeature">
				{this.props.children}
			</div>
		);
		*/
	}

});

module.exports = withAsyncState(AdFeature);

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/role.js":412,"../../utils/withAsyncState.jsx":416,"../control/app-next.jsx":320,"../control/app-previous.jsx":323,"../xhr/app-loading.jsx":401,"./app-adbuilder.jsx":272,"./calculate-ad-size.jsx":281,"loglevel":9,"pubsub-js":10,"react":235,"react-async":12,"react-router-component":22}],275:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');


/**
* AdFlash - used as child of Ad to represent a flash element
*/
var AdFlash = React.createClass({

	displayName: 'AdFlash',

	scaledProps: function(scale){
		props = this.props
		props.width = this.props.width * scale;
		props.height = this.props.height * scale;
	},

	render: function() {
		var embedStyle = {
			'float': 'left'
		}
		//TODO: scale the source width by the new scale factor from the ad  parent
		scaledWidth = this.props.scale * this.props.width
		scaledHeight = this.props.scale * this.props.height
		return (
			React.createElement("embed", {style: {display: 'block', margin: '0px auto'}, src: this.props.src, width: scaledWidth, height: scaledHeight, wmode: "opaque"})
		);
	}

});

module.exports = AdFlash;

},{"react":235}],276:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react/addons');
var AdImage = require('./app-adimage.jsx')
var AdText= require('./app-adtext.jsx')
var AdFlash= require('./app-adflash.jsx')
var calculateAdSize = require('./calculate-ad-size.jsx')
var log = require('loglevel');
/**
* AdGrid - dynamically sizes and arranges children of component type Ad
*
* 
*/
var AdGrid = React.createClass({displayName: "AdGrid",

	maxHeight: 0, // reference to AdGrid.maxHeight in add_column_elem is not optimal consider fixing

	updateDimensions: function() {
		this.setState({
			width: this.refs['adGrid'].getDOMNode().offsetWidth, 
			height: this.refs['adGrid'].getDOMNode().offsetHeight
		});
    },
    
    componentDidMount: function() {
    	$(window).on("resize", this.updateDimensions)
    	setTimeout(function(){
    		this.updateDimensions()    	
    	}.bind(this), 100)
    },
    componentWillUnmount: function() {
    	$(window).off("resize", this.updateDimensions)
    },

	getInitialState: function(){
		return {width: null, height: null}
	},

	getDefaultProps: function(){
		return {
			column_width: 180,
			margin: 10,
			delta: 40,
			meta_height: 134
		}
	},

	positionChildren: function(children){


		var HEIGHTS = [];
		// do not use column width prop beyond this, a new COLUMN_WIDTH is calc to fit
		var COLUMN_WIDTH = parseInt(this.props.column_width); 
		var MARGIN = parseInt(this.props.margin);
		var DELTA = parseInt(this.props.delta);
		var META_HEIGHT = parseInt(this.props.meta_height);
		var adGrid = this

		function create_columns(n) {
		  HEIGHTS = [];
		  for (var i = 0; i < n; ++i) {
		    HEIGHTS.push(0);
		  }
		}

		function get_min_column() {
		  var min_height = Infinity;
		  var min_i = -1;
		  for (var i = 0; i < HEIGHTS.length; ++i) {
		    if (HEIGHTS[i] < min_height) {
		      min_height = HEIGHTS[i];
		      min_i = i;
		    }
		  }
		  return min_i;
		}

		function fit_width(child, rowspan) {
		  if (rowspan == 0.5){
		  	var new_width = COLUMN_WIDTH * 1;
		  	var metaHeight = META_HEIGHT
		  	var new_height = COLUMN_WIDTH * 1.3;
		  	var fit = 'height'
		  	//var new_width = (COLUMN_WIDTH - (MARGIN * 0.75)) * rowspan;
		  	//var metaHeight = META_HEIGHT
		  } else {
		  	var new_width = COLUMN_WIDTH * rowspan;
		  	var metaHeight = META_HEIGHT
		  	if (rowspan > 1) {
			    new_width += MARGIN;
			 }
		  	var new_height = (child.props.height * new_width) / child.props.width;
		  	var fit = 'width'
		  }

		  if (isNaN(new_height)){
		  	log.error("Error: new height is NaN.", child, child.props.height, new_height)
		  	//throw "New height for ad cannot be NaN"
		  }

		  if (isNaN(new_width)){
		  	log.error("Error: new width is NaN.", child, child.props.width, new_width)
		  	//throw "New height for ad cannot be NaN"
		  }

		  return {
		    width: new_width,
		    height: new_height,
		    metaHeight: metaHeight,
		    fit: fit
		  };
		}

		function add_column_elem(i, child, rowspan/* -1, 0 or 1 */) {
			// rowspan 0.5 for tall
			if (rowspan == 0.5){
				var new_dim = fit_width(child, 0.5);
			} else {
				var new_dim = fit_width(child, 1 + Math.abs(rowspan));
			}

			new_dim.height += (HEIGHTS[Math.floor(i)] + new_dim.height + MARGIN) % DELTA;

			if (rowspan == 0.5){ // if 
				if (i == Math.floor(i)){ // if 
					var marginLeft = (COLUMN_WIDTH + MARGIN) * (i)
				} else {
					var marginLeft = (COLUMN_WIDTH + MARGIN) * (i) - 0
				}
			} else {
				var marginLeft = (COLUMN_WIDTH + MARGIN) * (i + (rowspan === -1 ? -1 : 0))
			}

			var childClone = React.addons.cloneWithProps(child, 
				{
					style: {
						position: 'absolute',
						overflow: 'hidden',
						'marginTop': HEIGHTS[Math.floor(i)],
						'marginLeft': marginLeft,
						width: new_dim.width,
						height: new_dim.height + new_dim.metaHeight,

					},
					newWidth: new_dim.width,
					newHeight: new_dim.height,
					metaHeight: new_dim.metaHeight,
					fit: new_dim.fit,
					width: child.props.width,
					height: child.props.height,
					key: child.key
				}
			)

			childMaxHeight = parseInt(HEIGHTS[Math.floor(i)]) + parseInt(new_dim.height) + parseInt(new_dim.metaHeight)
			if (childMaxHeight > adGrid.maxHeight){
				adGrid.maxHeight = childMaxHeight
			}
			
			if (i == Math.floor(i) && rowspan != 0.5){
				// if not a half col: update heights
				var next_height = HEIGHTS[Math.floor(i)] + new_dim.height + new_dim.metaHeight + MARGIN;
  				HEIGHTS[Math.floor(i) + rowspan] = HEIGHTS[Math.floor(i)] = next_height;
			} else {
				// if a half col then height will be adjusted externally
			}
			
		 	return childClone
		}

		function add_wide(child, force) {
			var column = get_min_column();
			var rowspan = 0;
			if (column - 1 > 0 && HEIGHTS[column - 1] <= HEIGHTS[column]) {
				rowspan = -1;
				return add_column_elem(column, child, rowspan);
			} else if (column + 1 < HEIGHTS.length && HEIGHTS[column + 1] <= HEIGHTS[column]) {
				rowspan = 1;
				return add_column_elem(column, child, rowspan);
			} else if (force) {
				return add_column_elem(column, child, rowspan);
			}
			//retry again after next
			return false	
		}

		function add_tall(child1, child2) { // x can be 0 or 1
			var column = get_min_column();
			var rowspan = 0.5;
	
			new_child1 = add_column_elem(column, child1, rowspan);
			if (child2 !== undefined){
				new_child2 = add_column_elem(column + 0.5, child2, rowspan);
				if (new_child1.props.newHeight > new_child2.props.newHeight){
					var newHeight = new_child1.props.newHeight
					var metaHeight = new_child1.props.metaHeight
				} else {
					var newHeight = new_child2.props.newHeight
					var metaHeight = new_child2.props.metaHeight
				}
			} else {
				new_child2 = false
				var newHeight = new_child1.props.newHeight
				var metaHeight = new_child1.props.metaHeight
			}
			// adjust height externally from add_column_elem to heighest of new childs
			var next_height = HEIGHTS[Math.floor(column)] + newHeight + metaHeight + MARGIN;
  			HEIGHTS[Math.floor(column) + rowspan] = HEIGHTS[Math.floor(column)] = next_height;
			return [new_child1, new_child2]
		}

		function add_square(child) {
			var column = get_min_column();
			var rowspan = 0;
			/* squares should not be stretched
			if (column - 1 > 0 && HEIGHTS[column - 1] <= HEIGHTS[column]) {
				rowspan = -1;
			} else if (column + 1 < HEIGHTS.length && HEIGHTS[column + 1] <= HEIGHTS[column]) {
				rowspan = 1;
			}
			*/
			//if square smaller than 1.5 column then dont allow to be stretched
			if (child.props.width < COLUMN_WIDTH * 2){
				rowspan = 0
			}
			return add_column_elem(column, child, rowspan);
		}

		var new_children = []
		//var size = window.innerWidth - 50;
		var total_width = this.state.width;
		if (total_width == 0){
			console.error("Available with for AdGrid is 0")
			return []
		}
		var n_columns = Math.floor(total_width / (COLUMN_WIDTH + MARGIN));
		if (n_columns == 0){
			console.error("Number of columns for AdGrid 0")
			return []
		}
		// calculate the extra width remain to adjust the column_wudth
		// total_width minus the total width with the default cols plus the end margin divided the num of cols
		var extra_width = (total_width - ((COLUMN_WIDTH + MARGIN) * n_columns) + MARGIN) / n_columns
		COLUMN_WIDTH += extra_width
		create_columns(n_columns);

		if (children instanceof Array){
			var ads = children;
		} else {
			var ads = [children];
		}

		//sort children by dimensionality
		var talls = []
		var squares = []
		var wides = []

		function remaining(){
			return wides.length + talls.length + squares.length
		}

		ads.forEach(function(child){			
			if (child.props.width > (COLUMN_WIDTH + COLUMN_WIDTH / 2) && child.props.width > child.props.height * 2){
				// assign to wides which can span 2 cols
				wides.push(child)
			} else if (child.props.height > (child.props.width * 1.3) && child.props.height > COLUMN_WIDTH){
				// assign to talls which can be adjusted to a half col
				talls.push(child)
			} else {
				squares.push(child)
			}
		}.bind(this))
		var force = false
		var x = 0

		// sort talls by height / width ratio
		talls.sort(function(a, b){
			return (b.props.height / b.props.width) - (a.props.height / a.props.width)
		})

		while (remaining()) {
			x += 1
			if (wides.length > 0 && talls.length == 0 && squares.length == 0){
				force = true
			}			

			//try a wide
			for (var i = 0; i < 2; i++){
				if (wides.length > 0){
					child = wides.shift()
					var new_child = add_wide(child, force)
					if (new_child === false){
						//no new child push child back onto stack
						wides.push(child)
						break
					} else {
						new_children.push(new_child)
					}
				} else {
					break
				}
			}			

			//add 2 talls
			if (talls.length > 0){
				child1 = talls.shift()
				//child2 = talls.shift()
				var new_childs = add_tall(child1, undefined)
				if (new_childs[0] !== false) new_children.push(new_childs[0])
				if (new_childs[1] !== false) new_children.push(new_childs[1])
			}

			//add a square
			if (squares.length > 0){
				child = squares.shift()
				var new_child = add_square(child)
				new_children.push(new_child)
			}
			if (x == 1000){
				console.error('AdGrid', 'emergency break. could not fit ads.')
				break
			}
		}


		return new_children

	},

	render: function(position) {

		if (this.state.width == null){
			return React.createElement("div", {id: "adGrid", ref: "adGrid"})
		}

		this.maxHeight = 0

		var children = []
		React.Children.map(this.props.children, function(child, i){
			if (child != null){
				children.push(calculateAdSize(child))
			}
		}.bind(this))
		
		log.debug('AdGrid', 'sized children', children)
		
		children = this.positionChildren(children)	

		log.debug('AdGrid', 'positioned children', children)
		
		var adGridStyle = {
			'height': this.maxHeight
		}
		return (
			React.createElement("div", {style: adGridStyle, id: "adGrid", ref: "adGrid"}, 
				children
			)
		);
	}

});

module.exports = AdGrid;

},{"./app-adflash.jsx":275,"./app-adimage.jsx":278,"./app-adtext.jsx":279,"./calculate-ad-size.jsx":281,"loglevel":9,"react/addons":63}],277:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Link = require('react-router-component').Link

var AdGrid = require('./app-adgrid.jsx')
var Ad = require('./app-ad.jsx')
var AdImage = require('./app-adimage.jsx')
var AdText = require('./app-adtext.jsx')
var AdFlash = require('./app-adflash.jsx')


var AdGridExample = React.createClass({displayName: "AdGridExample",

	render: function() {
		return (
			React.createElement("div", {className: "boxed"}, 
				React.createElement("div", {className: "container-fluid", style: {"position": "relative"}}, 
					React.createElement(AdGrid, null, 
						React.createElement(Ad, null, 
							React.createElement(AdImage, {src: "https://lh3.googleusercontent.com/-0IYWwoU404o/T5hFqf8Fd7I/AAAAAAAALV4/ZWtvualW-gs/w302-h214-n-k/SirFrancisBacon.jpg", width: "302", height: "214"})							
						), 
						React.createElement(Ad, null, 
							React.createElement(AdFlash, {src: "http://massive-url.s3.amazonaws.com/000026e58e6853aec2ec5540d0858b2d.swf", width: "120", height: "600"})
						), 
						React.createElement(Ad, null, 
							React.createElement(AdText, {titles: ["Goodbye cruel world"], descriptions: ["This is your first line of code"], display_links: ["google.com"]})
						), 
						React.createElement(Ad, null, 
							React.createElement(AdImage, {src: "https://lh3.googleusercontent.com/-0IYWwoU404o/T5hFqf8Fd7I/AAAAAAAALV4/ZWtvualW-gs/w302-h214-n-k/SirFrancisBacon.jpg", width: "302", height: "214"})
						), 
						React.createElement(Ad, null, 
							React.createElement(AdImage, {src: "https://lh5.googleusercontent.com/-MpTZPLZI3-E/T5eMgJVx2JI/AAAAAAAALVE/VMzdGSUkYmE/w379-h214-n-k/winners_losers.jpg", width: "379", height: "214"})
						), 
						React.createElement(Ad, null, 
							React.createElement(AdImage, {src: "https://lh5.googleusercontent.com/-DjiYXWoFDkU/T5eEoZ9w6nI/AAAAAAAALUk/7kDnKp66zgM/w453-h272-n-k/vintcerf.jpg", width: "453", height: "272"})
						), 
						React.createElement(Ad, null, 
							React.createElement(AdImage, {src: "https://lh3.googleusercontent.com/-GOiSlIr0JQc/T5Yrpil6MII/AAAAAAAALTY/IeVknUkvKoQ/w210-h272-n-k/SmileBestMakeUp.jpg", width: "210", height: "272"})
						), 	
						React.createElement(Ad, null, React.createElement(AdImage, {src: "https://lh4.googleusercontent.com/-FQNMV5kNh48/T5r2k7e2KvI/AAAAAAAALWc/9AfwLKOa_SE/w394-h214-n-k/NewsThatBarcelonaArentInTheFinalsReachesMadrid.gif", width: "394", height: "214"}), 
							React.createElement(AdText, {titles: ["Hello World", "Goodbye cruel world"], descriptions: ["This is your first line of code"], display_links: ["google.com"]})
						)
					)
				)
			))
		      
	}

});

module.exports = AdGridExample;

},{"./app-ad.jsx":271,"./app-adflash.jsx":275,"./app-adgrid.jsx":276,"./app-adimage.jsx":278,"./app-adtext.jsx":279,"react":235,"react-async":12,"react-router-component":22}],278:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');


/**
* AdImage - used as child of Ad to represent a img element
*/
var AdImage = React.createClass({

	displayName: 'AdImage',

	scaledProps: function(scale){
		props = this.props
		props.width = this.props.width * scale;
		props.height = this.props.height * scale;
	},

	componentDidUpdate: function(){
		this.refs['img'].getDOMNode().classList.add('lazyload');
	},

	render: function() {
		var imgStyle = {
			'float':'left'
		}
		//TODO: scale the source width by the new scale factor from the ad  parent
		scaledWidth = this.props.scale * this.props.width
		scaledHeight = this.props.scale * this.props.height
		return (
			React.createElement("img", {ref: "img", style: {display: 'block', margin: '0px auto'}, className: "fade-in lazyload", width: scaledWidth, height: scaledHeight, "data-src": this.props.src})
		);
	}

});

module.exports = AdImage;

},{"react":235}],279:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var AdText = React.createClass({

	displayName: 'AdText',

	render: function() {
		var adTextStyle = {
			'padding': '4px'
		}
		var titleSize = Math.ceil(16 * this.props.scale)
		var titleStyle = {
			'color': 'blue',
			'fontSize': titleSize+'px',
			'fontWeight': 'bold'
		}
		var displaySize = Math.ceil(10 * this.props.scale)
		var displayLinkStyle = {
			'color': 'grey',
			'fontSize': displaySize+'px'
		}
		var descriptionSize = Math.ceil(12 * this.props.scale)
		var descriptionStyle = {
			'color': 'black',
			'fontSize': descriptionSize+'px'
		}
		var ad_block = []

		var titles = this.props.titles.map(function(title, i){
			if (typeof ad_block[i] == 'undefined'){
				ad_block[i] = []
			}
			if (title){
				ad_block[i].push(React.createElement("span", {style: titleStyle}, title))
				ad_block[i].push(React.createElement("br", null))
			}
		})

		var display_links = this.props.display_links.map(function(display_link, i){
			if (typeof ad_block[i] == 'undefined'){
				ad_block[i] = []
			}
			if (display_link){
				ad_block[i].push(React.createElement("span", {style: displayLinkStyle}, display_link))
				ad_block[i].push(React.createElement("br", null))
			}
		})

		var descriptions = this.props.descriptions.map(function(description, i){
			if (typeof ad_block[i] == 'undefined'){
				ad_block[i] = []
			}
			if (description){
				ad_block[i].push(React.createElement("span", {style: descriptionStyle}, description))
				ad_block[i].push(React.createElement("br", null))
			}
		})

		return (React.createElement("div", {style: adTextStyle}, 
					ad_block
				));
	}

});

module.exports = AdText;

},{"react":235}],280:[function(require,module,exports){
var React = require('react');
var AdGrid = require('../ad/app-adgrid.jsx')
var AdBuilder = require('../ad/app-adbuilder.jsx')
var log = require('loglevel');
var UserOverlay = require('../../utils/userOverlay.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var getState = require('../../utils/getState.js')
var CountryDropdown = require('../control/app-countrydropdown.jsx')
var CountDropdown = require('../control/app-countdropdown.jsx')
var NameCountDropdown = require('../control/app-namecountdropdown.jsx')
var SortDropdown = require('../control/app-sortdropdown.jsx')

var AsyncFilterGrid = React.createClass({displayName: "AsyncFilterGrid",

	getInitialState: function(){
		
		var sort_by = false
		var sort_default = false
		if (this.props.sort !== undefined && this.props.sort == true && this.props.sort_default !== undefined){
			sort_by = this.props.sort_default
			sort_default = this.props.sort_default
		}
		
		return {
			total: 0,
			loading: true,
			loaded: false,
			sort_default: sort_default,
			query: {
				loading: false, 
				filter_country: false, 
				filter_dimensions: false, 
				filter_platform: false, 
				filter_device: false, 
				filter_mediator: false, 
				sort_by: sort_by,
				page: 0, 
				per_page: 30
			}
		}
	},

	filteredResults: function(){
		var filters = [
			'filter_country', 
			'filter_dimensions', 
			'filter_platform', 
			'filter_device', 
			'filter_mediator', 
		]
		for (var i = 0; i < filters.length; i++){
			if (this.state.query[filters[i]]){
				return true
			}
		}
		return false
	},

	pageClick: function(page){
		var state = this.state
		state.query.page = page
		this.getAsyncState(state)
	},

	componentWillMount: function(){
		this.getAsyncState(this.state)	
	},
	
	getAsyncState: function(state){
		var props = $.extend({}, this.props)
		props['async_path'] += '?' + $.param(state.query)
		if (!state.loaded){
			state.loading = true
		} else {
			state.query.loading = true
		}
		this.setState(state);
		getState(props, function(error, newState) {
			if (this.state.loaded == false){
				newState.loading = false
				newState.loaded = true
			} else {
				newState.query = this.state.query
				newState.query.loading = false
			}
			this.setState(newState);
		}.bind(this));
	},

	handleCountryChange: function(country){
		var state = this.state
		if (!country || country == '' || country == 'all'){
			state.query.filter_country = false			
		} else {
			if (country == 'GB'){
				state.query.filter_country = country
			} else {
				state.query.filter_country = country
			}			
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleDimensionsChange: function(dimensions){
		var state = this.state
		if (!dimensions){
			state.query.filter_dimensions = false			
		} else {
			state.query.filter_dimensions = dimensions
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleSourceChange: function(platform){
		var state = this.state
		if (!platform){
			state.query.filter_platform = false			
		} else {
			state.query.filter_platform = platform
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleSortChange: function(sort_by){
		var state = this.state
		if (!sort_by){
			state.query.sort_by = this.state.sort_default			
		} else {
			state.query.sort_by = sort_by
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	render: function() {
		var title = 'Landers'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.state.loading){
			return (
				React.createElement("div", {id: "adList_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, title)
	                    ), 
	                    React.createElement("div", {className: "panel-body p-b-20 p-t-20"}, 
					        React.createElement(Loading, null)
						)
	                )
				))
		}
		
		var countryFilter = ''
		if (this.props.filter_country !== undefined && this.props.filter_country == true){
			var countryFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by country"), 
            	React.createElement(CountryDropdown, {country_map: this.state.countries, countryChange: this.handleCountryChange, selected: this.state.query.filter_country})
			))
		}
		var dimensionsFilter = ''
		if (this.props.filter_dimensions !== undefined && this.props.filter_dimensions == true){
			var dimensionsFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by size"), 
            	React.createElement(CountDropdown, {name: 'Size', onChange: this.handleDimensionsChange, items: this.state.dimensions, selected: this.state.query.filter_dimensions})
			))
		}
		var sourceFilter = ''
		if (this.props.filter_platforms !== undefined && this.props.filter_platforms == true){
			var sourceFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by traffic source"), 
            	React.createElement(NameCountDropdown, {name: 'Traffic Source', onChange: this.handleSourceChange, items: this.state.platforms, selected: this.state.query.filter_platform})
			))
		}

		var sortBy = ''
		if (this.props.sort !== undefined){
			var sort_by = {
				'last_seen_desc': 'Last seen: new first',
				'last_seen_asc': 'Last seen: old first',
				'age_desc': 'Age: longest running first',
				'age_asc': 'Age: shortest running first',
				'frequency_desc': 'Frequency: most frequent first',
				'frequency_asc': 'Frequency: least frequent first',
			}
			var sortBy = (
				React.createElement("div", {className: "col-md-3"}, 
					React.createElement("h5", null, "Sort"), 
	            	React.createElement(SortDropdown, {items: sort_by, onChange: this.handleSortChange, selected: this.state.query.sort_by})
				)
			)
		}

		var filterRow = (
			React.createElement("div", {className: "m-b-20 row"}, 
    			countryFilter, 
    			dimensionsFilter, 
    			sourceFilter, 
    			sortBy
    		)
		)

		var switchRow = (
			React.createElement("div", null)
		)


		if (this.state.query.loading){
			var results = [filterRow,
				React.createElement("div", {className: "text-center p-b-20 p-t-20"}, 					
			        React.createElement(Loading, null)
				)
			]
		} else {
			var items = []
			for (var i = 0; i < this.state.items.length; i++){
				var item = this.state.items[i]
				if (item.resources.length > 0){
					try {
						item.resources.forEach(function(resource){
							if (resource.width == null || resource.height == null){
								throw 'Invalid ad data. Width or Height of resource is null'
							}
						});
					} catch (e){
						console.log(item, e)
						continue
					}
				} else if (item.titles.length == 0 && item.descriptions.length == 0){
					console.log(item, 'Invalid ad data. Ad must have at least one resource, title or description')
					continue
				}
				item.key = i
				var ad = AdBuilder(item, this.props.base_path + 'ad/' + item['hash'] + '/')
				items.push(ad)
			}

			if (items.length > 0){
				var results = [filterRow,(
					React.createElement("div", null, 
						React.createElement(AdGrid, {column_width: "180"}, 
							items
						), 
						React.createElement("div", {className: "pull-left m-t-20"}, 
			            	React.createElement(Pagination, {		
			            		page: this.state.query.page, 
			            		total: this.state.total, 
			            		perPage: this.state.query.per_page, 
			            		pageClick: this.pageClick})
			            )
			        )
			    )]
			} else {
				if (this.filteredResults()){
					var results = [filterRow, switchRow, (React.createElement("div", null, "No ads found."))]
				} else {
					var results = [(React.createElement("div", null, "No ads found."))]
				}				
			}
		}

		return (
            React.createElement("div", {className: "panel panel-transparent"}, 
                React.createElement("div", {className: "panel-heading"}, 
                    React.createElement("div", {className: "panel-title"}, title)
                ), 
                React.createElement("div", {id: "host-ad-container", className: "panel-body"}, 
                	React.createElement(UserOverlay, null, 
				        results, 
                        React.createElement("div", {className: "clearfix"})
                    )
				)
            )
		);
	}

});

module.exports = AsyncFilterGrid;

},{"../../utils/getState.js":408,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../ad/app-adbuilder.jsx":272,"../ad/app-adgrid.jsx":276,"../control/app-countdropdown.jsx":316,"../control/app-countrydropdown.jsx":317,"../control/app-namecountdropdown.jsx":318,"../control/app-pagination.jsx":321,"../control/app-sortdropdown.jsx":324,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235}],281:[function(require,module,exports){
var React = require('react');
var AdImage = require('../ad/app-adimage.jsx')
var AdText = require('../ad/app-adtext.jsx')
var AdFlash = require('../ad/app-adflash.jsx')

var log = require('loglevel')

/**
 * Calculates the size of an Ad by evaluating its children
 * Calculated size is used in fit_width to properly resize the components.
 * Calculated size is used in AdFeature to properly center the Ad
 *
 * @param {ad} Ad component containing AdText, AdFlash or AdImage
 */
module.exports = function(ad, maxWidth, maxHeight){
	if (typeof maxWidth == 'undefined'){
		var maxWidth = false;
	}
	if (typeof maxHeight == 'undefined'){
		var maxHeight = false;
	}
	var texts = []
	var resources = []
	React.Children.map(ad.props.children, function(child){
			if (typeof child.props.src != 'undefined'){
				resources.push(child)
			} else {
				texts.push(child)
			}
			/*
			if (child.constructor.displayName == AdText.displayName){
				
			} else if (child.constructor.displayName == AdImage.displayName || child.constructor.displayName == AdFlash.displayName){
				
			} else {
				console.log("Error: Unknown child in Ad.", ad, child)
			}
			*/
	})
	//evaluate resource grid
	var totalWidth = 0
	var totalHeight = 0
	var rowWidth = 0
	resources.map(function(child, i){
		child.props.width = parseInt(child.props.width)
		child.props.height = parseInt(child.props.height)


		if (totalWidth == 0 && totalHeight == 0){
			totalWidth = child.props.width
			totalHeight = child.props.height
		} else {
			if (child.props.width > totalWidth){
				//new row child longer than current row
				totalWidth = child.props.width
				totalHeight += child.props.height
			} else if (totalWidth > (rowWidth + child.props.width)){
				//child fits on current row
				rowWidth = rowWidth + child.props.width
			} else {
				//new row child does not fit
				rowWidth = child.props.width
				totalHeight += child.props.height
			}
		}
	})
	texts.map(function(child, i){
		child.props.width = parseInt(child.props.width)
		child.props.height = parseInt(child.props.height)
		//text ads should be atleast
		if (totalWidth < 250){
			totalWidth = 250
		}
		totalHeight += 150
	})

	var ad_props = ad.props
	ad_props.key = ad.key
	ad_props.width = totalWidth
	ad_props.height = totalHeight
	ad_props.newWidth = totalWidth
	ad_props.newHeight = totalHeight

	if (maxWidth){
		var ratio = (maxWidth / totalWidth);
		if (totalWidth > maxWidth){
			ad_props.newWidth = maxWidth;
			ad_props.newHeight = totalHeight * ratio;
		}
	}

	if (maxHeight){
		var ratio = (maxHeight / totalHeight);
		if (totalHeight > maxHeight){
			ad_props.newWidth = totalWidth * ratio;
			ad_props.newHeight = maxHeight;
		}
	}

	log.debug("calculate-ad-size", "ad_props", ad_props)
	return React.addons.cloneWithProps(ad, ad_props)
}

},{"../ad/app-adflash.jsx":275,"../ad/app-adimage.jsx":278,"../ad/app-adtext.jsx":279,"loglevel":9,"react":235}],282:[function(require,module,exports){
var React = require('react')
var Jumbotron = require('../jumbotron.jsx')
var getCookie = require('../../utils/get-cookie.js')
var IsomorphicMixin = require('../../mixins/isomorphic-mixin.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')
var AdminNetworkForm = require('./app-adminnetworkform.jsx')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var postRequest = require('../form/post.js')

var AdminAddNetwork = React.createClass({displayName: "AdminAddNetwork",

	mixins: [IsomorphicMixin, NavigatableMixin],

	getInitialState: function(){
		return {messages: []}
	},

	submitClick: function(data){
		data['csrfmiddlewaretoken'] = getCookie('csrftoken')	
		postRequest('/admin/network/add/', data, function(response){
			if (response.error){
				response.messages.forEach(function(message){
					if (message.field === undefined){
						PubSub.publish('error', message.message)
					}
				})
				this.setState({messages: response.messages, disabled: false})
			} else {
				PubSub.publish('success', "Network '" + data.name + "' saved.")
				this.navigate('/admin/networks/')
			}
		}.bind(this))	
		/*
		var xhr = $.ajax('/admin/network/add/', {
				data: data, 
				type:'POST', 
				headers: {'Accept':'application/json'}
		}).done(function(responseText){
			try {
				response = JSON.parse(responseText)
				if (response.error){
					if (response.messages !== undefined){
						response.messages.forEach(function(item){
							PubSub.publish(item.state, item.message)
						})
					} else {
						PubSub.publish('error', 'Oops something went wrong, please notify the support team.')
					}				
				} else {
					//TODO: show success notification
					PubSub.publish('success', "Network '" + data.name + "' saved.")
					this.navigate('/admin/networks/')
				}
			} catch (e) {
				PubSub.publish('error', 'Oops invalid response from the server, please notify the support team.')
			}
			
		}.bind(this)).fail(function(xhr, error){
			//TODO: show notification
			PubSub.publish('error', 'Oops unable to save, please check your connection and try again.')
		}.bind(this));
		*/
	},

	render: function(){

		var crumb_links = [
			{url : '/admin/networks/', name: 'Network Admin', className: ''},
			{url : '/admin/network/add/', name: 'Add Network', className: 'active'},
		]

		return (
			React.createElement("div", null, 
				React.createElement(Jumbotron, {crumb_links: crumb_links, title: "Add New Network"}), 

				React.createElement(AdminNetworkForm, {method: "add", messages: this.state.messages, data: this.state, onSubmit: this.submitClick})
			)
		)
	}
});

module.exports = mustBeAdmin(AdminAddNetwork)

},{"../../mixins/isomorphic-mixin.js":404,"../../utils/get-cookie.js":407,"../../utils/mustBeAdmin.jsx":410,"../form/post.js":329,"../jumbotron.jsx":337,"./app-adminnetworkform.jsx":286,"pubsub-js":10,"react":235,"react-router-component":22}],283:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var request = require('../../utils/massive-request.js')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var Button = require('../control/app-button.jsx')

var AdvertiserExclude = React.createClass({displayName: "AdvertiserExclude",
    
    getInitialState: function(){
        return {disabled: false}
    },

    saveSubmit: function(e){
        this.setState({messages: [], disabled: true})
        request('/admin/advertiser/exclude/', 'POST', {exclude_list: this.refs['exclude_list'].getDOMNode().value}, function(response){
            this.setState({messages: response.messages, disabled: false})            
        }.bind(this))
        e.preventDefault()
    },

	render: function() {
        
        if (this.props.remote.loading){
            var listView = React.createElement(Loading, null)
        } else {
            var listView = (
                React.createElement("form", {className: "form-group", onSubmit: this.saveSubmit}, 
                    React.createElement("textarea", {className: "form-control", rows: "20", ref: "exclude_list", defaultValue: this.props.remote.exclude_list}), 
                    React.createElement("div", null, 
                        React.createElement(Button, {disabled: this.state.disabled, text: "Submit", type: "submit"})
                    )
                )
                )
        }

		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/admin/advertiser/exclude/', name: 'Advertiser Exclude', className: 'active'},
		]

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "jumbotron"}, 
                    React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                        React.createElement("div", {className: "inner"}, 

                            React.createElement(Breadcrumb, {links: crumb_links}), 

                            React.createElement("div", {className: "row"}, 
                                React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                                    
                                    React.createElement("div", {className: "panel panel-transparent"}, 
                                        
                                        React.createElement("div", {className: "panel-body"}, 
                                            React.createElement("h3", null, "Advertiser Exclude"), 
                                            React.createElement("p", null, "Exclude specific hosts from being considered advertisers."), 
                                            
                                            React.createElement("p", null, 
                                                React.createElement("small", null, 
                                                    "Popular domains such as Google and Facebook have a huge range of" + ' ' +
                                                    "applications, incoming and outgoing links. Prevent them naively" + ' ' + 
                                                    "being considered advertisers by excluding their domains."
                                                )
                                            )
                                        )
                                    )
                                ), 
                                React.createElement("div", {className: "col-lg-7 col-md-6 "}, 
                                    React.createElement("div", {className: "full-height"}, 
                                        React.createElement("div", {className: "panel-body text-center"}
                                            
                                        )
                                    )
                                )
                            )
                        )
                    )
                ), 

                React.createElement("div", {className: "container-fluid  bg-white"}, 
                    React.createElement("p", {className: "m-t-20"}, React.createElement("small", null, "Expected format: host_name, host_type. eg. facebook.com, Domain")), 
                    React.createElement("p", {className: "m-b-20"}, React.createElement("small", null, "Possible host types: Domain, SubDomain, UrlDir, UrlFile, Query")), 
                    listView
                )
            )  
		);
	}

});

module.exports = mustBeAdmin(withAsyncState(AdvertiserExclude));

},{"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../../utils/withAsyncState.jsx":416,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-button.jsx":315,"../xhr/app-loading.jsx":401,"react":235}],284:[function(require,module,exports){
var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var AsyncFilterLanders = require('../lander/app-asyncfilterlanders.jsx')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var AdminInbound = React.createClass({displayName: "AdminInbound",

	render: function() {

		var slug = this.props['slug']

	
		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/admin/inbound/', name: 'Inbound Landers', className: 'active'}
		]

		var inner = (React.createElement("div", {className: "inner"}, 
                    	React.createElement(Breadcrumb, {links: crumb_links}), 
                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                            
                                React.createElement("div", {className: "panel panel-transparent"}, 
                                    React.createElement("div", {className: "panel-heading"}, 
                                        React.createElement("div", {className: "panel-title"}, "Admin")
                                    ), 
                                    React.createElement("div", {className: "panel-body"}, 
                                    	React.createElement("h3", null, "Inbound Landers")
                                    )
                                )
                               
                            )
                            
                        )
                    ))
		return (
			React.createElement("div", null, 
	            
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    inner
                ), 
            		           
            	React.createElement("div", {className: "container-fluid "}, 
            		React.createElement(AsyncFilterLanders, {
							title: "Inbound Landers", 			
							filter_country: true, 		
							filter_platforms: true, 	
							filter_advertisers: true, 	
							sort: true, 
							sort_default: 'last_seen_desc', 
							sort_first_seen: true, 
							show_advertisers: true, 
							exclude_advertisers: true, 
							async_path: '/admin/inbound/results', 
							base_path: '/admin/inbound/'})
	            )
			)
		);	
	}

});

module.exports = mustBeAdmin(AdminInbound);

},{"../../utils/mustBeAdmin.jsx":410,"../../utils/withAsyncState.jsx":416,"../breadcrumb/app-breadcrumb.jsx":311,"../lander/app-asyncfilterlanders.jsx":340,"../xhr/app-loading.jsx":401,"react":235}],285:[function(require,module,exports){
var React = require('react')
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')
var request = require('../../utils/massive-request.js')
var Jumbotron = require('../jumbotron.jsx')
var getCookie = require('../../utils/get-cookie.js')
var AdminNetworkForm = require('./app-adminnetworkform.jsx')
var postRequest = require('../form/post.js')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var AdminNetwork = React.createClass({displayName: "AdminNetwork",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		return {messages: []}
	},

	submitClick: function(data){
		postRequest('/admin/network/' + this.props.network_hash + '/', data, function(response){
			if (response.error){
				this.setState({messages: response.messages})
			} else {
				PubSub.publish('success', "Network '" + data.name + "' updated.")
				this.navigate('/admin/networks/')
			}
		}.bind(this))
	},

	render: function() {
		if (this.props.remote.loading){
			var inner = React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		}
		if (this.props.remote.types === undefined){
			return React.createElement("div", null)
		}
		var crumb_links = [
			{url : '/admin/networks/', name: 'Network Admin', className: ''},
			{url : '/admin/network/'+this.props.network_hash+'/', name: this.props.remote.name, className: 'active'}
		]
		return (
			React.createElement("div", null, 
				React.createElement(Jumbotron, {crumb_links: crumb_links, title: "Edit " + this.props.remote.name}), 
				React.createElement("div", {className: "contain-fluid "}, 
					React.createElement(AdminNetworkForm, {method: "edit", messages: this.state.messages, data: this.props.remote, onSubmit: this.submitClick})
				)
			)
		)

	}	
})

module.exports = mustBeAdmin(withAsyncState(AdminNetwork));

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/get-cookie.js":407,"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../../utils/withAsyncState.jsx":416,"../form/post.js":329,"../jumbotron.jsx":337,"../xhr/app-loading.jsx":401,"./app-adminnetworkform.jsx":286,"pubsub-js":10,"react":235,"react-async":12,"react-router-component":22}],286:[function(require,module,exports){
var React = require('react')
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')
var request = require('../../utils/massive-request.js')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var ReactS3Uploader = require('react-s3-uploader');
var Messages = require('../form/messages.jsx')

/*
using props.data before i knew i could assign remote state from parent
directly to props {....this.props.remote} https://facebook.github.io/react/docs/transferring-props.html
*/

var AdminNetworkForm = React.createClass({displayName: "AdminNetworkForm",

	getInitialState: function(){
		var typeSelected = this.props.data.network_cls_name === undefined ? '' : this.props.data.network_cls_name
		return {
			typeSelected: typeSelected, 
			messages: this.props.messages, 
			logo_file_name: this.props.data.logo_file_name, 
			logo_url: this.props.data.logo_url
		}
	},

	componentWillReceiveProps: function(nextProps){
		console.log('componentWillReceiveProps', nextProps)
		this.setState({messages: nextProps.messages})
	},

	submitClick: function(){
		var data = {
			name: this.getInputValue('name'),
			website_url: this.getInputValue('website_url'),
			referral_url: this.getInputValue('referral_url'),
			about: this.getInputValue('about'),
			source: this.getInputValue('source'),
			notes: this.getInputValue('notes'),
			visible: this.getCheckedValue('visible'),
			update: this.getCheckedValue('update'),
			enabled: this.getCheckedValue('enabled'),
			no_advertiser: this.getCheckedValue('no_advertiser'),
			list_latest: this.getCheckedValue('list_latest'),
			network_cls_name: this.getInputValue('network_cls_name'),
			logo_file_name: this.state.logo_file_name
		};
		// add network type dependant additional fields
		this.getNetworkTypeFields(this.state.typeSelected).forEach(function(field){
			data[field] = this.getInputValue(field)
		}.bind(this))
		this.props.onSubmit(data)
	},

	onUploadProgress: function(percent, message){
		this.setState({
			messages: [
				{field: 'upload', state: 'info', message: 'Upload progress: ' + percent + '% ' + message}
			]
		})
	},

	onUploadError: function(message){
		this.setState({
			messages: [
				{field: 'upload', state: 'error', message: message}
			]
		})
	},

	onUploadFinish: function(signResult){
		this.setState({
			logo_file_name: signResult.file_name,
			logo_url: signResult.public_url,
			messages: [
				{field: 'upload', state: 'success', message:'Upload finised. Submit form to save logo.'}
			]
		})
	},

	getInputValue: function(name){
		return this.refs[name].getDOMNode().value;
	},

	getCheckedValue: function(name){
		return this.refs[name].getDOMNode().checked;
	},

	networkTypeChange: function(e){
		if (this.props.method == 'edit'){
			return
		}
		this.setState({typeSelected: e.target.value})
	},

	getNetworkTypeFields: function(typeSelected){
		if (typeSelected == ''){
			return []
		}
		var typeFields = []
		this.props.data.types.forEach(function(type){
			if (typeSelected == type.name){
				typeFields = type.fields
			}
		}.bind(this))
		return typeFields
	},

	render: function(){

		console.log('AdminNetworkForm', this.props, this.state)

		var name = this.props.data.name === undefined ? '' : this.props.data.name
		var website_url = this.props.data.website_url === undefined ? '' : this.props.data.website_url
		var referral_url = this.props.data.referral_url === undefined ? '' : this.props.data.referral_url
		var about = this.props.data.about === undefined ? '' : this.props.data.about
		var source = this.props.data.source === undefined ? '' : this.props.data.source
		var notes = this.props.data.notes === undefined ? '' : this.props.data.notes
		var visible = this.props.data.visible === undefined ? false : this.props.data.visible
		var update = this.props.data.update === undefined ? false : this.props.data.update
		var enabled = this.props.data.enabled === undefined ? false : this.props.data.enabled
		var no_advertiser = this.props.data.no_advertiser === undefined ? false : this.props.data.no_advertiser
		var list_latest = this.props.data.list_latest === undefined ? false : this.props.data.list_latest

		var networkTypeOptions = []
		if (this.props.data.types !== undefined){
			// generate select options for each network type e.g. CakeNetwork, HasOffersNetwork
			networkTypeOptions = this.props.data.types.map(function(type){
				return (React.createElement("option", {value: type.name}, type.name))
			})
			// generate additional fields for each network type
			var additionalFields = []
			if (this.state.typeSelected != ''){
				var typeFields = this.getNetworkTypeFields(this.state.typeSelected)
				additionalFields = typeFields.map(function(field, i){
					var defaultValue = this.props.data[field] === undefined ? '' : this.props.data[field]
					return (React.createElement("div", {key: i, className: "form-group form-group-default"}, 
						React.createElement("label", null, field), 
						React.createElement("input", {className: "form-control", defaultValue: defaultValue, ref: field, type: "text"})
					))
				}, this)
			}
		}

		var typeSelectCls = 'form-control'
		if (this.props.method == 'edit'){
			// disable type select when in editing mode
			typeSelectCls = 'form-control diabled'
		}

		var logo = ''
		if (this.state.logo_url){
			logo = React.createElement("img", {src: this.state.logo_url})
		}
		
		return (
			React.createElement("div", {className: "container-fluid"}, 
				React.createElement("div", {className: "form-group form-group-default required"}, 
					React.createElement("label", null, "Network Name"), 
					React.createElement(Messages, {field: "name", messages: this.state.messages}), 
					React.createElement("input", {className: "form-control", ref: "name", type: "text", defaultValue: name, required: ""})
				), 
				React.createElement("div", {className: "form-group form-group-default"}, 
					React.createElement("label", null, "Website URL"), 
					React.createElement("input", {className: "form-control", ref: "website_url", type: "text", defaultValue: website_url})
				), 
				React.createElement("div", {className: "form-group form-group-default"}, 
					React.createElement("label", null, "Referral URL"), 
					React.createElement("input", {className: "form-control", ref: "referral_url", type: "text", defaultValue: referral_url})
				), 
				React.createElement("div", {className: "form-group form-group-default"}, 
					React.createElement("label", null, "About"), 
					React.createElement("textarea", {style: {height: '80px'}, className: "form-control", ref: "about", defaultValue: about})
				), 
				React.createElement("div", {className: "form-group form-group-default"}, 
					React.createElement("label", null, "Source"), 
					React.createElement("input", {className: "form-control", ref: "source", type: "text", defaultValue: source})
				), 
				React.createElement("div", {className: "form-group form-group-default"}, 
					React.createElement("label", null, "Logo"), 
					logo, 
					React.createElement(Messages, {field: "upload", messages: this.state.messages}), 
					React.createElement(ReactS3Uploader, {
					    signingUrl: "/admin/upload/", 
					    accept: "image/*", 
					    onProgress: this.onUploadProgress, 
					    onError: this.onUploadError, 
					    onFinish: this.onUploadFinish})
				), 				
				React.createElement("div", {className: "form-group form-group-default required"}, 
					React.createElement("label", null, "Select Network Type"), 
					React.createElement(Messages, {field: "network_cls_name", messages: this.state.messages}), 
					React.createElement("select", {className: typeSelectCls, value: this.state.typeSelected, ref: "network_cls_name", onChange: this.networkTypeChange}, 
						React.createElement("option", {value: ""}, "Select Network Type"), 
						networkTypeOptions							
					)
				), 
				additionalFields, 
				React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
					React.createElement("label", null, 
						React.createElement("input", {type: "checkbox", ref: "visible", defaultChecked: visible}), 
						React.createElement("span", null, "Visible")
					)						
				), 				
				React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
					React.createElement("label", null, 
						React.createElement("input", {type: "checkbox", ref: "update", defaultChecked: update}), 
						React.createElement("span", null, "Update")
					)						
				), 
				React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
					React.createElement("label", null, 
						React.createElement("input", {type: "checkbox", ref: "enabled", defaultChecked: enabled}), 
						React.createElement("span", null, "Enabled")
					)						
				), 
				React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
					React.createElement("label", null, 
						React.createElement("input", {type: "checkbox", ref: "no_advertiser", defaultChecked: no_advertiser}), 
						React.createElement("span", null, "No Advertiser (preview link not reliably redirect to advertiser)")
					)						
				), 
				React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
					React.createElement("label", null, 
						React.createElement("input", {type: "checkbox", ref: "list_latest", defaultChecked: list_latest}), 
						React.createElement("span", null, "List Latest (list in latest offers)")
					)						
				), 
				React.createElement("div", {className: "form-group form-group-default"}, 
					React.createElement("label", null, "Admin Notes"), 
					React.createElement("textarea", {style: {height: '80px'}, className: "form-control", ref: "notes", defaultValue: notes})
				), 
				React.createElement("div", {className: "form-group"}, 
					React.createElement("button", {ref: "submit_button", className: "btn btn-default", value: "Submit", onClick: this.submitClick}, "Submit"), 
					React.createElement(Messages, {field: false, messages: this.state.messages})
				)
			)

		)
	}
});

module.exports = mustBeAdmin(AdminNetworkForm)

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../form/messages.jsx":328,"pubsub-js":10,"react":235,"react-async":12,"react-router-component":22,"react-s3-uploader":50}],287:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Link = require('react-router-component').Link
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')
var request = require('../../utils/massive-request.js')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var AdminNetworkList = React.createClass({displayName: "AdminNetworkList",

	mixins: [NavigatableMixin],

    getInitialState: function(){
        return {search: ''}
    },

    addNetworkClick: function(){
        this.navigate('/admin/network/add/', function(err){
            console.log(err)
        })
    },

    deleteClick: function(network_hash){
        if (confirm('Are you sure you want to delete this network? WILL CLEAR ALL OFFER DATA')){
            request('/admin/network/' + network_hash + '/', 'DELETE', {}, function(response){
                // mark item as deleted
                items = this.props.remote.items
                for (var i = 0; i < items.length; i++){
                    if (items[i].hash == network_hash){
                        items[i].deleted = true
                    }
                }
                this.setState({items: items})
            }.bind(this))
        }
    },

    updateClick: function(network_hash){
        this.navigate('/admin/network/' + network_hash + '/update/')
    },

    offersClick: function(network_hash){
        this.navigate('/admin/network/' + network_hash + '/offers/')
    },

    searchChange: function(){
        this.setState({search: this.refs['search-input'].getDOMNode().value})
    },

	render: function() {

        if (this.props.remote.loading){
            return (
                React.createElement("div", {className: "container-fluid  m-t-20 m-b-20"}, 
                    React.createElement(Loading, null)
                )
            )
        }
        
		if (typeof this.props.remote.items == 'undefined'){
			var rows = []
            var table = []
            console.log('no items', this.state)
		} else {
            console.log('items', this.state)
			var rows = []
            this.props.remote.items.forEach(function(item, i){
                if (item.deleted !== undefined && item.deleted == true){
                    return []
                }
                var source = 'Source: Internal'
                if (item.source != ''){
                    source = 'Source: ' + item.source
                }
                if (this.state.search != '' & item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) == -1){
                    return
                }

				rows.push(
                    React.createElement("tr", {key: i}, 
                        React.createElement("td", {className: "v-align-middle"}, 
                            React.createElement("button", {className: "btn btn-sm btn-default m-r-5", onClick: this.navigate.bind(this, '/admin/network/' + item.hash + '/')}, "Edit"), 
                            React.createElement("button", {className: "btn btn-sm btn-complete m-r-5", onClick: this.updateClick.bind(this, item.hash)}, "Update"), 
                            React.createElement("button", {className: "btn btn-sm btn-danger m-r-5", onClick: this.deleteClick.bind(this, item.hash)}, "Delete")
                            
                        ), 
                        React.createElement("td", {className: "v-align-middle"}, 
                            React.createElement(Link, {href: '/affiliate-network/' + item.hash + '/'}, item.name)
                        ), 
                        React.createElement("td", {className: "v-align-middle"}, 
                            item.network_cls
                        ), 
                        React.createElement("td", {className: "v-align-middle"}, 
                            React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
                                React.createElement("label", null, 
                                React.createElement("input", {type: "checkbox", checked: item.visible}), 
                                React.createElement("span", null, "Visible")
                                )
                            ), 
                            React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
                                React.createElement("label", null, 
                                React.createElement("input", {type: "checkbox", checked: item.update}), 
                                React.createElement("span", null, "Update")
                                )
                            ), 
                            React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
                                React.createElement("label", null, 
                                React.createElement("input", {type: "checkbox", checked: item.enabled}), 
                                React.createElement("span", null, "Enabled")
                                )
                            ), 
                            React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
                                React.createElement("label", null, 
                                React.createElement("input", {type: "checkbox", checked: item.no_advertiser}), 
                                React.createElement("span", null, "No Advertiser")
                                )
                            ), 
                            React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
                                React.createElement("label", null, 
                                React.createElement("input", {type: "checkbox", checked: item.list_latest}), 
                                React.createElement("span", null, "List Latest")
                                )
                            )
                        ), 
                        React.createElement("td", {className: "v-align-middle col-lg-1"}, 
                            React.createElement(Link, {href: '/admin/network/' + item.hash + '/offers/', className: "btn btn-sm btn-info m-r-5"}, item.count, " Offers")
                        )
                    )    
                )
	      	}, this)
            var table = (
                React.createElement("table", {id: "networkList", className: "table table-hover demo-table-search"}, 
                    React.createElement("thead", null, 
                        React.createElement("tr", null, 
                            React.createElement("td", null), 
                            React.createElement("td", null, "Name"), 
                            React.createElement("td", null, "Network Type"), 
                            React.createElement("td", null, "Options"), 
                            React.createElement("td", null, "Offers")
                        )
                    ), 
                    React.createElement("tbody", null, 
                        rows
                    )
                )
            )
		}

		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/admin/networks/', name: 'Network Admin', className: 'active'},
		]



		return (
			React.createElement("div", null, 

                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 

                        React.createElement(Breadcrumb, {links: crumb_links}), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                                
                                React.createElement("div", {className: "panel panel-transparent"}, 
                                    
                                    React.createElement("div", {className: "panel-body"}, 
                                        React.createElement("h3", null, "Network Admin"), 
                                        React.createElement("p", null, "Add, edit and update affiliate network data and offer import."), 
                                        React.createElement("br", null), 
                                        React.createElement("div", null, 
                                            React.createElement("button", {style: {"display":"none"}, className: "pull-left btn btn-primary btn-cons"}, "Learn More"), 
                                            React.createElement("button", {style: {"display":"none"}, className: "pull-left btn btn-cons"}, "Become a Affiliate!")
                                        )
                                    )
                                )
                            ), 
                            React.createElement("div", {className: "col-lg-7 col-md-6 "}, 
                                React.createElement("div", {className: "full-height"}, 
                                    React.createElement("div", {className: "panel-body text-center"}
                                        
                                    )
                                )
                            )
                        )
                    )
 
                ), 

                React.createElement("div", {className: "container-fluid  m-b-20"}, 
                    React.createElement("button", {className: "btn btn-primary", onClick: this.addNetworkClick}, "Add Network")
                ), 

                React.createElement("div", {className: "container-fluid  bg-white"}, 

                    React.createElement("div", {id: "networkPanel", className: "panel panel-transparent"}, 
                        React.createElement("div", {className: "panel-heading"}, 
                            React.createElement("div", {className: "panel-title"}, "AFFILIATE NETWORKS"), 
                            React.createElement("div", null, 
                                React.createElement("div", {className: "col-xs-12 col-sm-6 col-md-4 m-t-20"}, 
                                    React.createElement("input", {ref: "search-input", onChange: this.searchChange, type: "text", className: "form-control pull-left", placeholder: "Search"})
                                )
                            ), 
                            React.createElement("div", {className: "clearfix"})
                        ), 
                        React.createElement("div", {className: "panel-body"}, 
                            table
                        )
                    )
                )

            )  
		);
	}

});

module.exports = mustBeAdmin(withAsyncState(AdminNetworkList));

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../../utils/withAsyncState.jsx":416,"../breadcrumb/app-breadcrumb.jsx":311,"../xhr/app-loading.jsx":401,"pubsub-js":10,"react":235,"react-async":12,"react-router-component":22}],288:[function(require,module,exports){
var React = require('react')
var Jumbotron = require('../jumbotron.jsx')
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')
var request = require('../../utils/massive-request.js')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var OfferInspector = require('../offer/app-offerinspector.jsx')
var Pagination = require('../control/app-paginationnextprevious.jsx')
var OfferInspectorItem = require('../offer/app-offerinspectoritem.jsx')

var AdminNetworkOffer = React.createClass({displayName: "AdminNetworkOffer",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		return {page: 0, perPage: 10}
	},

	pageClick: function(page){
		this.setState({page: page})
		$(window).scrollTop($('#offer-inspector').offset().top)
	},

	render: function() {

			if (this.props.remote.loading){
				return (
					React.createElement("div", null, 
			            React.createElement("div", {className: "jumbotron"}, 
			                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
			                    React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
			                )
			            )	            
					)
				)
			}

			var crumb_links = [
				{url : '/admin/networks/', name: 'Network Admin', className: ''},
				{url : '/admin/network/' + this.props.network_hash + '/offers/', name: this.props.remote.name + ' Offers', className: 'active'}
			]
			var title = this.props.remote.name
			var rows = []
			var x = 0

			for (var i = 0; i < this.props.remote.items.length; i++){
				
				var offer = this.props.remote.items[i]
				rows.push(React.createElement(OfferInspectorItem, {offer: offer}))
				x++;

			}
			return (
				React.createElement("div", null, 
					React.createElement(Jumbotron, {crumb_links: crumb_links, title: title, heading: "Offer Inspector"}), 

					React.createElement("div", {className: "container-fluid  m-b-20"}, 
						rows	
					)
					
				)
			);
		}	
})

module.exports = mustBeAdmin(withAsyncState(AdminNetworkOffer))

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../../utils/withAsyncState.jsx":416,"../control/app-paginationnextprevious.jsx":322,"../jumbotron.jsx":337,"../offer/app-offerinspector.jsx":379,"../offer/app-offerinspectoritem.jsx":380,"../xhr/app-loading.jsx":401,"pubsub-js":10,"react":235,"react-async":12,"react-router-component":22}],289:[function(require,module,exports){
var React = require('react')
var Jumbotron = require('../jumbotron.jsx')
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')
var request = require('../../utils/massive-request.js')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var OfferInspector = require('../offer/app-offerinspector.jsx')
var Pagination = require('../control/app-paginationnextprevious.jsx')

var AdminUpdateNetwork = React.createClass({displayName: "AdminUpdateNetwork",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		return {page: 0, perPage: 10}
	},

	pageClick: function(page){
		this.setState({page: page})
		$(window).scrollTop($('#offer-inspector').offset().top)
	},

	render: function() {

			if (this.props.remote.loading){
				return (
					React.createElement("div", null, 
			            React.createElement("div", {className: "jumbotron"}, 
			                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
			                    React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
			                )
			            )	            
					)
				)
			}

			var crumb_links = [
				{url : '/admin/networks/', name: 'Network Admin', className: ''},
				{url : '/admin/network/' + this.props.network_hash + '/offers/', name: this.props.remote.name + ' Offers', className: 'active'}
			]
			var title = this.props.remote.name
			return (
				React.createElement("div", null, 
					React.createElement(Jumbotron, {crumb_links: crumb_links, title: title, heading: "Offer Inspector"}), 

					React.createElement(OfferInspector, {
						async_path: '/admin/network/' + this.props.network_hash + '/offers/list/' + this.state.page + '/'}), 	
					React.createElement("div", {className: "container-fluid  m-b-20"}, 
	                	React.createElement(Pagination, {
	                    	page: this.state.page, 
	                    	perPage: this.state.perPage, 
	                    	pageClick: this.pageClick})
	                )				
				)
			);
		}	
})

module.exports = mustBeAdmin(withAsyncState(AdminUpdateNetwork))

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../../utils/withAsyncState.jsx":416,"../control/app-paginationnextprevious.jsx":322,"../jumbotron.jsx":337,"../offer/app-offerinspector.jsx":379,"../xhr/app-loading.jsx":401,"pubsub-js":10,"react":235,"react-async":12,"react-router-component":22}],290:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Link = require('react-router-component').Link
var NetworkFeature = require('../network/app-networkfeature.jsx')
var AdvertiserFeature = require('../advertiser/app-advertiserfeature.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var log = require('loglevel')
var Pagination = require('../control/app-paginationnextprevious.jsx')
var AdminTrackersPage = require('./app-admintrackerspage.jsx')
var AdminTrackers = React.createClass({displayName: "AdminTrackers",

	getInitialState: function(props, cb){
		return {page: 0, perPage: 10}  // perPage must match the per_page number in the backend to stay in sync
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	render: function() {

		var asyncPath = '/admin/trackers/' + this.state.page + '/'

		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/admin/trackers/', name: 'Trackers', className: 'active'}
		]

		var inner = (
			React.createElement("div", {className: "inner"}, 
            	React.createElement(Breadcrumb, {links: crumb_links}), 
                React.createElement("div", {className: "row"}, 
                    React.createElement("div", {className: "col-lg-8 col-md-8"}, 	                            
                        React.createElement("div", {className: "panel panel-transparent"}, 
                            React.createElement("div", {className: "panel-body"}, 
                                React.createElement("h3", null, "Trackers")
                            )
                        )
                    )
                )
            )
        )
	
		return (
			React.createElement("div", null, 
	            React.createElement("div", {className: "jumbotron"}, 
	                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                    inner
	                )
	            ), 
            	React.createElement(AdminTrackersPage, {async_path: asyncPath}), 
            	React.createElement("div", {className: "container-fluid  m-b-20"}, 
                	React.createElement(Pagination, {
                    	page: this.state.page, 
                    	perPage: this.state.perPage, 
                    	pageClick: this.pageClick})
                )
			)
		);	
	}
});

module.exports = AdminTrackers;

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserfeature.jsx":297,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-paginationnextprevious.jsx":322,"../network/app-networkfeature.jsx":370,"../xhr/app-loading.jsx":401,"./app-admintrackerspage.jsx":291,"loglevel":9,"react":235,"react-router-component":22}],291:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var InlineLanderPanel = require('../lander/app-inlinelanderpanel.jsx')

var AdminTrackersPage = React.createClass({displayName: "AdminTrackersPage",

	mixins: [NavigatableMixin],
	
	render: function() {

		if (this.props.remote.loading){
			return (
	            React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                React.createElement(Loading, null)
	            )
	       )
		}		
		var advertisers = []
		for (var i = 0; i < this.props.remote.items.length; i++){
			var item = this.props.remote.items[i]
			var date = ''
			if (item['offer_min'] !== undefined){
				date = item['offer_min']
			}
			var adCount = ''
			if (item['ad_count'] !== undefined){
				var adCount = React.createElement("div", null, "Ads: ", item['ad_count'])	
			}
			var externalsCount = ''
			if (item['externals_count'] !== undefined){
				var externalsCount = React.createElement("div", null, "Externals: ", item['externals_count'])	
			}
			advertisers.push(
				React.createElement("div", {key: i, style: {marginBottom: '20px'}, className: "container-fluid  bg-white"}, 
					React.createElement("div", {className: "panel"}, 
						React.createElement("div", {className: "panel-body"}, 
							React.createElement("div", {className: "pull-right"}, 
								date
							), 
							React.createElement("h5", null, React.createElement(Link, {href: '/mediator/' + url_host_type(item['host_type']) + '/' + item['host_hash'] + '/'}, item['host_name'])), 
							adCount, 
							externalsCount, 		
							React.createElement(InlineLanderPanel, {base_path: "/admin/trackers/", items: item['landers']})					
						)
					)				
				)
			)
		}

		return (
			React.createElement("div", {id: "advertiser-items"}, 
                advertisers
			)
		)

	}

});

module.exports = withAsyncState(AdminTrackersPage);

},{"../../utils/mustBeAdmin.jsx":410,"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../lander/app-inlinelanderpanel.jsx":342,"../xhr/app-loading.jsx":401,"country-data":6,"loglevel":9,"query-string":11,"react":235,"react-router-component":22}],292:[function(require,module,exports){
var React = require('react')
var Jumbotron = require('../jumbotron.jsx')
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')
var request = require('../../utils/massive-request.js')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')

var AdminUpdateNetwork = React.createClass({displayName: "AdminUpdateNetwork",

	mixins: [ReactAsync.Mixin, AsyncIsomorphicMixin, NavigatableMixin],

	pollInteval: null,

	getComponentState: function(props, cb){
		cb(null, {logs: [], diff: 0})
	},

	pollLog: function(){
		var diff = this.state.diff === undefined? 0 : this.state.diff;
		request('/admin/network/' + this.props.network_hash + '/update/', 'GET', {log: true, diff: diff}, function(response){
			if (!response.error){
				var logs = this.state.logs
				for (var i = response.logs.length - 1; i >= 0 ; i--){
					logs.unshift(React.createElement("div", null, response.logs[i]))
				}
				this.setState({logs:logs, diff: response.diff})
			}
		}.bind(this))
	},

	startUpdate: function() {
		request('/admin/network/' + this.props.network_hash + '/update/', 'POST', {update: true}, function(response){
			
			this.pollInteval = setInterval(function(){
				this.pollLog()
			}.bind(this), 5000)
			
		}.bind(this))
	},

	componentWillUnmount: function(){
		clearInterval(this.pollInteval);
	},

	render: function() {
			var title = "Update Network"
			if (this.state.name !== undefined){
				title = "Update " + this.state.name
			}
			if (this.state.logs !== undefined){
				var logList = []
				for (var i = 0; i < this.state.logs.length; i++){
					logList.push(React.createElement("div", null, this.state.logs[i]))
				}
			}			
			var crumb_links = [
				{url : '/admin/networks/', name: 'Network Admin', className: ''},
				{url : '/admin/network/'+this.props.network_hash+'/update/', name: 'Update ' + this.state.name, className: 'active'}
			]
			return (
				React.createElement("div", null, 
					React.createElement(Jumbotron, {crumb_links: crumb_links, title: title}), 

					React.createElement("div", {className: "container-fluid m-b-20"}, 
	                    React.createElement("button", {className: "btn btn-default", onClick: this.navigate.bind(this, '/admin/networks/')}, "View Network List"), " ", React.createElement("button", {className: "btn btn-primary", onClick: this.startUpdate}, "Start Update")	                    
	                ), 

					React.createElement("div", {className: "container-fluid"}, 
						React.createElement("div", {className: "panel panel-default"}, 							
							React.createElement("div", {className: "panel-body"}, 
								React.createElement("div", {className: "panel-heading"}, 
									React.createElement("div", {className: "panel-title"}, 
										"Update Log"
									)									
								), 
								React.createElement("div", {className: "panel-body"}, 
									React.createElement("div", {ref: "log-list"}, 
										logList
									)
								)
							)
						)
					)
				)
			);
		}	
})

module.exports = mustBeAdmin(AdminUpdateNetwork)

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../jumbotron.jsx":337,"pubsub-js":10,"react":235,"react-async":12,"react-router-component":22}],293:[function(require,module,exports){
var React = require('react');
var LanderPanel = require('../lander/app-landerpanel.jsx')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var AdminVoluumLanders = React.createClass({displayName: "AdminVoluumLanders",

	render: function() {
		return (
			React.createElement(LanderPanel, {
				key: "lander-panel", 
				title: "Voluum Landers", 
				panelCls: "container-fluid ", 
				async_path: "/admin/voluum/landers/", 
				base_path: "/admin/voluum/landers/"})			
		);
	}

});

module.exports = mustBeAdmin(AdminVoluumLanders);

},{"../../utils/mustBeAdmin.jsx":410,"../lander/app-landerpanel.jsx":349,"react":235}],294:[function(require,module,exports){
var React = require('react');
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var request = require('../../utils/massive-request.js')
var Messages = require('../form/messages.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var deleteRequest = require('../form/delete.js')
var put = require('../form/put.js')
var postRequest = require('../form/post.js')

var AffiliateHostToggle = React.createClass({displayName: "AffiliateHostToggle",

	onClick: function(){
		if (this.state.affiliate_host){
			this.setState({messages: [], disabled: true})
	        deleteRequest('/admin/affiliate/host/' + url_host_type(this.props.host_type) + '/' + this.props.host_hash + '/', {}, function(response){            
	            if (response.affiliate_host !== undefined){
	            	var affiliate_host = response.affiliate_host
	            } else {
	            	var affiliate_host = false
	            }
	            this.setState({affiliate_host: affiliate_host, messages: response.messages, disabled: false})
	        }.bind(this))
	    } else {
	    	this.setState({messages: [], disabled: true})
	        postRequest('/admin/affiliate/host/' + url_host_type(this.props.host_type) + '/' + this.props.host_hash + '/', {}, function(response){            
	            if (response.affiliate_host !== undefined){
	            	var affiliate_host = response.affiliate_host
	            } else {
	            	var affiliate_host = false
	            }
	            this.setState({affiliate_host: affiliate_host, messages: response.messages, disabled: false})
	        }.bind(this))
	    }
	},	

	getInitialState: function(){
		return {affiliate_host: this.props.remote.affiliate_host, messages: [], disabled: false}
	},

	componentWillReceiveProps: function(nextProps){
		if (nextProps.remote.affiliate_host !== undefined){
			this.setState({affiliate_host: nextProps.remote.affiliate_host})
		}
	},

	render: function() {
		if (this.props.remote.loading){
			return (
				React.createElement("div", null, React.createElement(Loading, null))
			);
		}

		if (this.state.disabled){
			return React.createElement("div", null, "Affiliate Host: ", React.createElement("span", {className: "fa fa-check-circle-o"}, "Saving..."))
		}
		if (this.state.affiliate_host){
			return (React.createElement("div", null, 
				React.createElement("div", {onClick: this.onClick}, "Affiliate Host: ", React.createElement("span", {className: "fa fa-check-circle-o"})), 
				React.createElement(Messages, {messages: this.state.messages})
				))
		} else {
			return (React.createElement("div", null, 
				React.createElement("div", {onClick: this.onClick}, "Affiliate Host: ", React.createElement("span", {className: "fa fa-circle-o"})), 
				React.createElement(Messages, {messages: this.state.messages})
				))
		}
	}

});

module.exports = withAsyncState(AffiliateHostToggle);

},{"../../utils/massive-request.js":409,"../../utils/mustBeAdmin.jsx":410,"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../form/delete.js":327,"../form/messages.jsx":328,"../form/post.js":329,"../form/put.js":330,"../xhr/app-loading.jsx":401,"react":235}],295:[function(require,module,exports){
module.exports = function(){
	if (window._user !== undefined && window._user.groups !== undefined && window._user.groups.indexOf('Admin') > -1){
		return true
	} else {
		return false
	}
}

},{}],296:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Link = require('react-router-component').Link
var NetworkFeature = require('../network/app-networkfeature.jsx')
var AdvertiserFeature = require('../advertiser/app-advertiserfeature.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var log = require('loglevel')
var Pagination = require('../control/app-paginationnextprevious.jsx')
var AdvertiserPage = require('./app-advertiserpage.jsx')
var qs = require('querystring')

var Advertiser = React.createClass({displayName: "Advertiser",

	getInitialState: function(props, cb){
		return {page: 0, perPage: 10}  // perPage must match the per_page number in the backend to stay in sync
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	render: function() {
		
		var get = qs.parse(location.search.substr(1,Infinity))

		var asyncPath = '/advertiser/' + this.state.page + '/'
		if (get['sort_by']){
			asyncPath += '?sort_by=' + get['sort_by']
		}
		
		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/advertiser/', name: 'Advertisers', className: 'active'}
		]

		var inner = (
			React.createElement("div", {className: "inner"}, 
            	React.createElement(Breadcrumb, {links: crumb_links}), 
                React.createElement("div", {className: "row"}, 
                    React.createElement("div", {className: "col-lg-8 col-md-8"}, 	                            
                        React.createElement("div", {className: "panel panel-transparent"}, 
                            React.createElement("div", {className: "panel-body"}, 
                                React.createElement("h3", null, "Advertisers")
                            )
                        )
                    )
                )
            )
        )
	
		return (
			React.createElement("div", null, 
	            React.createElement("div", {className: "jumbotron"}, 
	                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                    inner
	                )
	            ), 
            	React.createElement(AdvertiserPage, {async_path: asyncPath}), 
            	React.createElement("div", {className: "container-fluid  m-b-20"}, 
                	React.createElement(Pagination, {
                    	page: this.state.page, 
                    	perPage: this.state.perPage, 
                    	pageClick: this.pageClick})
                )
			)
		);	
	}
});

module.exports = Advertiser;

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserfeature.jsx":297,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-paginationnextprevious.jsx":322,"../network/app-networkfeature.jsx":370,"../xhr/app-loading.jsx":401,"./app-advertiserpage.jsx":301,"loglevel":9,"querystring":420,"react":235,"react-router-component":22}],297:[function(require,module,exports){
var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Link = require('react-router-component').Link
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var AsyncFilterOffers = require('../offer/app-asyncfilteroffers.jsx')
var AsyncFilterGrid = require('../ad/app-asyncfiltergrid.jsx')
var AsyncFilterLanders = require('../lander/app-asyncfilterlanders.jsx')

var log = require('loglevel');

var AdvertiserFeature = React.createClass({displayName: "AdvertiserFeature",

	mixins: [NavigatableMixin],

	offerClick: function(hash){
		this.navigate('/offer/' + hash + '/')
	},

	render: function() {
		
		if (this.props.disabled){
			return (
				React.createElement("div", {className: "panel"}, 
					React.createElement("div", {className: "panel-heading"}, 
						React.createElement("div", {className: "panel-title"}, 
							"Advertiser"
						)					
					), 
					React.createElement("div", {className: "panel-body p-t-40 p-b-40"}, 
						"Advertiser for this offer not yet identified."
					)
				))
		}
		if (this.props.remote.loading == true){
			return (
				React.createElement("div", {className: "panel"}, 
					React.createElement("div", {className: "panel-heading"}, 
						React.createElement("div", {className: "panel-title"}, 
							"Advertiser"
						)					
					), 
					React.createElement("div", {className: "panel-body p-t-40 p-b-40"}, 
						React.createElement(Loading, null)
					)
				)
			)
		}

		var async_path = "/advertiser/" + url_host_type(this.props.remote.host_type) + "/" + this.props.remote.hash + "/"
		var base_path = this.props.base_path		

		if (this.props.device.trim() == "" || this.props.device.indexOf('Desktop') > -1){
			var ads = React.createElement(AsyncFilterGrid, {
							title: "Ads", 			
							filter_country: true, 	
							filter_dimensions: true, 		
							filter_platforms: true, 	
							sort: true, 
							sort_default: 'last_seen_desc', 
							async_path: async_path + "ad/panel", 
							base_path: base_path})			
		} else {
			var ads = (
				React.createElement("div", {className: "panel"}, 
					React.createElement("div", {className: "panel-heading"}, 
						React.createElement("div", {className: "panel-title"}, "Ads")
					), 
					React.createElement("div", {className: "panel-body"}, 
						"Ad data not available for mobile offers at this time."
					)
				)
			)
		}

		

		return (
			React.createElement("div", {className: "panel"}, 
				React.createElement("div", {className: "panel-heading"}, 
					React.createElement("div", {className: "panel-title"}, 
						"Advertiser"
					)					
				), 
				React.createElement("div", {className: "panel-body"}, 
					React.createElement("h3", null, React.createElement(Link, {href: "/advertiser/" + url_host_type(this.props.remote.host_type) + '/' + this.props.remote.hash + '/'}, this.props.remote.host_name)), 
					React.createElement("div", null, 
		
						React.createElement(AsyncFilterOffers, {
	                        title: "Offers", 
	                        filter_country: true, 
	                        filter_devices: true, 
	                        filter_networks: true, 
	                        sort: true, 
	                        cols: ['device', 'ads', 'title', 'payout-amount',  'payout-type', 'countries',  'category', 'network', 'date-added'], 
	                        sort_default: 'date_added_desc', 
	                        async_path: async_path + 'offer/panel', 
	                        base_path: base_path})	
					), 
					React.createElement("div", null, 
						ads
					), 
					React.createElement("div", null, 
						React.createElement(AsyncFilterLanders, {
							title: "Landers", 			
							filter_country: true, 		
							filter_platforms: true, 	
							sort: true, 
							sort_default: 'last_seen_desc', 
							async_path: async_path + "lander/panel", 
							base_path: base_path})
					), 
					React.createElement("div", null, 
						React.createElement(AsyncFilterLanders, {
							title: "Inbound Landers", 			
							filter_country: true, 		
							filter_platforms: true, 	
							sort: true, 
							sort_default: 'last_seen_desc', 
							async_path: async_path + "inbound/panel", 
							base_path: base_path})
					)
				)
			)
		)
		
	}

});

module.exports = withAsyncState(AdvertiserFeature);

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../ad/app-asyncfiltergrid.jsx":280,"../lander/app-asyncfilterlanders.jsx":340,"../offer/app-asyncfilteroffers.jsx":376,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],298:[function(require,module,exports){
var React = require('react');
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin

var AdvertiserItem = React.createClass({displayName: "AdvertiserItem",

	mixins: [NavigatableMixin],

	acronym: function(name){
		var capitals = ''
		for (var i = 0; i < name.length; i++){
			if (name.charAt(i) == name.charAt(i).toUpperCase()){
				capitals += name.charAt(i)
				if (capitals.length >= 2){
					break
				}
			}
		}
		return capitals
	},

	randomColor: function(){
		function getRandomInt (min, max) {
		    return Math.floor(Math.random() * (max - min + 1)) + min;
		}
		var colors = [
			'bg-primary-light', 
			'bg-complete-light', 
			'bg-success-light', 
			'bg-warning-light', 
			'bg-danger-light', 
			'bg-info-light',
			'bg-primary', 
			'bg-complete', 
			'bg-success', 
			'bg-warning', 
			'bg-danger', 
			'bg-info',
		]
		//num = getRandomInt(1, colors.length - 1)
		num = this.props.i % 12;
		return colors[num]
	},

	offerRowClick: function(e){
		if (e.target.tagName == 'TD'){
			var href = e.target.parentNode.getAttribute('data-href')
		} else {
			var href = e.target.getAttribute('data-href')
		}
		this.navigate(href)
	},

	render: function() {

		var display_name = this.props.host_name
		if (this.props.host_name.toLowerCase().indexOf('play.google.com') == 0 && this.props.host_name.indexOf('?') > -1){
			//if google play then show query param	
			if (this.props.index_title !== undefined && this.props.index_title){
				display_name = React.createElement("span", null, React.createElement("img", {src: "static/images/play-store.ico", height: "20", width: "20"}), " ", this.props.index_title)	
			} else {
				parsed = queryString.parse(this.props.host_name.split('?').pop())
				display_name = React.createElement("span", null, React.createElement("img", {src: "static/images/play-store.ico", height: "20", width: "20"}), " ", parsed['id'])	
			}
		} else if (this.props.host_name.toLowerCase().indexOf('itunes.apple.com') == 0 && this.props.host_name.indexOf('/') > -1){
			//if itunes store then show trailing /id 
			if (this.props.index_title !== undefined && this.props.index_title){
				display_name = React.createElement("span", null, React.createElement("img", {src: "static/images/itunes-icon.png", height: "20", width: "20"}), " ", this.props.index_title)
			} else {
				display_name = React.createElement("span", null, React.createElement("img", {src: "static/images/itunes-icon.png", height: "20", width: "20"}), " ", this.props.host_name.split('/').pop())				
			}
		} else {
			if (this.props.index_title !== undefined && this.props.index_title){
				display_name = this.props.index_title
			} else {
				display_name = this.props.host_name
			}
		}

		var rows = []
		var category_table = {}
		// now push on offer rows for this advertiser
		this.props.offers.forEach(function(offer, i){

			if (this.props.filterOffers){
				if (this.props.searchMatch === false || this.props.countryMatch === false || this.props.categoryMatch === false || this.props.payoutMatch === false){
					return
				}
				// if offer is not in array then filter out
				if (this.props.searchMatch !== true && this.props.searchMatch[i] === undefined){
					return
				}
				// if offer is not in array then filter out
				if (this.props.countryMatch !== true && this.props.countryMatch[i] === undefined){
					return
				}
				// if offer is not in array then filter out
				if (this.props.categoryMatch !== true && this.props.categoryMatch[i] === undefined){
					return
				}
				// if offer is not in array then filter out
				if (this.props.payoutMatch !== true && this.props.payoutMatch[i] === undefined){
					return
				}
			}

			if (offer.category != null && offer.category.trim() != ''){
				var categories = offer.category.split(",")
				for (var i = 0; i < categories.length; i++){
					category_table[categories[i].trim()] = true
				}
			}

			if (offer.countries != null && offer.countries.trim() != ''){
				var numCountries = offer.countries.split(",").length
				if (numCountries > 5){
					var countries = numCountries + " countries"
				} else {
					var countries = offer.countries
				}
			} else {
				var countries = ''
			}
			if (offer.payout_type == 'RevShare'){
				var payout_amount = offer.payout_amount.replace('%','') + '%'
			} else {
				var payout_amount = '$' + offer.payout_amount.replace('$','')				
			}
			rows.push(React.createElement("tr", {style: {cursor: 'pointer'}, "data-href": '/' + this.props.url_host_type_str + '/' + this.props.hash +'/detail/offer/' + offer.hash + '/', onClick: this.offerRowClick}, 
						React.createElement("td", {className: "fs-14 col-xs-8"}, offer.offer_title), 
						React.createElement("td", {style: {"width": "110px"}, className: "text-right b-r b-dashed b-grey"}, 
							React.createElement("span", {className: "hint-text small"}, countries)
						), 
						React.createElement("td", {style: {"width": "70px"}, className: "text-right b-r b-dashed b-grey"}, 
							React.createElement("span", {className: "hint-text small"}, offer.payout_type)
						), 
						React.createElement("td", {className: ""}, 
							React.createElement("span", {className: "font-montserrat fs-18"}, payout_amount)
						)
					))
			/*
			rows.push(
				<tr href={'/' + url_host_type_str + '/' + item.hash +'/detail/offer/' + offer.hash + '/'}>
				    <td style={{"background-color":"#FAFAFA"}} colSpan="2" className="v-align-middle font-montserrat all-caps p-t-5 p-b-5">
				        <p>{offer.offer_title}</p>
				    </td>
				    <td style={{"background-color":"#FAFAFA"}} colSpan="1" className="v-align-middle font-montserrat all-caps p-t-5 p-b-5">
				        <p>{this.props.network_name}</p>
				    </td>
				    <td style={{"background-color":"#FAFAFA"}} className="v-align-middle font-montserrat all-caps p-t-5 p-b-5">
				        <p>{offer.category}</p>
				    </td>
				    <td style={{"background-color":"#FAFAFA"}} className="v-align-middle font-montserrat all-caps p-t-5 p-b-5">
				        <p>{countries}</p>
				    </td>
				    <td style={{"background-color":"#FAFAFA"}} className="v-align-middle font-montserrat all-caps p-t-5 p-b-5">
				        <p>{offer.payout_amount}</p>
				    </td>
				    <td style={{"background-color":"#FAFAFA"}} className="v-align-middle font-montserrat all-caps p-t-5 p-b-5">
				        <p>{offer.payout_type}</p>
				    </td>
				</tr>
			)
			*/
		}, this)

		var categories = []
		for (category in category_table){
			if (category_table.hasOwnProperty(category)){
				categories.push(React.createElement("span", {className: "label font-montserrat all-caps p-t-5 m-l-5 p-b-5 inline fs-10"}, category))
			}
		}
		if (categories.length > 0){
			var categoryHeader = (React.createElement("div", {className: "m-b-20"}, categories))
		} else {
			var categoryHeader = []
		}

		counts = []
		if (this.props.ad_count > 0){
			counts.push(React.createElement("div", {className: "m-r-20 pull-left hint-text fs-16"}, 
							React.createElement("i", {className: "fa fa-image m-r-5"}), 
							React.createElement("span", null, this.props.ad_count), 
							React.createElement("span", null, " "), 
							React.createElement("span", null, "ads")
							
						))
		}
		if (this.props.lander_count > 0){
			counts.push(React.createElement("div", {className: "m-r-20 pull-left hint-text fs-16"}, 
							React.createElement("i", {className: "fa fa-file-code-o m-r-5"}), 
							React.createElement("span", null, this.props.lander_count), 
							React.createElement("span", null, " "), 
							React.createElement("span", null, "landers")
							
						))
		}

		var bg = 'bg-white'
		if (this.props.i % 2 == 1){
			bg = 'bg-master-lightest'
		}

		return (
			React.createElement("div", {style: {"margin-bottom": "0px"}, className: "widget-11-2 panel p-l-5 p-r-5 widget-loader-circle " + bg}, 
				React.createElement("div", {className: "p-t-10 p-b-20"}, 
					categoryHeader, 	
					React.createElement("div", {className: "pull-left"}, 
						{/*
						<div className={"logo-circle pull-left " + this.randomColor()}>
							<h4 className="text-white text-center">{this.acronym(this.props.host_name)}</h4>
						</div>
						*/}, 
						React.createElement("h4", {className: "text-master no-margin"}, display_name)
					), 	
							
					React.createElement("div", {className: "pull-right m-r-20"}, 
						React.createElement("ul", {className: "nav nav-pills", role: "tablist"}, 
							counts
						)
					), 
					React.createElement("div", {className: "clearfix"})
					
				), 
				React.createElement("div", {className: "auto-overflow"}, 
					React.createElement("table", {className: "table table-condensed table-hover"}, 
						React.createElement("tbody", null, 
							rows
						)
					)
				)
			)
		);
	}

});

module.exports = AdvertiserItem;

},{"query-string":11,"react":235,"react-router-component":22}],299:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var Link = require('react-router-component').Link
/*
	Can be renamed to AdvertiserPanel if the current AdvertiserPanel used on network pages in renamed.

	The plan is to have a more transitional Offer listing on the network pages links to offer pages with avdertiser meta
	as opposed to link to Advertiser pages with offer meta.
*/

var AdvertiserListPanel = React.createClass({displayName: "AdvertiserListPanel",

	getInitialState: function(){
		var perPage = 20
		if (this.props.perPage !== undefined){
			perPage = this.props.perPage
		}
		return {page: 0, perPage: perPage}
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	externalClick: function(url){
		window.open(url, "_blank")
	},

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "advertiser_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Advertisers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "advertiser_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Advertisers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        "No advertisers found."
	                    )
	                )
				))
		}

		var total = this.props.remote.items[0].count

		var items = []
		
		var start = this.state.page * this.state.perPage
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= this.props.remote.items.length){
				break
			}
			var item = this.props.remote.items[i]

			if (item.count !== undefined){
				var percent = Math.ceil(item.count / total * 100)
				var progressBar = (React.createElement("td", {className: "col-xs-3"}, 
						React.createElement("div", {className: "progress no-margin"}, 
							React.createElement("div", {className: "progress-bar progress-bar-success", "data-percentage": percent + '%', style: {width: percent + '%'}})
						)
					))
			}			

			var advertiserLink = React.createElement(Link, {href: "/advertiser/" + url_host_type(item.host_type) + '/' + item.host_hash + '/'}, item.host_name)

			items.push(
				React.createElement("tr", {key: i}, 	
					progressBar, 																
					React.createElement("td", {className: "no-padding col-xs-12"}, 
						advertiserLink, " ", React.createElement("span", {style: {cursor: 'pointer'}, className: "fs-10 fa fa-external-link", onClick: this.externalClick.bind(this, "http://" + item.sub_domain)})
					)
						
				)					
			)
		}

		var panelCls = ""
		if (this.props.panelCls !== undefined){
			panelCls = this.props.panelCls
		}

		return (
			React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Advertisers"), 	
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement("div", {className: "row"}, 
                    		React.createElement("div", {className: "col-xs-12"}, 
                    			React.createElement("table", {className: "col-xs-12"}, 
                    				React.createElement("thead", null, 
                    					React.createElement("tr", null, 
                    						React.createElement("td", null), 
                    						React.createElement("td", null)
                    					)
                    				), 
                    				React.createElement("tbody", null, 
	                        			items
	                        		)
                        		)
                        	)
                        ), 
                        React.createElement("div", {className: "row p-t-20"}, 
                        	React.createElement("div", {className: "col-xs-12"}, 
                        		React.createElement(Pagination, {
                        			page: this.state.page, 
                        			perPage: this.state.perPage, 
                        			pageClick: this.pageClick, 
                        			total: this.props.remote.items.length})	
                        	)
                        )
                    )
                )
			)
		)		
	}
});

module.exports = withAsyncState(AdvertiserListPanel);

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],300:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;

var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')

var AdvertiserPanel = React.createClass({displayName: "AdvertiserPanel",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		country_list = countries.all.sort(function(a, b){ 
			return a.name.localeCompare(b.name)
		})
		return {
			country_list: country_list,
			filter: { 'search': '', 'country': [], 'category': [], 'payout': []},
			page: 0, 
			perPage: 50
		}
	},

	pageClick: function(page){
		$(window).scrollTop($('#network-offer-panel').offset().top)
		this.setState({page: page})
	},

	handleSearchChange: function(event){
		filter = this.state.filter;
		filter['search'] = event.target.value;
		// reset page to display newly filtered items
		this.setState({filter:filter, page: 0})
	},

	handleClearCountry: function(){
		var filter = this.state.filter
		filter['country'] = []
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handleCountryChange: function(event){
		var country = event.target.value.toLowerCase()
		var filter = this.state.filter
		if (country == '' || country == 'all'){
			filter['country'] = []
		} else {
			if (country == 'gb'){
				filter['country'] = [country, 'UK'.toLowerCase()] // support alternate country code for gb
			} else {
				filter['country'] = [country]
			}
			
		}
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handleCategoryClick: function(event){
		var category = event.target.textContent.toLowerCase()
		var filter = this.state.filter
		if (category == 'all'){
			filter['category'] = []
		} else {
			// check if category in filter already
			var pos = false
			for (var i = 0; i < filter['category'].length; i++){
				if (category == filter['category'][i]){
					pos = i
					break
				}
			}
			// if so remove
			if (pos !== false){
				filter['category'].splice(i,1)
			} else {
				// if not add
				filter['category'].push(category)
			}
		}
		console.log('filter: category', filter['category'])
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handlePayoutClick: function(event){
		var payoutType = event.target.textContent.toLowerCase()
		var filter = this.state.filter
		if (payoutType == 'all'){
			filter['payout'] = []
		} else {
			// check if payoutType in filter already
			var pos = false
			for (var i = 0; i < filter['payout'].length; i++){
				if (payoutType == filter['payout'][i]){
					pos = i
					break
				}
			}
			// if so remove
			if (pos !== false){
				filter['payout'].splice(i,1)
			} else {
				// if not add
				filter['payout'].push(payoutType)
			}
		}
		console.log('filter: payout', filter['payout'])
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	categoryFilterEnabled: function(category){
		//normalize category name to lower case
		category = category.toLowerCase()
		categoryFilter = this.state.filter['category']
		if (categoryFilter.length == 0){
			return category == 'all' ? true : false
		}
		if ($(categoryFilter).filter([category]).length > 0){
			return true
		} else {
			return false
		}
	},

	payoutFilterEnabled: function(payoutType){
		//normalize category name to lower case
		payoutType = payoutType.toLowerCase()
		payoutFilter = this.state.filter['payout']
		if (payoutFilter.length == 0){
			return payoutType == 'all' ? true : false
		}
		if ($(payoutFilter).filter([payoutType]).length > 0){
			return true
		} else {
			return false
		}
	},

	offerRowClick: function(e){
		if (e.target.tagName == 'TD'){
			var href = e.target.parentNode.getAttribute('data-href')
		} else {
			var href = e.target.getAttribute('data-href')
		}
		console.log('click', href)
		this.navigate(href)
	},

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {className: this.props.panelCls}, 
		                React.createElement("div", {className: "panel panel-transparent"}, 
		                    React.createElement("div", {className: "panel-heading"}, 
		                        React.createElement("div", {className: "panel-title"}, "Offers")
		                    )
		                ), 
		                React.createElement("div", {className: "panel-body p-t-40 p-b-40"}, 
		                	React.createElement(Loading, null)
		                )
		            ))
		}

		var table = []

		log.debug('AdvertiserPanel', 'render', this.state)


		var country_options = []
		var x = 0
		if (this.state.country_list !== undefined){
			this.state.country_list.forEach(function(country, i){
				if (country.status != 'assigned'){
					return false
				}
				country_options.push(
					React.createElement("option", {key: x, value: country.alpha2, "data-alternative-spellings": country.alpha2}, 
						country.name
					))
				x++;
			})
		}

		// add shortcut options
		country_options.unshift(React.createElement("option", {key: x+1, value: "all", "data-alternative-spellings": "all"}, "-----------------"))
		country_options.unshift(React.createElement("option", {key: x+2, value: "FR", "data-alternative-spellings": "FR"}, "France"))
		country_options.unshift(React.createElement("option", {key: x+3, value: "ES", "data-alternative-spellings": "ES"}, "Spain"))
		country_options.unshift(React.createElement("option", {key: x+4, value: "DE", "data-alternative-spellings": "DE"}, "Germany"))
		country_options.unshift(React.createElement("option", {key: x+5, value: "NZ", "data-alternative-spellings": "NZ"}, "New Zealand"))
		country_options.unshift(React.createElement("option", {key: x+6, value: "AU", "data-alternative-spellings": "AU"}, "Australia"))
		country_options.unshift(React.createElement("option", {key: x+7, value: "GB", "data-alternative-spellings": "GB"}, "United Kingdom"))
		country_options.unshift(React.createElement("option", {key: x+8, value: "CA", "data-alternative-spellings": "CA"}, "Canada"))
		country_options.unshift(React.createElement("option", {key: x+9, value: "US", "data-alternative-spellings": "US"}, "United States"))
			
		
		// build filter selections
		/* DEPRECATED - using country data instead
		var country_options = this.props.filters.countries.map(function(country){
			return (<option style={{"width": "100px"}} value={country}>{country}</option>)
		})
		*/

		var x = 0
		var category_labels = this.props.remote.filters.categories.map(function(category, i){
			x = i
			var labelColor = ''
			if (this.categoryFilterEnabled(category)){
				var labelColor = 'label-info'
			}
			return (React.createElement("span", {key: x, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handleCategoryClick}, category))			
		}, this)
		var labelColor = ''
		if (this.categoryFilterEnabled('all')){
			var labelColor = 'label-info'
		}
		category_labels.unshift(React.createElement("span", {key: x+1, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handleCategoryClick}, "All"))
		
		var x = 0
		var payout_type_labels = this.props.remote.filters.payout_types.map(function(payout_type, i){
			x = i
			var labelColor = ''
			if (this.payoutFilterEnabled(payout_type)){
				var labelColor = 'label-success'
			}
			return (React.createElement("span", {key: x, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handlePayoutClick}, payout_type))
		}, this)
		var labelColor = ''
		if (this.payoutFilterEnabled('all')){
			var labelColor = 'label-success'
		}
		payout_type_labels.unshift(React.createElement("span", {key: x+1, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handlePayoutClick}, "All"))

		var rows = []

		var hideList = [
			'apple.com',
			'google.com',
			'doubleclick.com',
			'doubleclick.net',
			'facebook.com',
			'go2cloud.org'
		]


		var selected = []
		this.props.remote.items.forEach(function(item){

			if ($.inArray(item.host_name, hideList) > -1){
				return false
			}

			if (this.state.filter['search'].trim() != ''){
				var searchText = this.state.filter['search'].trim().toLowerCase()
				if (item.offer_title.toLowerCase().indexOf(searchText) == -1){
					return false
				}
			}

			if (this.state.filter['country'].length > 0){
				var filter_countries = this.state.filter['country']
				if (item.countries == null){
					return false
				}
				var offer_countries = item.countries.split(',').map(function(country){
					// lower case to make lowercase filters
					return country.trim().toLowerCase()
				})
				if ($(filter_countries).filter(offer_countries).length == 0){
					return false
				}
			}

			if (this.state.filter['category'].length > 0){
				var filter_categories = this.state.filter['category']
				if (item.category == null){
					return false
				}
				var offer_categories = item.category.split(',').map(function(country){
					// lower case to make lowercase filters
					return country.trim().toLowerCase()
				})
				if ($(filter_categories).filter(offer_categories).length == 0){
					return false
				}
			}

			if (this.state.filter['payout'].length > 0){
				var filter_payouts = this.state.filter['payout']
				if (item.payout_type == null){
					return false
				}
				var offer_payouts = item.payout_type.split(',').map(function(payout_type){
					// lower case to make lowercase filters
					return payout_type.trim().toLowerCase()
				})
				if ($(filter_payouts).filter(offer_payouts).length == 0){
					return false
				}
			}
			selected.push(item);
		}.bind(this))

		var x = 0
		var start = this.state.page * this.state.perPage 
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= selected.length){
				break
			}
			var offer = selected[i]

			url_host_type_str = url_host_type(offer.host_type)

			if (offer.countries != null && offer.countries.trim() != ''){
				var numCountries = offer.countries.split(",").length
				if (numCountries > 5){
					var countries = numCountries + " countries"
				} else {
					var countries = offer.countries
				}
			} else {
				var countries = ''
			}
			if (offer.payout_type == 'RevShare'){
				var payout_amount = offer.payout_amount.replace('%','') + '%'
			} else {
				var payout_amount = '$' + offer.payout_amount.replace('$','')		
			}
			var ad_count = ' - '
			if (offer.ad_count > 0){
				ad_count = (React.createElement("span", null, React.createElement("i", {className: "fa fa-image"}), " ", offer.ad_count))
			}
			var lander_count = ' - '
			if (offer.lander_count > 0){
				lander_count = (React.createElement("span", null, React.createElement("i", {className: "fa fa-file-code-o"}), " ", offer.lander_count))
			}
			/*
			var offer_count = ' - '
			if (offer.offer_count > 0){
				offer_count = (<span><i className="fa fa-money"></i> {offer.offer_count}</span>)
			}
			*/

			if (offer.host_name.toLowerCase().indexOf('play.google.com') == 0 && offer.host_name.indexOf('?') > -1){
				//if google play then show play icon
				var favicon = (React.createElement("span", null, React.createElement("img", {src: "static/images/play-store.ico", height: "16", width: "16"}), " "))
			} else if (offer.host_name.toLowerCase().indexOf('itunes.apple.com') == 0 && offer.host_name.indexOf('/') > -1){
				//if itunes store then show itunes icon
				var favicon = (React.createElement("span", null, React.createElement("img", {src: "static/images/itunes-icon.png", height: "16", width: "16"}), " "))
			} else {
				var favicon = (React.createElement("span", null))
			}
			if (offer.pub_date){
				var last_updated = new Date(offer.pub_date).toLocaleDateString();
			} else {
				var last_updated = new Date(offer.date_added).toLocaleDateString();
			}
			rows.push(React.createElement("tr", {style: {cursor: 'pointer'}, key: x, onClick: this.navigate.bind(this, '/' + url_host_type_str + '/' + offer.host_hash +'/offer/' + offer.hash + '/')}, 
						{ /* <td style={{"width": "90px"}} className="fs-14 b-r b-dashed b-grey text-center">{offer_count}</td> */ }, 
						React.createElement("td", {style: {"width": "90px"}, className: "hidden-xs fs-14 b-r b-dashed b-grey text-center"}, ad_count), 
						React.createElement("td", {style: {"width": "90px"}, className: "hidden-xs fs-14 b-r b-dashed b-grey text-center"}, lander_count), 
						React.createElement("td", {className: "fs-14 offer-title"}, favicon, offer.offer_title), 
						React.createElement("td", {style: {"width": "130px"}, className: "hidden-xs text-center b-r b-dashed b-grey"}, 
							React.createElement("span", {className: "hint-text small"}, countries)
						), 
						React.createElement("td", {style: {"width": "94px"}, className: "hidden-xs text-center b-r b-dashed b-grey"}, 
							React.createElement("span", {className: "hint-text small"}, offer.payout_type)
						), 
						React.createElement("td", {className: "offer-amount"}, 
							React.createElement("span", {className: "font-montserrat fs-18"}, payout_amount)
						), 
						React.createElement("td", {style: {"width": "94px"}, className: "hidden-xs text-center b-r b-dashed b-grey"}, 
							React.createElement("span", {className: "hint-text small"}, last_updated)
						)
						
					))
			x++;
		}
		
		panelContent = []
		if (rows.length == 0){
			if (this.props.remote.items.length > 0){
				rows = (React.createElement("tr", null, 
                		React.createElement("td", {colSpan: "6", className: "text-center p-t-20 p-b-20"}, 
                			"No offers match your selection."
                		)
                	))
			} else {
				rows = (React.createElement("tr", null, 
                		React.createElement("td", {colSpan: "6", className: "text-center p-t-20 p-b-20"}, 
                			"No active offers found."
                		)
                	))
			}				
		} 
		panelContent = (
                React.createElement("table", {className: "table table-condensed table-hover offer-table"}, 
                	React.createElement("thead", {className: "fs-12 font-montserrat all-caps"}, 
                		React.createElement("tr", null, 
                			{ /*<td style={{"width": "90px"}} className="text-center">Offers</td> */}, 
                			React.createElement("td", {style: {"width": "90px"}, className: "hidden-xs text-center"}, "Ads"), 
                			React.createElement("td", {style: {"width": "90px"}, className: "hidden-xs text-center"}, "Landers"), 
                			React.createElement("td", {className: "offer-title"}, "Offer"), 
                			React.createElement("td", {style: {"width": "130px"}, className: "hidden-xs text-center"}, "Countries"), 
                			React.createElement("td", {style: {"width": "94px"}, className: "hidden-xs text-center"}, "Type"), 
                			React.createElement("td", {className: "offer-amount text-left p-l-20"}, "Amount"), 
                			React.createElement("td", {style: {"width": "94px"}, className: "p-l-20"}, "Last Updated")
                		)
                	), 
                    React.createElement("tbody", null, 
	                    rows
	                )
                )
            )
		var countrySelectValue = ""
		if (this.state.filter['country'].length > 0){
			countrySelectValue = this.state.filter['country'][0].toUpperCase()
		}
		return (
			React.createElement("div", {className: this.props.panelCls}, 
                React.createElement("div", {id: "network-offer-panel", className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Offers"), 
                        React.createElement("div", {className: "pull-right"}, 
                        	{/*
                        	<span className="m-r-30">
                        		<i className="fa fa-image"></i> = Ads
                        	</span>
                        	<span className="m-r-20">
                    	    	<i className="fa fa-file-code-o"></i> = Landers
                    	    </span>
                    		*/}
                    	)
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement("div", {className: "row"}, 
	                    	React.createElement("div", {id: "advertiser-panel-filters", className: "col-md-3"}, 
	                    		React.createElement("div", {id: "sticky-filters"}, 
		                    		React.createElement("div", {className: "row"}, 		       
			                        	React.createElement("div", {className: "col-md-12 m-b-10"}, 
			                        		React.createElement("h5", null, "Search"), 
			                        		React.createElement("input", {type: "text", id: "search-advertiserList", className: "form-control input-md", placeholder: "Type search text", onChange: this.handleSearchChange})
			                        	)
			                        ), 
			                        React.createElement("div", {className: "row"}, 
				                        React.createElement("div", {className: "col-md-12 m-b-10"}, 
				                        	React.createElement("h5", null, "Filter by country"), 
				                        	React.createElement("div", {id: "country-selector"}, 
				                        		React.createElement("div", {className: "input-group"}, 
													React.createElement("select", {className: "field", value: countrySelectValue, className: "form-control", onChange: this.handleCountryChange}, 
												      	React.createElement("option", {value: ""}, "Select Country"), 
												        country_options
												    ), 
												    React.createElement("span", {className: "input-group-btn"}, 
												    	React.createElement("button", {className: "btn btn-default btn-cons", onClick: this.handleClearCountry}, "Reset")
													)
												)
											)
				                        ), 
				                        React.createElement("div", {className: "col-md-12 m-b-10"}, 
				                        	React.createElement("h5", null, "Filter by category"), 
				                        	React.createElement("div", null, category_labels), 
				                        	React.createElement("div", {className: "clearfix"})
				                        ), 
				                        React.createElement("div", {className: "col-md-12 m-b-10"}, 
				                        	React.createElement("h5", null, "Filter by payout type"), 
				                        	React.createElement("div", null, payout_type_labels), 
				                        	React.createElement("div", {className: "clearfix"})
				                        )
				                    )
				                )
	                    	), 
	                    	React.createElement("div", {id: "advertiser-panel-content", className: "col-md-9"}, 
	                        	panelContent, 
	                        	React.createElement(Pagination, {
		                        	page: this.state.page, 
		                        	perPage: this.state.perPage, 
		                        	total: selected.length, 
		                        	pageClick: this.pageClick})
	                        )
	                        
                        )
                    )
                )
			)
		)

	}

});

module.exports = withAsyncState(AdvertiserPanel);

},{"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"country-data":6,"loglevel":9,"query-string":11,"react":235,"react-router-component":22}],301:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')

var AdvertiserPage = React.createClass({displayName: "AdvertiserPage",

	mixins: [NavigatableMixin],
	
	render: function() {

		if (this.props.remote.loading){
			return (
	            React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                React.createElement(Loading, null)
	            )
	       )
		}		
		var advertisers = []
			for (var i = 0; i < this.props.remote.items.length; i++){
				var item = this.props.remote.items[i]
				var date = ''
				if (item['offer_min'] !== undefined){
					date = item['offer_min']
				}
				var adCount = ''
				if (item['ads_count'] !== undefined){
					var adCount = React.createElement("span", null, "Ads: ", item['ads_count'])	
				}
				var externalsCount = ''
				if (item['externals_count'] !== undefined){
					var externalsCount = React.createElement("span", null, "Inbound: ", item['externals_count'])	
				}
				var offersCount = ''
				if (item['offers_count'] !== undefined){
					var offersCount = React.createElement("span", null, "Offers: ", item['offers_count'])	
				}
				var category = React.createElement("div", null, "Category: None")
				if (item['category_name'] != undefined && item['category_name']){
					var category = React.createElement("div", null, "Category: ", item['category_name'])
				}
				advertisers.push(
					React.createElement("div", {key: i, style: {marginBottom: '20px'}, className: "container-fluid  bg-white"}, 
						React.createElement("div", {className: "panel"}, 
							React.createElement("div", {className: "panel-body"}, 
								React.createElement("div", {className: "pull-right"}, 
									date
								), 
								React.createElement("h5", null, React.createElement(Link, {href: '/advertiser/' + url_host_type(item['host_type']) + '/' + item['host_hash'] + '/'}, item['host_name'])), 
								adCount, " ", offersCount, " ", externalsCount, 
								category							
							)
						)				
					)
				)
			}

		return (
			React.createElement("div", {id: "advertiser-items"}, 
                advertisers
			)
		)

	}

});

module.exports = withAsyncState(AdvertiserPage);

},{"../../utils/mustBeAdmin.jsx":410,"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"country-data":6,"loglevel":9,"query-string":11,"react":235,"react-router-component":22}],302:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Link = require('react-router-component').Link
var Loading = require('../xhr/app-loading.jsx')
var log = require('loglevel')
var Pagination = require('../control/app-paginationnextprevious.jsx')
var AffiliateLandersPage = require('./app-affiliatelanderspage.jsx')
var AsyncFilterLanders = require('../lander/app-asyncfilterlanders.jsx')
var qs = require('querystring')

var AffiliateLanders = React.createClass({displayName: "AffiliateLanders",

	getInitialState: function(props, cb){
		return {page: 0, perPage: 10}  // perPage must match the per_page number in the backend to stay in sync
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	render: function() {

		var base_path = '/affiliate-lander/'
		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/affiliate-lander/', name: 'Affiliate Landers', className: 'active'}
		]

		var inner = (
			React.createElement("div", {className: "inner"}, 
            	React.createElement(Breadcrumb, {links: crumb_links}), 
                React.createElement("div", {className: "row"}, 
                    React.createElement("div", {className: "col-lg-5 col-md-8"}, 	                            
                        React.createElement("div", {className: "panel panel-transparent"}, 
                            React.createElement("div", {className: "panel-body"}, 
                                React.createElement("h3", null, "Affiliate Landers")
                            )
                        )
                    )
                )
            )
        )
	
		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    inner
                ), 
            	React.createElement("div", {className: "container-fluid"}, 
            		React.createElement(AsyncFilterLanders, {
						title: "Affiliate Landers", 			
						filter_country: true, 		
						filter_platforms: true, 	
						filter_adult: true, 
						sort: true, 
						sort_default: 'last_seen_desc', 
						async_path: base_path + "results", 
						base_path: base_path})
            	)
			)
		);	
	}
});

module.exports = AffiliateLanders;

},{"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-paginationnextprevious.jsx":322,"../lander/app-asyncfilterlanders.jsx":340,"../xhr/app-loading.jsx":401,"./app-affiliatelanderspage.jsx":303,"loglevel":9,"querystring":420,"react":235,"react-router-component":22}],303:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var url_host_type = require('../../utils/url-host-type.js')

var AffiliateLandersPage = React.createClass({displayName: "AffiliateLandersPage",

	mixins: [NavigatableMixin],
	
	render: function() {

		if (this.props.remote.loading){
			return (
	            React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                React.createElement(Loading, null)
	            )
	       )
		}		
		var landers = []
		for (var i = 0; i < this.props.remote.items.length; i++){
			var item = this.props.remote.items[i]
			
			var offers = ''

			var platforms = []
			item['platforms'].forEach(function(platform){
				if (platform['logo_url']){
					var logo = React.createElement("div", null, React.createElement(Link, {href: "/source/" + platform['hash'] + '/'}, React.createElement("img", {src: platform['logo_url']})))
				} else {
					var logo = ''
				}
				platforms.push(React.createElement("div", null, 
					React.createElement("h5", null, React.createElement(Link, {href: "/source/" + platform['hash'] + '/'}, platform['name'])), 
					logo
				))
			})

			item['sources'].forEach(function(source){
				platforms.push(React.createElement("div", null, React.createElement(Link, {href: "/mediator/" + url_host_type(source['host_type']) + '/' + source['hash'] + '/'}, source['host_name'])))
			})			

			
			var countries = []
			item['countries'].forEach(function(country){
				lowerCountry = country.toLowerCase()
				countries.push(
					React.createElement("td", {className: "text-center p-l-10 p-r-10 p-t-10 p-b-10 b-grey"}, 
						React.createElement("div", {style: {height: '18px', width: '24px'}, className: "flag flag-icon-background flag-icon-" + lowerCountry}), 
						React.createElement("div", null, country)
					)
				)
			})

			var country = (
				React.createElement("table", null, 
					React.createElement("tbody", null, 
						React.createElement("tr", null, 
							countries
						)
					)
				)
			)

			items = []
			item['chains'].forEach(function(item, i){
				var chain = []
				for (var x = item.links.length - 1; x >= 0; x--){
					var link = []
					if (chain.length > 0){
						link.push(' > ')
					}
					if (x != 0){
						// mediator
						link.push(React.createElement(Link, {href: '/mediator/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
					} else {
						// advertiser
						link.push(React.createElement(Link, {href: '/advertiser/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
					}
					chain = chain.concat(link)
				}
				items.push(React.createElement("div", {key: i}, chain))
			}, this)


			landers.push(
				React.createElement("div", {key: i, style: {marginBottom: '20px'}, className: "container-fluid  bg-white"}, 
					React.createElement("div", {className: "col-md-3"}, 
						React.createElement("div", {className: "panel"}, 
							React.createElement("div", {className: "panel-heading"}, 
								React.createElement("div", {className: "panel-title"}, 
									"Screenshot"
								)
							), 
							React.createElement("div", {className: "panel-body text-left"}, 								
								React.createElement("img", {className: "img-responsive", src: item.screenshot.url})								
							)
						)			
					), 
					React.createElement("div", {className: "col-md-3"}, 
						React.createElement("div", {className: "panel"}, 
							React.createElement("div", {className: "panel-heading"}, 
								React.createElement("div", {className: "panel-title"}, 
									"Info"
								)
							), 
							React.createElement("div", {className: "panel-body"}, 																
								React.createElement("div", {className: "m-b-5"}, country), 
								React.createElement("div", {className: "m-b-5"}, "First seen: ", item['first_seen']), 
								React.createElement("div", {className: "m-b-5"}, "Last seen: ", item['last_seen']), 
								React.createElement("div", {className: "m-b-5"}, "Device: Desktop"), 
								React.createElement("div", {className: "m-t-20"}, 
									React.createElement("div", {className: "btn btn-success"}, "View Lander")
								)
							)
						)			
					), 
					React.createElement("div", {className: "col-md-3"}, 
						React.createElement("div", {className: "panel"}, 
							React.createElement("div", {className: "panel-heading"}, 
								React.createElement("div", {className: "panel-title"}, 
									"Traffic Source"
								)
							), 
							React.createElement("div", {className: "panel-body"}, 		

								platforms				
							)
						)			
					), 
					React.createElement("div", {className: "col-md-3"}, 
						React.createElement("div", {className: "panel"}, 
							React.createElement("div", {className: "panel-heading"}, 
								React.createElement("div", {className: "panel-title"}, 
									"Tracking"
								)
							), 
							React.createElement("div", {className: "panel-body"}, 								
								items					
							)
						)			
					)
					
				)
			)
		}

		return (
			React.createElement("div", {id: "advertiser-items"}, 
                landers
			)
		)

	}

});

module.exports = withAsyncState(AffiliateLandersPage);

},{"../../utils/mustBeAdmin.jsx":410,"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"country-data":6,"loglevel":9,"query-string":11,"react":235,"react-router-component":22}],304:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var ForbiddenPage = React.createClass({displayName: "ForbiddenPage",

	render: function() {
		return (
			React.createElement("div", {className: "text-center m-t-40"}, 
	            React.createElement("h1", {className: "error-number"}, "403"), 
	            React.createElement("h2", {className: "semi-bold"}, "Access denied"), 
	            React.createElement("p", null, "You do not have permission to access this page."), 
	            React.createElement("p", null, " If you believe this is an error, please contact support.")
          	)
		);
	}

});

module.exports = ForbiddenPage;

},{"react":235}],305:[function(require,module,exports){
/**
 * @jsx React.DOM
 */
var React = require('react');
var Router = require('react-router-component');
var Link = Router.Link
var Jumbotron = require('./jumbotron.jsx')
var NetworkCard = require('./network/app-networkcard.jsx')

var Infinite = require('react-infinity');
var NetworksPanel = require('./network/app-networkspanel.jsx')
var AdvertiserItem = require('./advertiser/app-advertiseritem.jsx')
var SearchInput = require('./search/app-searchinput.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var AsyncFilterOffers = require('./offer/app-asyncfilteroffers.jsx')
var Breadcrumb = require('./breadcrumb/app-breadcrumb.jsx')

var Front = React.createClass({displayName: "Front",

    mixins: [NavigatableMixin],

    searchSubmit: function(e){
        try {

            var defaultPath = '/search/offers/'
            var searchPath = defaultPath
            if (window.location.pathname.indexOf('/search/ads/') > -1){
                searchPath = '/search/ads/'
            } else if (window.location.pathname.indexOf('/search/landers/') > -1){
                searchPath = '/search/landers/'
            } else if (window.location.pathname.indexOf('/search/offers/') > -1){
                searchPath = '/search/offers/'
            } else if (window.location.pathname.indexOf('/search/networks/') > -1){
                searchPath = '/search/networks/'
            }
            searchString = this.refs['search-input'].getDOMNode().value
            uri = searchPath + '?q=' + encodeURIComponent(searchString)
            this.navigate(uri, function(err) {
                if (err) {
                    throw err;
                }
            });
            e.preventDefault()
        } catch (err) {
            console.log(err)
            e.preventDefault()
        }
    },

	render: function() {
        
        var crumbLinks = [{url: '/', className: '', name:'Home'}]

        var base_path = '/'

		return (
			React.createElement("div", null, 

                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 
                        React.createElement(Breadcrumb, {links: crumbLinks}), 
                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-lg-5 col-md-8 "}, 
                                React.createElement("div", {className: "panel panel-transparent"}, 
                                    React.createElement("div", {style: {paddingTop: '0px'}, className: "panel-body"}, 
                                        React.createElement("h3", null, "Make Massive"), 
                                        React.createElement("p", null, 
                                            "The most comprehensive affiliate intelligence platform in the world. Discover the" + ' ' + 
                                            "latest affiliate offers from the best networks and see how top online marketers" + ' ' + 
                                            "are using ads and traffic sources to make huge profits."
                                        )
                                    )
                                )
                            ), 
                            React.createElement("div", {className: "col-lg-7 col-md-4 hidden"}, 
                                React.createElement("div", {className: "full-height"}, 
                                    React.createElement("div", {style: {maxWidth: '400px'}, className: "panel m-t-20"}, 
                                        React.createElement("div", {className: "panel-heading"}, 
                                            React.createElement("div", {className: "panel-title"}, 
                                                "What is Make Massive?"
                                            )
                                        ), 
                                        React.createElement("div", {className: "panel-body"}, 
                                            "Discover how Make Massive can help you take your affiliate business to" + ' ' +
                                            "the next level.", 
                                            React.createElement("div", {className: "m-t-20"}, 
                                                React.createElement(Link, {href: "/help/"}, "Learn more")
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                ), 

                React.createElement("div", {className: "container-fluid"}, 
                    React.createElement(AsyncFilterOffers, {
                        title: "Lastest Offers", 
                        filter_country: true, 
                        filter_devices: true, 
                        filter_networks: true, 
                        with_ads_switch: true, 
                        with_ads_default: false, 
                        sort: true, 
                        cols: ['device', 'ads', 'title', 'payout-amount',  'payout-type', 'countries',  'category', 'network', 'date-added'], 
                        sort_default: 'date_added_desc', 
                        async_path: base_path + 'offer/panel', 
                        base_path: base_path})
                )
                
            )
		);
	}

});

module.exports = Front;

},{"./advertiser/app-advertiseritem.jsx":298,"./breadcrumb/app-breadcrumb.jsx":311,"./jumbotron.jsx":337,"./network/app-networkcard.jsx":369,"./network/app-networkspanel.jsx":373,"./offer/app-asyncfilteroffers.jsx":376,"./search/app-searchinput.jsx":386,"react":235,"react-infinity":20,"react-router-component":22}],306:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var LoginForm = require('./account/app-loginform.jsx')
var post = require('./form/post.js')
var LoginRequired = React.createClass({displayName: "LoginRequired",

	getInitialState: function(){
		return {messages: [], disabled: false}
	},

	loginSubmit: function(data){
        this.setState({messages: [], disabled: true})
        post('/accounts/login/', data, function(response){        
            if (response.loggedin){
                // redirect to profile
                this.setState({messages: response.messages})
                document.location.reload()       
            } else {
                this.setState({messages: response.messages, disabled: false})
            }
        }.bind(this))
    },

	render: function() {
		return (
			React.createElement("div", {className: "register-container m-t-40"}, 
	            React.createElement("h2", {className: "semi-bold"}, "Login"), 
	            React.createElement("div", {className: "alert alert-warning"}, "You must login to continue."), 
	           	React.createElement(LoginForm, {messages: this.state.messages, submitForm: this.loginSubmit, disabled: this.state.disabled})
          	)
		);
	}

});

module.exports = LoginRequired;

},{"./account/app-loginform.jsx":247,"./form/post.js":329,"react":235}],307:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var NotFoundPage = React.createClass({displayName: "NotFoundPage",

	render: function() {
		return (
			React.createElement("div", {className: "text-center m-t-40"}, 
	            React.createElement("h1", {className: "error-number"}, "404"), 
	            React.createElement("h2", {className: "semi-bold"}, "Sorry but we couldnt find this content"), 
	            React.createElement("p", null, "The content you are looking for does not exsist.")
          	)
		);
	}

});

module.exports = NotFoundPage;

},{"react":235}],308:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var Page = React.createClass({displayName: "Page",

	render: function() {
		return (
			React.createElement("div", null, "Welcome to Page")
		);
	}

});

module.exports = Page;

},{"react":235}],309:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react')
var Header = require('./header/app-header.jsx')
var Sidebar = require('./sidebar/app-sidebar.jsx')
var Footer = require('./footer/app-footer.jsx')
var SearchOverlay = require('./search/app-searchoverlay.jsx')
var ModalRouter = require('./modal/app-modalrouter.jsx')
var AdBlockModal = require('./modal/app-adblockmodal.jsx')
var SignupLoginModal = require('./account/app-signuploginmodal.jsx')
var Notifications = require('./notification/app-notifications.jsx')
var ContentModal = require('./modal/app-contentmodal.jsx')
var Template =
    React.createClass({displayName: "Template",
        render: function(){
            return (
                React.createElement("div", {className: "full-height"}, 
                    React.createElement(Sidebar, null), 
                   { /*  <div style={{marginLeft: '250px', backgroundColor: '#fafafa', height: '100%'}}> */ }, 
                        React.createElement(ModalRouter, null), 
                        React.createElement(SignupLoginModal, null), 
                        React.createElement(AdBlockModal, null), 
                        React.createElement(ContentModal, null), 
                        React.createElement("div", {className: "page-container", style: {backgroundColor: 'rgb(250, 250, 250)'}}, 
                            React.createElement(Header, null), 
                            React.createElement("div", {className: "page-content-wrapper"}, 
                                React.createElement("div", {className: "content"}, 
                                    this.props.children
                                ), 
                                React.createElement(Footer, null), 
                                React.createElement(Notifications, null)
                            )
                        ), 

                        { /* <SearchOverlay /> */ }, 
                    { /* </div> */ }
                )
            )
        }
    });
module.exports = Template

},{"./account/app-signuploginmodal.jsx":258,"./footer/app-footer.jsx":326,"./header/app-header.jsx":331,"./modal/app-adblockmodal.jsx":357,"./modal/app-contentmodal.jsx":359,"./modal/app-modalrouter.jsx":361,"./notification/app-notifications.jsx":374,"./search/app-searchoverlay.jsx":387,"./sidebar/app-sidebar.jsx":389,"react":235}],310:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');

var PubSub = require('pubsub-js')

var Router = require('react-router-component');
var Locations = Router.Locations;
var Location = Router.Location;
var NotFound = Router.NotFound;
var NotFoundPage = require('./app-notfoundpage.jsx');

var Template = require('./app-template.jsx');
var Front = require('./app-front.jsx');
var Page = require('./app-page.jsx');

var NetworkList = require('./network/app-networklist.jsx');
var Network = require('./network/app-network.jsx');
var Host = require('./host/app-host.jsx');
var Search = require('./search/app-search.jsx');
var SearchInput = require('./search/app-searchinput.jsx')
var TypeAhead = require('./search/app-typeahead.jsx')
var Lander = require('./lander/app-lander.jsx');
var TableExample = require('./table/app-tableexample.jsx');
var AdGridExample = require('./ad/app-adgridexample.jsx');
var Invite = require('.static/invite.jsx');
// Admin views
var AdminNetworkList = require('./admin/app-adminnetworklist.jsx');
var AdminAddNetwork = require('./admin/app-adminaddnetwork.jsx');
var AdminNetwork = require('./admin/app-adminnetwork.jsx');
var AdminUpdateNetwork = require('./admin/app-adminupdatenetwork.jsx');
var AdminNetworkOffers = require('./admin/app-adminnetworkoffers.jsx');
var AdminNetworkOffer = require('./admin/app-adminnetworkoffer.jsx');
// Account views
var AccountActivateComplete = require('./account/app-activatecomplete.jsx');
var AccountActivateExpired = require('./account/app-activateexpired.jsx');
var AccountProfile = require('./account/app-profile.jsx');
var AccountSettings = require('./account/app-settings.jsx');
var AccountPasswordChange = require('./account/app-passwordchange.jsx');
var AccountPasswordResetConfirm = require('./account/app-passwordresetconfirm.jsx');
var AccountPasswordResetDone = require('./account/app-passwordresetdone.jsx');
var AccountPasswordResetExpired = require('./account/app-passwordresetexpired.jsx');
// Account subscription views
var AccountSubscribeChargebee = require('./account/app-subscribechargebee.jsx');
var AccountSubscribeAMC = require('./account/app-subscribeamc.jsx');
var AccountSubscribeAWA = require('./account/app-subscribeawa.jsx');
var AccountSubscribe = require('./account/app-subscribe.jsx');
var AccountHistory = require('./account/app-paymenthistory.jsx')
var AccountChangeCard = require('./account/app-changecard.jsx')
var AccountSubscriptionCancel = require('./account/app-subscriptioncancel.jsx')
var AccountSubscriptionReactivate = require('./account/app-subscriptionreactivate.jsx')

var Welcome = require('./account/app-welcome.jsx');
var WelcomePro = require('./account/app-welcomepro.jsx');

var AdminAdvertiserExclude = require('./admin/app-adminadvertiserexclude.jsx')

var OfferDetail = require('./offer/app-offerdetail.jsx')

var AffiliateLander = require('./lander/app-affiliatelander.jsx')

var Mediator = require('./mediator/app-mediator.jsx')
var Publisher = require('./publisher/app-publisher.jsx')
var Category = require('./category/app-category.jsx')
var CategoryInbound = require('./category/app-categoryinbound.jsx')
var GooglePlay = require('./mobile/app-googleplay.jsx')
var Offer = require('./offer/app-offer.jsx')

var Advertiser = require('./advertiser/app-advertiser.jsx')
var AdminTrackers = require('./admin/app-admintrackers.jsx')
var AdminVoluumLanders = require('./admin/app-adminvoluumlanders.jsx')

var AffiliateLanders = require('./affiliate/app-affiliatelanders.jsx')

var Source = require('./source/app-source.jsx')
var SourceList = require('./source/app-sourcelist.jsx');

var AdminInbound = require('./admin/app-admininbound.jsx')

var Support = require('./support/app-support.jsx')
var Help = require('./help/app-help.jsx')

String.prototype.capitalize = function() {
    return this.charAt(0).toUpperCase() + this.slice(1);
}

/*
*    async_path: path pattern used to build the clint side request url
*                client side reuest url is used by AsyncIsomorphicMixin to request data
*                from the window._store if available or via XMLHttpRequest
*
*/

var Router = require('react-router-component');
var URLPattern = require('url-pattern');

// Create a compiler that only matches alphabetical characters in urls.
//
// This function is passed the props object of the route it is generating a RegExp for.
// While not recommended, you could use this to generate a different compiler per route.
Router.createURLPatternCompiler = function(routeProps) {
  var compiler = new URLPattern.Compiler();
  compiler.segmentNameCharset = 'a-zA-Z0-9_-';
  return compiler;
}

var APP =
  React.createClass({displayName: "APP",
//
    publishNavigation: function(){
        console.log('APP', 'publishNavigation', document.location)
        ga('send', 'pageview', document.location.pathname + document.location.search);
        PubSub.publish('onNavigation', true)
    }
////hungchelsea
//    render:function(){
        //if (window._status !== undefined && window._status != false){
        //    console.error('Server status: ' + window._status)
        //}

        /*
        if (window._status !== undefined){
            if (window._status == 404){
                // window._status = 404 if no urls were matched on the server side
                window._status = false; //clear status once 404 is shown to let the client side router work
                return <Template><NotFoundPage /></Template>
            } else if (window._status == 403){
                // window._status = 403 if access denied permission on the server side
                window._status = false; //clear status once 403 is shown to let the client side router work
                return <Template><ForbiddenPage /></Template>
            }
        }
        <Location name="Home/Page" path="/page" handler={Page} />
        <Location name="Home/Table" path="/table" handler={TableExample} />
        <Location name="Home/AdGrid" path="/adgrid" handler={AdGridExample} />
        */
        return (React.createElement(Template, null,
          React.createElement(Locations, {path: this.props.path, onNavigation: this.publishNavigation}, 
            

            React.createElement(Location, {
                name: "Home", 
                path: "/", 
                handler: Front}), 
        
            React.createElement(Location, {path: "/accounts/welcome/", handler: Welcome}), 
            React.createElement(Location, {path: "/accounts/welcome-pro/", handler: WelcomePro}), 

            React.createElement(Location, {path: "/search/", handler: Search}), 
            React.createElement(Location, {path: "/typeahead/", handler: TypeAhead}), 

            React.createElement(Location, {name: "Home/Lander", path: "/lander/:hash", handler: Lander}), 
            React.createElement(Location, {name: "Home/Invite", path: "/invite", handler: Invite}), 
            
            React.createElement(Location, {
                async_path: "/advertiser/:_0/:_1/", 
                path: /^\/advertiser\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/(offer)\/([-\.a-zA-Z0-9]{32})\//, 
                handler: Host}), 

            React.createElement(Location, {
                async_path: "/advertiser/:_0/:_1/", 
                path: /^\/advertiser\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\//, 
                handler: Host}), 
            
            React.createElement(Location, {
                async_path: "/affiliate-network/", 
                path: "/affiliate-network/", 
                handler: NetworkList}), 
            
            React.createElement(Location, {
                async_path: "/affiliate-network/:network_hash/", 
                path: "/affiliate-network/:network_hash/", 
                handler: Network}), 

            React.createElement(Location, {
                async_path: "/admin/networks/", 
                path: "/admin/networks/", 
                handler: AdminNetworkList}), 

            React.createElement(Location, {
                async_path: "/admin/network/add/", 
                path: "/admin/network/add/", 
                handler: AdminAddNetwork}), 
                
            React.createElement(Location, {
                async_path: "/admin/network/:network_hash/", 
                path: "/admin/network/:network_hash/", 
                handler: AdminNetwork}), 

            React.createElement(Location, {
                async_path: "/admin/network/:network_hash/update/", 
                path: "/admin/network/:network_hash/update/", 
                handler: AdminUpdateNetwork}), 

            React.createElement(Location, {
                async_path: "/admin/network/:network_hash/offers/", 
                path: "/admin/network/:network_hash/offers/", 
                handler: AdminNetworkOffers}), 

            React.createElement(Location, {
                async_path: "/admin/network/:network_hash/offers/:offer_hash/", 
                path: "/admin/network/:network_hash/offers/:offer_hash/", 
                handler: AdminNetworkOffer}), 

            React.createElement(Location, {
                async_path: "/admin/network/:network_hash/offers/", 
                path: "/admin/network/:network_hash/offers/", 
                handler: AdminNetworkOffers}), 

            React.createElement(Location, {
                async_path: "/admin/advertiser/exclude/", 
                path: "/admin/advertiser/exclude/", 
                handler: AdminAdvertiserExclude}), 

            React.createElement(Location, {
                path: "/accounts/activate/complete/", 
                handler: AccountActivateComplete}), 

            React.createElement(Location, {
                path: "/accounts/activate/expired/", 
                handler: AccountActivateExpired}), 
            
            React.createElement(Location, {
                path: "/accounts/profile/", 
                handler: AccountProfile}), 

            React.createElement(Location, {
                path: "/accounts/settings/", 
                handler: AccountSettings}), 

            React.createElement(Location, {
                path: "/accounts/password_change/", 
                handler: AccountPasswordChange}), 

            React.createElement(Location, {
                path: "/accounts/reset/done/", 
                handler: AccountPasswordResetDone}), 

            React.createElement(Location, {
                path: "/accounts/reset/expired/", 
                handler: AccountPasswordResetExpired}), 

            React.createElement(Location, {
                path: "/accounts/reset/*", 
                handler: AccountPasswordResetConfirm}), 

            React.createElement(Location, {
                path: "/accounts/subscribe/", 
                handler: AccountSubscribe}), 

            React.createElement(Location, {
                path: "/accounts/subscribe/amc/", 
                handler: AccountSubscribeAMC}), 

             React.createElement(Location, {
                path: "/accounts/awa/", 
                handler: AccountSubscribeAWA}), 

            React.createElement(Location, {
                async_path: "/accounts/payment_history/", 
                path: "/accounts/payment_history/", 
                handler: AccountHistory}), 

            React.createElement(Location, {
                path: "/accounts/change_card/", 
                handler: AccountChangeCard}), 

            React.createElement(Location, {
                path: "/accounts/subscription/cancel/:subscription_id/", 
                handler: AccountSubscriptionCancel}), 

            React.createElement(Location, {
                path: "/accounts/subscription/reactivate/:subscription_id/", 
                handler: AccountSubscriptionReactivate}), 

            React.createElement(Location, {
                path: "/offer/:offer_hash/*", 
                async_path: "/offer/:offer_hash/", 
                handler: Offer}), 

            React.createElement(Location, {
                path: "/landers/:date_str/*", 
                async_path: "/landers/:date_str/", 
                base_path: "/landers/:date_str/", 
                handler: AffiliateLander}), 

            React.createElement(Location, {
                path: "/landers/*", 
                async_path: "/landers/", 
                base_path: "/landers/", 
                handler: AffiliateLander}), 

            React.createElement(Location, {
                async_path: "/mediator/:_0/:_1/", 
                path: /\/mediator\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\//, 
                base_path: "/mediator/:_0/:_1/", 
                handler: Mediator}), 

            React.createElement(Location, {
                async_path: "/publisher/:_0/:_1/", 
                path: /\/publisher\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\//, 
                base_path: "/publisher/:_0/:_1/", 
                handler: Publisher}), 

            React.createElement(Location, {
                async_path: "/category/:slug/inbound/", 
                path: "/category/:slug/inbound/*", 
                base_path: "/category/:slug/inbound/", 
                handler: CategoryInbound}), 

            React.createElement(Location, {
                async_path: "/category/:slug/", 
                path: "/category/:slug/*", 
                base_path: "/category/:slug/", 
                handler: Category}), 

            React.createElement(Location, {
                async_path: "/mobile/google/", 
                path: "/mobile/google/", 
                base_path: "/mobile/google/", 
                handler: GooglePlay}), 

            React.createElement(Location, {
                path: "/support/", 
                base_path: "/support/", 
                handler: Support}), 

            React.createElement(Location, {
                path: "/help/", 
                base_path: "/help/", 
                handler: Help}), 

            React.createElement(Location, {
                async_path: "/advertiser/", 
                path: "/advertiser/", 
                base_path: "/advertiser/", 
                handler: Advertiser}), 

            React.createElement(Location, {
                async_path: "/admin/trackers/", 
                path: "/admin/trackers/*", 
                base_path: "/admin/trackers/", 
                handler: AdminTrackers}), 

            React.createElement(Location, {
                path: "/admin/voluum/landers/*", 
                base_path: "/admin/voluum/landers/", 
                handler: AdminVoluumLanders}), 

            React.createElement(Location, {
                path: "/affiliate-lander/*", 
                base_path: "/affiliate-lander/", 
                handler: AffiliateLanders}), 

            React.createElement(Location, {
                path: "/traffic-source/:hash/*", 
                async_path: "/traffic-source/:hash/", 
                base_path: "/traffic-source/:hash/", 
                handler: Source}), 

            React.createElement(Location, {
                path: "/traffic-source/", 
                base_path: "/traffic-source/", 
                handler: SourceList}), 
                
            React.createElement(Location, {
                path: "/admin/inbound/*", 
                base_path: "/admin/inbound/", 
                handler: AdminInbound}), 

            React.createElement(NotFound, {handler: NotFoundPage})

          )
        ))
    }
  });
module.exports = APP;

},{"./account/app-activatecomplete.jsx":244,"./account/app-activateexpired.jsx":245,"./account/app-changecard.jsx":246,"./account/app-passwordchange.jsx":248,"./account/app-passwordresetconfirm.jsx":249,"./account/app-passwordresetdone.jsx":250,"./account/app-passwordresetexpired.jsx":251,"./account/app-paymenthistory.jsx":252,"./account/app-profile.jsx":253,"./account/app-settings.jsx":256,"./account/app-subscribe.jsx":260,"./account/app-subscribeamc.jsx":261,"./account/app-subscribeawa.jsx":262,"./account/app-subscribechargebee.jsx":263,"./account/app-subscriptioncancel.jsx":265,"./account/app-subscriptionreactivate.jsx":266,"./account/app-welcome.jsx":269,"./account/app-welcomepro.jsx":270,"./ad/app-adgridexample.jsx":277,"./admin/app-adminaddnetwork.jsx":282,"./admin/app-adminadvertiserexclude.jsx":283,"./admin/app-admininbound.jsx":284,"./admin/app-adminnetwork.jsx":285,"./admin/app-adminnetworklist.jsx":287,"./admin/app-adminnetworkoffer.jsx":288,"./admin/app-adminnetworkoffers.jsx":289,"./admin/app-admintrackers.jsx":290,"./admin/app-adminupdatenetwork.jsx":292,"./admin/app-adminvoluumlanders.jsx":293,"./advertiser/app-advertiser.jsx":296,"./affiliate/app-affiliatelanders.jsx":302,"./app-front.jsx":305,"./app-notfoundpage.jsx":307,"./app-page.jsx":308,"./app-template.jsx":309,"./category/app-category.jsx":312,"./category/app-categoryinbound.jsx":313,"./help/app-help.jsx":332,"./host/app-host.jsx":335,"./lander/app-affiliatelander.jsx":339,"./lander/app-lander.jsx":343,"./mediator/app-mediator.jsx":353,"./mobile/app-googleplay.jsx":356,"./network/app-network.jsx":367,"./network/app-networklist.jsx":372,"./offer/app-offer.jsx":377,"./offer/app-offerdetail.jsx":378,"./publisher/app-publisher.jsx":383,"./search/app-search.jsx":385,"./search/app-searchinput.jsx":386,"./search/app-typeahead.jsx":388,"./source/app-source.jsx":392,"./source/app-sourcelist.jsx":395,".static/invite.jsx":396,"./support/app-support.jsx":397,"./table/app-tableexample.jsx":400,"pubsub-js":10,"react":235,"react-router-component":22,"url-pattern":236}],311:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Link = require('react-router-component').Link

var Breadcrumb = React.createClass({displayName: "Breadcrumb",

	render: function() {
		/*
		var url_part = ""
		var link_part = ""
		var parts = this.props.name.split('/')
		var param = this.props.param;
		crumbs = parts.map(function(item, i){
			item_lower = item.toLowerCase()
			if (item == "Home"){
				url_part = "/"
			} else if (item.indexOf(':') > -1) {
				url_param = item.slice(1, item.length)
				url_part += param.url_part
				item = param[url_param]
			} else {
				url_part += item_lower	
			}
			var link_part = url_part
			url_part += "/"

			return (<li><Link href={link_part}>{item}</Link></li>)

		});
		*/
		if (typeof this.props.links == 'undefined' || this.props.links == false){
			console.error('Breadcrumb links not defined;')
			return (React.createElement("div", null))
		}
		var i = 0
		var list_items = this.props.links.map(function(link, i){
			if (i > 0){
				var part = React.createElement(Link, {href: link.url, className: link.className}, link.name)
			} else {
				var part = React.createElement("p", null, React.createElement(Link, {href: link.url, className: link.className}, link.name))
			}
			i++;
			return (React.createElement("li", {key: i}, 
                    part
                ))
		}, this)
		return (
			React.createElement("ul", {className: "breadcrumb"}, 
                list_items
            )
		);
	}

});

module.exports = Breadcrumb;

},{"react":235,"react-router-component":22}],312:[function(require,module,exports){
var React = require('react');
var LanderPanel = require('../lander/app-landerpanel.jsx')
var AdvertiserListPanel = require('../advertiser/app-advertiserlistpanel.jsx')
var MediatorListPanel = require('../mediator/app-mediatorlistpanel.jsx')
var OfferPanel = require('../offer/app-offerpanel.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var SourceBar = require('../source/app-sourcebar.jsx')
var NetworkBar = require('../network/app-networkbar.jsx')

var Category = React.createClass({displayName: "Category",

	offerClick: function(){

	},

	render: function() {

		var slug = this.props['slug']

		if (this.props.remote.loading){
			return (
				React.createElement("div", null, 
		            React.createElement("div", null, 
		                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
		                    React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		                )
		            )
		        ))
		} else {
			var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : '/category/' + slug + '/', name: this.props.remote.name, className: 'active'}
			]

			var inner = (React.createElement("div", {className: "inner"}, 
	                    	React.createElement(Breadcrumb, {links: crumb_links}), 
	                        React.createElement("div", {className: "row"}, 
	                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
	                            
	                                React.createElement("div", {className: "panel panel-transparent"}, 
	                                    React.createElement("div", {className: "panel-heading"}, 
	                                        React.createElement("div", {className: "panel-title"}, "Category")
	                                    ), 
	                                    React.createElement("div", {className: "panel-body"}, 
	                                    	React.createElement("h3", null, this.props.remote.name)
	                                    )
	                                )
	                               
	                            )
	                            
	                        )
	                    ))
			return (
				React.createElement("div", null, 
		            React.createElement("div", null, 
		                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
		                    inner
		                )
		            ), 

		            React.createElement(SourceBar, {
		            	title: this.props.remote.name + " Traffic Sources", 
		            	list_url: '/category/' + slug + '/traffic-source/', 
		            	async_path: '/category/' + slug + '/traffic-source/bar'}), 

		            React.createElement(NetworkBar, {
		            	title: this.props.remote.name + " Affiliate Networks", 
		            	list_url: '/category/' + slug + '/affiliate-network/', 
		            	async_path: '/category/' + slug + '/affiliate-network/bar'}), 
		            
	            	React.createElement("div", {className: "container-fluid "}, 
	            		React.createElement(OfferPanel, {
							title: "Latest " + this.props.remote.name + " Offers", 
							panelCls: "", 
							country_filter: true, 
							cols: ['title', 'payout-amount', 'payout-type', 'network', 'last-updated'], 
							async_path: "/category/" + slug + "/offer/panel", 
							base_path: "/category/" + slug + "/", 
							offerClick: this.offerClick})
	            			           
		            )
				)
			);	
		}
	}

});

module.exports = withAsyncState(Category);

},{"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserlistpanel.jsx":299,"../breadcrumb/app-breadcrumb.jsx":311,"../lander/app-landerpanel.jsx":349,"../mediator/app-mediatorlistpanel.jsx":354,"../network/app-networkbar.jsx":368,"../offer/app-offerpanel.jsx":381,"../source/app-sourcebar.jsx":393,"../xhr/app-loading.jsx":401,"react":235}],313:[function(require,module,exports){
var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var AsyncFilterLanders = require('../lander/app-asyncfilterlanders.jsx')
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var CategoryInbound = React.createClass({displayName: "CategoryInbound",

	render: function() {

		var slug = this.props['slug']

		if (this.props.remote.loading){
			return (
				React.createElement("div", null, 
		            React.createElement("div", {className: "jumbotron"}, 
		                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
		                    React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		                )
		            )
		        ))
		} else {

		
			var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : '/category/' + slug + '/', name: this.props.remote.name, className: 'active'}
			]

			var inner = (React.createElement("div", {className: "inner"}, 
	                    	React.createElement(Breadcrumb, {links: crumb_links}), 
	                        React.createElement("div", {className: "row"}, 
	                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
	                            
	                                React.createElement("div", {className: "panel panel-transparent"}, 
	                                    React.createElement("div", {className: "panel-heading"}, 
	                                        React.createElement("div", {className: "panel-title"}, "Category")
	                                    ), 
	                                    React.createElement("div", {className: "panel-body"}, 
	                                    	React.createElement("h3", null, this.props.remote.name)
	                                    )
	                                )
	                               
	                            )
	                            
	                        )
	                    ))
			return (
				React.createElement("div", null, 
		            React.createElement("div", {className: "jumbotron"}, 
		                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
		                    inner
		                )
		            ), 	           
		            
	            	React.createElement("div", {className: "container-fluid "}, 
	            		React.createElement(AsyncFilterLanders, {
								title: "Inbound Landers", 			
								filter_country: true, 		
								filter_platforms: true, 	
								sort: true, 
								sort_default: 'last_seen_desc', 
								async_path: '/category/' + slug + '/inbound/panel', 
								base_path: '/category/' + slug + '/inbound/'})
		            )
				)
			);	
		}
	}

});

module.exports = mustBeAdmin(withAsyncState(CategoryInbound));

},{"../../utils/mustBeAdmin.jsx":410,"../../utils/withAsyncState.jsx":416,"../breadcrumb/app-breadcrumb.jsx":311,"../lander/app-asyncfilterlanders.jsx":340,"../xhr/app-loading.jsx":401,"react":235}],314:[function(require,module,exports){
var React = require('react');
var Messages = require('../form/messages.jsx')
var Button = require('../control/app-button.jsx')
var post = require('../form/post.js')

var CategoryLabel = React.createClass({displayName: "CategoryLabel",

	saveClick: function(){
		if (this.state.selected.category_id == 0){
			this.setState({
				messages: [{state:'error', message:'Please select a category'}]
			})
			return false
		}
		this.setState({messages: [], disabled: true})
		data = {
			category_id: this.state.selected.category_id
		}
        post(this.props.base_path + 'category/', data, function(response){            
            if (response.saved){
                this.setState({messages: response.messages, editing: false})
            } else {
                this.setState({messages: response.messages, disabled: false})
            }
        }.bind(this))
	},

	editClick: function(){
		this.setState({editing: true})
	},

	selectChange: function(e){
		this.setState({selected: {category_id: e.target.value, name:e.target[e.target.selectedIndex].text}});
	},

	getInitialState: function(){
		selected = {name: '', category_id: 0}
		if (this.props.selected){
			selected = this.props.selected
		}
		return {editing: false, messages: [], disabled: false, selected: selected}
	},

	render: function() {

		if (this.state.editing){
			categoryOptions = []
			this.props.categories.forEach(function(category){
				categoryOptions.push(React.createElement("option", {value: category.category_id}, category.name))
				category.items.forEach(function(subCategory){
					categoryOptions.push(React.createElement("option", {value: subCategory.category_id}, "---- " + subCategory.name))
				})
			})
			categoryOptions.unshift(React.createElement("option", {value: 0}, "Select category"))

			return (
				React.createElement("div", {className: "form-inline"}, 
					React.createElement(Messages, {messages: this.state.messages}), 
					React.createElement("select", {ref: "category", className: "form-control", defaultValue: this.state.selected.category_id, onChange: this.selectChange}, 
						categoryOptions
					), "  ", 
					React.createElement(Button, {color: "default", constant: false, size: "btn-sm", type: "submit", text: "Submit", disabled: this.state.disabled, onClick: this.saveClick})
				)
				)
		} else {
			if (this.state.selected.category_id === 0){
				return (
					React.createElement("div", null, 
						React.createElement(Messages, {messages: this.state.messages}), 
						"No category ", React.createElement("a", {onClick: this.editClick}, "Edit")
					))
				
			} else {
				return (
					React.createElement("div", null, 
						React.createElement(Messages, {messages: this.state.messages}), 
						"Category: ", this.state.selected.name, " ", React.createElement("a", {onClick: this.editClick}, "Edit")
					))
			}
		}

		
	}

});

module.exports = CategoryLabel;

},{"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"react":235}],315:[function(require,module,exports){
var React = require('react');

var Button = React.createClass({displayName: "Button",

	getInitialState: function(){
		if (this.props.disabled !== undefined){
			return {disabled: this.props.disabled}
		} else {
			return {disabled: false}
		}
		
	},

	onClick: function(e){
		this.setState({disabled: true})
		if (this.props.onClick !== undefined){
			this.props.onClick()
		}
	},

	componentWillReceiveProps: function(nextProps){
		if (nextProps.disabled !== undefined){
			this.setState({disabled: nextProps.disabled})
		}
	},

	render: function() {
		/*
		size = 'btn-default'
		if (this.props.size !== undefined){
			size = this.props.size
		}
		*/
		constant = 'btn-cons'
		if (this.props.constant !== undefined && !this.props.constant){
			constant = ''
		}
		className = "inline btn " + constant
		var spinner = ""
		console.log('button render', this.props, this.state)
		if (this.state.disabled){
			className += " disabled"
			spinner = (React.createElement("div", {style: {display: 'inline-block', width: '20px', height: '20px'}, className: "progress-circle-indeterminate"}))
		}
		if (this.props.color !== undefined){
			className += " btn-" + this.props.color
		}
		var type = ""
		if (this.props.type !== undefined){
			type = this.props.type
		}
		var text = this.props.children
		if (this.props.text !== undefined){
			text = this.props.text
		}
		return (
			React.createElement("span", null, 
				React.createElement("button", {className: className, type: type, onClick: this.onClick}, text), 
				spinner
			)
		);
	}

});

module.exports = Button;

},{"react":235}],316:[function(require,module,exports){
var React = require('react');

var CountDropdown = React.createClass({displayName: "CountDropdown",

	getInitialState: function(){
		return {}
	},

	onChange: function(){
		this.props.onChange(this.refs['count-select'].getDOMNode().value)
	},

	resetChange: function(){
		this.props.onChange(false)
	},

	render: function() {

		var counts = true
		if (this.props.counts !== undefined){
			counts = this.props.counts
		}

		var options = []
		var x = 0
		for (var property in this.props.items) {
    		if (this.props.items.hasOwnProperty(property)) {
    			if (counts){
    				var name = property + ' (' + this.props.items[property] + ')'
    			} else {
    				var name = property
    			}
    			options.push(React.createElement("option", {key: x, value: property}, name))
    			x++;
    		}
    	}

		var selected = ''
		if (this.props.selected){
			selected = this.props.selected
		}

		return (
        	React.createElement("div", null, 
        		React.createElement("div", {className: "input-group"}, 
					React.createElement("select", {className: "field", ref: "count-select", value: selected, className: "form-control", onChange: this.onChange}, 
				      	React.createElement("option", {value: ""}, "Select ", this.props.name), 
				        options
				    ), 
				    React.createElement("span", {className: "input-group-btn"}, 
				    	React.createElement("button", {className: "btn btn-default", onClick: this.resetChange}, "Reset")
					)
				)
			)
		)
	}

});

module.exports = CountDropdown;

},{"react":235}],317:[function(require,module,exports){
var React = require('react');
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;

var CountryDropdown = React.createClass({displayName: "CountryDropdown",

	getInitialState: function(){
		country_list = countries.all.sort(function(a, b){ 
			return a.name.localeCompare(b.name)
		})
		return {country_list: country_list}
	},

	countryChange: function(){
		this.props.countryChange(this.refs['country-select'].getDOMNode().value)
	},

	resetChange: function(){
		this.props.countryChange(false)
	},

	countryRepr: function(name, alpha2){

		var counts = true
		if (this.props.counts !== undefined){
			counts = this.props.counts
		}
		var country_map = {}
		if (this.props.country_map !== undefined && this.props.country_map){
			country_map = this.props.country_map
		}
		var countryStr = ''
		if (country_map[alpha2] !== undefined && counts){
			countryStr = ' (' + country_map[alpha2] + ')'
		}
		return name + ' ' + countryStr
	},

	render: function() {

		var counts = true
		if (this.props.counts !== undefined){
			counts = this.props.counts
		}
		var must_count = true
		if (this.props.must_count !== undefined){
			must_count = this.props.must_count
		}

		var country_map = {}
		if (this.props.country_map !== undefined && this.props.country_map){
			country_map = this.props.country_map
		}

		var country_options = []
		var x = 0
		if (this.state.country_list !== undefined){
			this.state.country_list.forEach(function(country, i){
				if (country.status != 'assigned'){
					return false
				}
				var countryStr = country.name
				if (country_map[country.alpha2] !== undefined && counts){					
					countryStr += ' (' + country_map[country.alpha2] + ')'
				} else if (counts && must_count){
					return false
				}
				country_options.push(
					React.createElement("option", {key: x, value: country.alpha2, "data-alternative-spellings": country.alpha2}, 
						countryStr
					))
				x++;
			})
		}
		/*
		// add shortcut options
		country_options.unshift(<option key={x+1} value="all" data-alternative-spellings="all">-----------------</option>)
		country_options.unshift(<option key={x+2} value="FR" data-alternative-spellings="FR">{this.countryRepr('France', 'FR')}</option>)
		country_options.unshift(<option key={x+3} value="ES" data-alternative-spellings="ES">{this.countryRepr('Spain', 'ES')}</option>)
		country_options.unshift(<option key={x+4} value="DE" data-alternative-spellings="DE">{this.countryRepr('Germany', 'DE')}</option>)
		country_options.unshift(<option key={x+5} value="NZ" data-alternative-spellings="NZ">{this.countryRepr('New Zealand', 'NZ')}</option>)
		country_options.unshift(<option key={x+6} value="AU" data-alternative-spellings="AU">{this.countryRepr('Australia', 'AU')}</option>)
		country_options.unshift(<option key={x+7} value="GB" data-alternative-spellings="GB">{this.countryRepr('United Kingdom', 'GB')}</option>)
		country_options.unshift(<option key={x+8} value="CA" data-alternative-spellings="CA">{this.countryRepr('Canada', 'CA')}</option>)
		country_options.unshift(<option key={x+9} value="US" data-alternative-spellings="US">{this.countryRepr('United States', 'US')}</option>)
		*/
		var selected = ''
		if (this.props.selected){
			selected = this.props.selected
		}

		return (
        	React.createElement("div", {id: "country-selector"}, 
        		React.createElement("div", {className: "input-group"}, 
					React.createElement("select", {className: "field", ref: "country-select", value: selected, className: "form-control", onChange: this.countryChange}, 
				      	React.createElement("option", {value: ""}, "Select Country"), 
				        country_options
				    ), 
				    React.createElement("span", {className: "input-group-btn"}, 
				    	React.createElement("button", {className: "btn btn-default", onClick: this.resetChange}, "Reset")
					)
				)
			)
			)

		return (
			filterCountry
		);
	}

});

module.exports = CountryDropdown;

},{"country-data":6,"react":235}],318:[function(require,module,exports){
var React = require('react');

var NameCountDropdown = React.createClass({displayName: "NameCountDropdown",

	getInitialState: function(){
		return {}
	},

	onChange: function(){
		this.props.onChange(this.refs['select'].getDOMNode().value)
	},

	resetChange: function(){
		this.props.onChange(false)
	},

	render: function() {

		var counts = true
		if (this.props.counts !== undefined){
			counts = this.props.counts
		}

		sortable = []
		for (var property in this.props.items) {
    		if (this.props.items.hasOwnProperty(property)) {
    			sortable.push([property, this.props.items[property]['name'], this.props.items[property]['count']])    			
    		}
    	}
    	sortable.sort(function(a, b) { return a[1].localeCompare(b[1]) })

    	var options = []
    	for (var i = 0; i < sortable.length; i++){
    		if (counts){
				var nameStr = sortable[i][1] + ' (' + sortable[i][2] + ')'	
			} else {
				var nameStr = sortable[i][1]
			}    			
			options.push(React.createElement("option", {key: i, value: sortable[i][0]}, nameStr))
    	}

		var selected = ''
		if (this.props.selected){
			selected = this.props.selected
		}

		return (
        	React.createElement("div", null, 
        		React.createElement("div", {className: "input-group"}, 
					React.createElement("select", {className: "field", ref: "select", value: selected, className: "form-control", onChange: this.onChange}, 
				      	React.createElement("option", {value: ""}, "Select ", this.props.name), 
				        options
				    ), 
				    React.createElement("span", {className: "input-group-btn"}, 
				    	React.createElement("button", {className: "btn btn-default", onClick: this.resetChange}, "Reset")
					)
				)
			)
		)
	}

});

module.exports = NameCountDropdown;

},{"react":235}],319:[function(require,module,exports){
var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin

var NameLinkDropdown = React.createClass({displayName: "NameLinkDropdown",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		return {}
	},

	onChange: function(){
		this.navigate(this.props.base_path + this.refs['select'].getDOMNode().value + '/')
	},

	render: function() {

		var selected = ''

		options = []
		for (var i = 0; i < this.props.items.length; i++){
			options.push(React.createElement("option", {key: i, value: this.props.items[i][this.props.value_name]}, this.props.items[i][this.props.display_name]))
		}

		return (        	

			React.createElement("select", {className: "field", ref: "select", value: selected, className: "form-control", onChange: this.onChange}, 
		      	React.createElement("option", {value: ""}, "Select ", this.props.name), 
		        options
		    )

		)
	}

});

module.exports = NameLinkDropdown;

},{"react":235,"react-router-component":22}],320:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin

/**
* AdFeature - loads data for a single ad to be featured. Uses ad builder to generate a Ad and 
* display's the ad in the center of the screen.
* 
*/
var Next = React.createClass({displayName: "Next",

	mixins: [NavigatableMixin],

	nextClick: function(){

		var next = null
		var seen = null
		var stack = window[this.props.stackName][this.props.stackKey]
		for (var i = 0; i < stack.length; i++){
			if (seen && next == null){
				next = stack[i]
				break
			}
			if (stack[i] == this.props.current){
				seen = true
			}
		}
		if (next == null){
			next = stack.shift()
		}
		var url = this.props.base_path + next + "/"
		this.navigate(url, function(err) {
			if (err) {
				throw err;
			}
		});
	},

	//render next if stack exists and more that current hash on stack 
	render: function() {
		if (window[this.props.stackName] === undefined){
			return (React.createElement("div", null))
		}
		if (window[this.props.stackName][this.props.stackKey] == undefined){
			return (React.createElement("div", null))
		}
		if (window[this.props.stackName][this.props.stackKey].length <= 1){
			return (React.createElement("div", null))
		}
		return (React.createElement("div", {style: {cursor: 'pointer'}, onClick: this.nextClick}, "Next"))

	}

});

module.exports = Next;

},{"react":235,"react-router-component":22}],321:[function(require,module,exports){
var React = require('react');

var Pagination = React.createClass({displayName: "Pagination",

	range: function(start, count) {
        return Array.apply(0, Array(count))
                    .map(function (element, index) { 
                             return index + start;  
                         });
    },

	render: function() {

		var numPages = Math.ceil(this.props.total / this.props.perPage)
		if (numPages == 0){
			return React.createElement("div", null)
		}

		var pageNumber = parseInt(this.props.page) + 1


		if (pageNumber <= 3){
			var pages = this.range(1,pageNumber)
		} else if (pageNumber >= numPages - 2){
			var pages = this.range(numPages-4, 5)
		} else {
			var pages = this.range(pageNumber-2, 5)
		}

		/*
		if (this.props.page > 3 && this.props.page < numPages - 4){
			// if between the start and then end
			var start = this.props.page - 3
			var end = this.props.page + 3
		} else {
			// if towards the end
			if (this.props.page > 3 && this.props.page > numPages - 4){
				var start = numPages - 8
				start = start < 0 ? 0 : start
				var end = numPages - 1
			} else {
				// if towards the start
				var start = 0
				var end = 7
			}
			
		}
		*/
		numbered = []
		for (var i in pages){
			var numActive = pages[i] == pageNumber ? ' active' : ''				
			numbered.push(React.createElement("a", {key: pages[i], style: {cursor: 'pointer'}, className: "page gradient " + numActive, onClick: this.props.pageClick.bind(null, pages[i] - 1)}, pages[i]))
		}
		var first = ''
		var to_first = ''
		if (pages.indexOf(1) == -1){
			var first = (React.createElement("a", {key: 1, style: {cursor: 'pointer'}, className: "page gradient ", onClick: this.props.pageClick.bind(null, 1 - 1)}, 1))
			var to_first = React.createElement("span", {className: "to_first", style: {padding: '2px'}}, "...")
		}
		if (pageNumber != 1){
			var previous = (React.createElement("a", {key: pageNumber-1, style: {cursor: 'pointer'}, className: "page gradient previous", onClick: this.props.pageClick.bind(null, pageNumber - 2)}, "Previous")) 
		}
		var to_last = ''
		if (pages.indexOf(numPages) == -1){
			var last = (React.createElement("a", {key: numPages, style: {cursor: 'pointer'}, className: "page gradient", onClick: this.props.pageClick.bind(null, numPages - 1)}, numPages))			
			var to_last = React.createElement("span", {className: "to_last", style: {padding: '2px'}}, "...")
		}
		if (pageNumber != numPages){
			var next = (React.createElement("a", {key: pageNumber+1, style: {cursor: 'pointer'}, className: "page gradient next", onClick: this.props.pageClick.bind(null, pageNumber)}, "Next")) 
		}

		/*
		if (start > 0){
			var firstActive = this.props.page == 0 ? ' active' : ''
			var number = numbered.shift()
			var first = (<a key={number.key} style={{cursor: 'pointer'}} className={"page gradient" + firstActive} onClick={this.props.pageClick.bind(null, 0)}>first</a>)
			
			numbered.unshift(first)
		}
		if (this.props.last === undefined || this.props.last !== "false"){
			if (end < numPages - 1){
				var lastActive = this.props.page == this.props.numPages - 1 ? ' active' : ''
				var number = numbered.pop()
				var last = (<a key={number.key} style={{cursor: 'pointer'}} className={"page gradient" + lastActive} onClick={this.props.pageClick.bind(null, numPages - 1)}>last</a>)
				numbered.push(last)
			}
		}
		*/
		var from = ((this.props.page + 1) * this.props.perPage) - this.props.perPage + 1
		var to = ((this.props.page + 1) * this.props.perPage)
		if (to > this.props.total){
			to = this.props.total
		}
		pages = ''

		if (numPages > 1){
			pages = (
				React.createElement("div", null, 
					React.createElement("div", {className: "pagination"}, 
	                	previous, first, to_first, numbered, to_last, last, next
                	)
                )
            )
		}
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "small hint"}, "Showing ", from, " - ", to, " of ", this.props.total, " results"), 
				pages
            ))
	}

});

module.exports = Pagination;

},{"react":235}],322:[function(require,module,exports){
var React = require('react');

var PaginationNextPrevious = React.createClass({displayName: "PaginationNextPrevious",

	render: function() {
		if (parseInt(this.props.page) === 0){
			//disable previous
			var previous = React.createElement("a", {key: "previous", style: {cursor: 'not-allowed'}, className: "page disabled"}, "previous")
		} else {
			var previous = React.createElement("a", {key: "previous", style: {cursor: 'pointer'}, className: "page gradient", onClick: this.props.pageClick.bind(null, parseInt(this.props.page) - 1)}, "previous")
		}
		
		if (this.props.finished){
			// disable next
			var next = React.createElement("a", {key: "next", style: {cursor: 'not-allowed'}, className: "page disabled"}, "next")
		} else {
			var next = React.createElement("a", {key: "next", style: {cursor: 'pointer'}, className: "page gradient", onClick: this.props.pageClick.bind(null, parseInt(this.props.page) + 1)}, "next")
		}
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "pagination"}, previous, " ", next)
            ))
	}

});

module.exports = PaginationNextPrevious;

},{"react":235}],323:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin

var Previous = React.createClass({displayName: "Previous",

	mixins: [NavigatableMixin],

	previousClick: function(){

		var previous = null
		var last = null
		var stack = window[this.props.stackName][this.props.stackKey]
		for (var i = 0; i < stack.length; i++){
			if (this.props.current == stack[i]){
				if (previous !== null){
					// previous is set then break
					break
				} else {
					// if previous is null then hash must be first item, therefore pop lst item from stack as previous
					previous = stack.pop()
					break
				}
			} else {
				previous = stack[i]
			}
		}
		if (previous == null){
			previous = this.props.current
		}
		var url = this.props.base_path + previous + "/"
		this.navigate(url, function(err) {
			if (err) {
				throw err;
			}
		});
	},

	//render next if stack exists and more that current hash on stack 
	render: function() {
		if (window[this.props.stackName] === undefined){
			return (React.createElement("div", null))
		}
		if (window[this.props.stackName][this.props.stackKey] == undefined){
			return (React.createElement("div", null))
		}
		if (window[this.props.stackName][this.props.stackKey].length <= 1){
			return (React.createElement("div", null))
		}
		return (React.createElement("div", {style: {cursor: 'pointer'}, onClick: this.previousClick}, "Previous"))

	}

});

module.exports = Previous;

},{"react":235,"react-router-component":22}],324:[function(require,module,exports){
var React = require('react');

var SortDropdown = React.createClass({displayName: "SortDropdown",

	getInitialState: function(){
		return {}
	},

	onChange: function(){
		this.props.onChange(this.refs['select'].getDOMNode().value)
	},

	resetChange: function(){
		this.props.onChange(false)
	},

	render: function() {

		var options = []
		var x = 0
		for (var property in this.props.items) {
    		if (this.props.items.hasOwnProperty(property)) {
    			options.push(React.createElement("option", {key: x, value: property}, this.props.items[property]))
    			x++;
    		}
    	}

		var selected = ''
		if (this.props.selected){
			selected = this.props.selected
		}

		return (
        	React.createElement("div", null, 
        		React.createElement("div", {className: "input-group"}, 
					React.createElement("select", {className: "field", ref: "select", value: selected, className: "form-control", onChange: this.onChange}, 
				        options
				    ), 
				    React.createElement("span", {className: "input-group-btn"}, 
				    	React.createElement("button", {className: "btn btn-default", onClick: this.resetChange}, "Reset")
					)
				)
			)
		)
	}

});

module.exports = SortDropdown;

},{"react":235}],325:[function(require,module,exports){
var React = require('react');
var qs = require('querystring')
var getCookie = require('../../utils/get-cookie.js')
var urlHostType = require('../../utils/url-host-type.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin

var Typeahead = React.createClass({displayName: "Typeahead",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		get = qs.parse(location.search.substr(1,Infinity))
        if (get['q'] !== undefined){
            var q = get['q']            
        } else {
            var q = ''
        }
		return {hover: 0, maxVisible: 10, numOptions: 0, options: {}, value: q, nonce: 0}
	},

    inputKeyUp: function(e){
        if (e.keyCode == 40){
            this.hoverNext()
        } else if (e.keyCode == 38){
            this.hoverPrevious()
        } else if (e.keyCode == 13){
            var option = this.currentOption()
            this.onSelected(option)
        }
        e.preventDefault()
    },

    inputChange: function(e){

        var value = this.refs['search-text'].getDOMNode().value
        console.log('input value', value)

        if (this.typeaheadTimeout){
            clearTimeout(this.typeaheadTimeout)
        }
        var nonce = this.state.nonce
        if (!value){
            this.setState({nonce: nonce + 1, value: false, options: {}})
            return
        }        
        this.setState({nonce: nonce + 1, value: value})
        this.typeaheadTimeout = setTimeout(function(){
            $.ajax({
                method: 'POST', 
                url:'/typeahead/',
                data: {
                    nonce: nonce,
                    prefix: encodeURIComponent(value)
                },
                headers: {'Accept':'application/json', 'X-CSRFToken': getCookie('csrftoken')}
            }).done(function(response){
                if (response.nonce == this.state.nonce - 1){  // if response nonce is previous nonce then is current
                	var numOptions = Object.keys(response.options).length
					if (this.state.value){
						numOptions += 1
					}
                    this.setState({numOptions: numOptions, options: response.options, hover: 0})
                }
            }.bind(this)).fail(function(xhr, status){
                console.log('error')
            }.bind(this))
        }.bind(this), 200)
    },

    onSelected: function(option){
        if (option == 'offer'){
            this.navigate('/search/?q=' + this.state.value) 
            this.setState({value: false, options: {}})    
        } else {
            var result = this.state.options[option]
            console.log('selected', option, result)
            var selectedUrl = '/' + result.type.toLowerCase() + '/' + urlHostType(result.host_type) + '/' + result.hash + '/'
            this.setState({value: false, options: {}})
            this.navigate(selectedUrl)
        }
    },

	currentOption: function(){
		x = 0
		if (this.state.value){
			if (this.state.hover == x){
				return 'offer'
			}
			x += 1
		}
		
		for (property in this.state.options){
			if (this.state.options.hasOwnProperty(property)){
				if (this.state.hover == x){
					return property
					break
				}
				x += 1
			}
		}
		return false
	},

	hoverNext: function(){
		if (this.state.hover < this.state.numOptions - 1 && this.state.hover < this.state.maxVisible - 1){
			this.setState({hover: this.state.hover + 1})
		}
	},

	hoverPrevious: function(){
		if (this.state.hover > 0){
			this.setState({hover: this.state.hover - 1})
		}
	},

	searchSubmit: function(e){
        e.preventDefault()
    },

    inputFocus: function(){
    	this.refs['search-text'].getDOMNode().focus()
    },

	render: function() {
		console.log('typeahead', this.props, this.state)
		var options = []		
		x = 0
		if (this.state.value){
			var hoverCls = ''
			if (this.state.hover == x){
				hoverCls = 'hover'
			}
			options.push(
				React.createElement("li", {className: hoverCls, key: this.state.value}, 
					React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.onSelected.bind(this, 'offer')}, "Search offers for \"", this.state.value, "\"")
				)
			)
			x = 1
		}
		
		for (property in this.state.options){
			if (this.state.options.hasOwnProperty(property)){
				var hoverCls = ''
				if (this.state.hover == x){
					hoverCls = 'hover'
				}
				options.push(
					React.createElement("li", {className: hoverCls, key: property}, 
						React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.onSelected.bind(this, property)}, property)
					)
				)
				x += 1
				if (x >= this.state.maxVisible){
					break
				}
			}
		}

		var selectorStyle = {position: 'absolute'}
		if (this.props.selectorBlock !== undefined && this.props.selectorBlock == true){
			selectorStyle = {}
		}

		return (
			React.createElement("form", {className: "typeahead", onSubmit: this.searchSubmit}, 
            	React.createElement("span", {onClick: this.inputFocus, className: "typeahead-icon fa fa-search"}), 
                React.createElement("input", {
                	style: {backgroundColor: 'transparent'}, 
                	className: "typeahead-input", 
                	ref: "search-text", 
                	defaultValue: this.state.q, 
                	onKeyUp: this.inputKeyUp, 
                	onChange: this.inputChange, 
                	type: "text", 
                	placeholder: "Search for offers and advertisers... "}), 	                   	            
                React.createElement("ul", {style: selectorStyle, className: "typeahead-selector"}, 
					options
				)
            )
			
		);
	}

});

module.exports = Typeahead;

},{"../../utils/get-cookie.js":407,"../../utils/url-host-type.js":413,"querystring":420,"react":235,"react-router-component":22}],326:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var Link = require('react-router-component').Link
var Footer =
  React.createClass({displayName: "Footer",
    render:function(){
        
      return (
            React.createElement("div", {className: "container-fluid  footer"}, 
                React.createElement("div", {className: "copyright sm-text-center"}, 
                    React.createElement("p", {className: "small no-margin pull-left sm-pull-reset"}, 
                        React.createElement("span", {className: "hint-text"}, "Copyright © 2015 "), 
                        React.createElement("span", {className: "font-montserrat"}, "Make Massive"), ". ",  
                        React.createElement("span", {className: "hint-text"}, "All rights reserved."), 
                        React.createElement("span", {className: "sm-block hidden"}, React.createElement("a", {href: "#", className: "m-l-10 m-r-10"}, "Terms of use"), " | ", React.createElement("a", {href: "#", className: "m-l-10"}, "Privacy Policy")
                        )
                    ), 
                    React.createElement("p", {className: "small no-margin pull-right sm-pull-reset"}, 
                        "Where discovery meets opportunity"
                    ), 
                    React.createElement("div", {className: "clearfix"})
                )
            )
        )
    }
  });
module.exports = Footer;

},{"react":235,"react-router-component":22}],327:[function(require,module,exports){
// callback(responseData)
var getCookie = require('../../utils/get-cookie.js')

module.exports = function(url, data, callback, complete){
	data['csrfmiddlewaretoken'] = getCookie('csrftoken')
  console.log(url)
	$.ajax({
		url: url,
		type: 'DELETE',
		headers: {'Accept':'application/json', 'X-CSRFToken': getCookie('csrftoken')},
		data: data,
		dataType: 'json'
	})
	.done(function(response){
		if (response.messages === undefined){
			response.messages = []
		}
		callback(response)
	}.bind(this))
	.fail(function(xhr, err){
		if (xhr.status == 404){
			callback({messages:[{state: 'error', message: 'Oops, page not found.'}]})
		} else if (xhr.status == 500){
			callback({messages:[{state: 'error', message: 'Oops, something went wrong.'}]})
		} else if (xhr.status == 403){
			callback({messages:[{state: 'error', message: 'Oops, forbidden.'}]})
		} else {
			callback({messages:[{state: 'error', message: 'Oops, please check your conection and try again.'}]})
		}		
	}.bind(this))
	.complete(function(){
		if (complete !== undefined){
			complete()
		}
	}.bind(this))
}

},{"../../utils/get-cookie.js":407}],328:[function(require,module,exports){
var React = require('react')

var Messages = React.createClass({displayName: "Messages",
	render: function() {
		var messages = []
		this.props.messages.forEach(function(message){
			if (this.props.field === undefined || this.props.field == false || this.props.field == null){
				var field = false
			} else {
				var field = this.props.field
			}
			if (message.field === undefined || message.field == false || message.field == null || message.field == '__all__'){
				var msgField = false
			} else {
				var msgField = message.field
			}
			if (field == msgField){
				var cls = ''
				if (message.state == 'error'){
					cls = 'text-danger'
				} else if (message.state == 'warning'){
					cls = 'text-warning'
				} else if (message.state == 'success'){
					cls = 'text-success'
				} else if (message.state == 'info'){
					cls = 'text-info'
				}
				messages.push(React.createElement("div", {className: cls}, message.message))
			}			
		}.bind(this))
		return React.createElement("div", null, messages)
	}
})

module.exports = Messages

},{"react":235}],329:[function(require,module,exports){
// callback(responseData)
var getCookie = require('../../utils/get-cookie.js')

module.exports = function(url, data, callback, complete){
	data['csrfmiddlewaretoken'] = getCookie('csrftoken')
  console.log(url)
	$.ajax({
		url: url,
		type: 'POST',
		headers: {'Accept':'application/json'},
		data: data,
		dataType: 'json'
	})
	.done(function(response){
		if (response.messages === undefined){
			response.messages = []
		}
		callback(response)
	}.bind(this))
	.fail(function(xhr, err){
		if (xhr.status == 404){
			callback({messages:[{state: 'error', message: 'Oops, page not found.'}]})
		} else if (xhr.status == 500){
			callback({messages:[{state: 'error', message: 'Oops, something went wrong.'}]})
		} else if (xhr.status == 403){
			callback({messages:[{state: 'error', message: 'Oops, forbidden.'}]})
		} else {
			callback({messages:[{state: 'error', message: 'Oops, please check your conection and try again.'}]})
		}		
	}.bind(this))
	.complete(function(){
		if (complete !== undefined){
			complete()
		}
	}.bind(this))
}

},{"../../utils/get-cookie.js":407}],330:[function(require,module,exports){
// callback(responseData)
var getCookie = require('../../utils/get-cookie.js')
module.exports = function(url, data, callback, complete){
  console.log(url)
	data['csrfmiddlewaretoken'] = getCookie('csrftoken')
	$.ajax({
		url: url,
		type: 'PUT',
		headers: {'Accept':'application/json'},
		data: data,
		dataType: 'json'
	})
	.done(function(response){
		if (response.messages === undefined){
			response.messages = []
		}
		callback(response)
	}.bind(this))
	.fail(function(xhr, err){
		if (xhr.status == 404){
			callback({messages:[{state: 'error', message: 'Oops, page not found.'}]})
		} else if (xhr.status == 500){
			callback({messages:[{state: 'error', message: 'Oops, something went wrong.'}]})
		} else if (xhr.status == 403){
			callback({messages:[{state: 'error', message: 'Oops, forbidden.'}]})
		} else {
			callback({messages:[{state: 'error', message: 'Oops, please check your conection and try again.'}]})
		}		
	}.bind(this))
	.complete(function(){
		if (complete !== undefined){
			complete()
		}
	}.bind(this))
}

},{"../../utils/get-cookie.js":407}],331:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var Link = require('react-router-component').Link
var PubSub = require('pubsub-js')
var UserWidget = require('../account/app-userwidget.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Typeahead = require('../control/app-typeahead.jsx');


var Header = React.createClass({displayName: "Header",

    mixins: [NavigatableMixin],

    typeaheadTimeout: false,

    toggleSidebar: function(){
        $body = $('body');
        $element = $('.page-sidebar')
        var timer;
        if ($body.hasClass('sidebar-open')) {
            $body.removeClass('sidebar-open');
            timer = setTimeout(function() {
                $element.removeClass('visible');
            }.bind(this), 400);
        } else {
            clearTimeout(timer);
            $element.addClass('visible');
            setTimeout(function() {
                $body.addClass('sidebar-open');
            }.bind(this), 10);
        }
    },

    navigateSearch: function(){
        this.navigate('/search/')
    },

    render:function(){

        return (
            /* <!-- START PAGE HEADER WRAPPER --> */
            /* <!-- START HEADER --> */
            /* <div className="mm-header ">*/ 
            React.createElement("div", {className: "header"}, 

                React.createElement("div", {className: "pull-left full-height visible-sm visible-xs"}, 
                    React.createElement("div", {className: "sm-action-bar"}, 
                        React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.toggleSidebar, className: "btn-link toggle-sidebar", "data-toggle": "sidebar"}, 
                            React.createElement("span", {className: "icon-set menu-hambuger"})
                        )
                    )
                ), 
                 
                React.createElement("div", {className: "pull-right full-height visible-sm visible-xs"}, 
                    React.createElement("div", {className: "sm-action-bar"}, 
                        React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.navigateSearch, className: "btn-link", "data-toggle": "quickview", "data-toggle-element": "#quickview"}, 
                            React.createElement("span", {className: "fa fa-search"})
                        )
                    )
                ), 

                React.createElement("div", {className: "pull-left sm-table"}, 
                    React.createElement("div", {className: "header-inner"}, 
                        React.createElement("div", {className: "brand inline"}, 
                            React.createElement("img", {src: "static/images/mm-on-transparent-bg.png", style: {maxWidth: '140px'}, className: "img-responsive"})
                        ), 
                        { /*
                        <div style={{cursor: 'pointer', display: 'inline-block'}} id="search-link" onClick={this.navigateSearch}>
                            <span className="fa fa-search"></span>
                        </div>
                        */ }, 
                        React.createElement("div", {style: {display: 'inline-block'}, id: "search-container"}, 
                            React.createElement("div", {className: "visible-lg visible-md", style: {marginLeft: '30px', display: 'inline-block', width: '400px'}}, 
                                React.createElement(Typeahead, null)
                            )
                        )
                    )
                ), 
                React.createElement("div", {className: "pull-right"}, 
                    React.createElement("div", {className: "visible-lg visible-md"}, 
                        { /* <UserWidget /> */ }
                    )
                )
            )
            /* <!-- END HEADER --> */
            /* <!-- END PAGE HEADER WRAPPER --> */
        )
    }
  });
module.exports = Header;

},{"../account/app-userwidget.jsx":268,"../control/app-typeahead.jsx":325,"pubsub-js":10,"react":235,"react-router-component":22}],332:[function(require,module,exports){
var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var HelpTimeline = require('./app-helptimeline.jsx')
var Help = React.createClass({displayName: "Help",



    render: function() {

        var crumb_links = [
            {url : '/', name: 'Home', className: ''},
            {url : '/help/', name: 'Help', className: 'active'},
        ]

        return (
            React.createElement("div", null, 
               
                React.createElement("div", {className: "container-fluid sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 

                        React.createElement(Breadcrumb, {links: crumb_links}), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                                
                                React.createElement("div", {className: "panel panel-transparent"}, 
                                    
                                    React.createElement("div", {className: "panel-body"}, 
                                        React.createElement("h3", null, "Help"), 
                                        React.createElement("p", null, "Learn how to get the most out of Make Massive.")
                                    )
                                )
                            ), 
                            React.createElement("div", {className: "col-lg-7 col-md-6 "}, 
                                React.createElement("div", {className: "full-height"}, 
                                    React.createElement("div", {className: "panel-body text-center"}

                                    )
                                )
                            )
                        )
                    )
                ), 


                React.createElement("div", {className: "container-fluid"}, 
                    React.createElement(HelpTimeline, null)
                )

            )  
        );
    }

});

module.exports = Help;

},{"../breadcrumb/app-breadcrumb.jsx":311,"./app-helptimeline.jsx":333,"react":235}],333:[function(require,module,exports){
var React = require('react');
var Link = require('react-router-component').Link
var PubSub = require('pubsub-js')

var HelpTimeline = React.createClass({displayName: "HelpTimeline",

	openHelp: function(name, title){
		PubSub.publish('help', {view: name, title: title})
	},

	render: function() {
		return (
			React.createElement("div", {className: "timeline-container"}, 
				React.createElement("section", {className: "timeline"}, 

					React.createElement("div", {className: "timeline-block"}, 
						React.createElement("div", {className: "timeline-point success"}, 
							React.createElement("i", {className: "fa fa-money"})
						), 							

						React.createElement("div", {className: "timeline-content"}, 
							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", null, "Latest Offers")
								), 
								React.createElement("div", {className: "card-description"}, 
									"Latest offers shows the most recently added offers from over 50 top affiliate networks." + ' ' + 
									"Filter offers by Country, Device and Affiliate network to find the best offers fo your" + ' ' +
									"traffic. Look for the ", React.createElement("span", {className: "fa fa-image"}), " these are offers for which we have" + ' ' +
									"related ad and lander data."
								), 
								React.createElement("div", {className: "card-footer"}, 
									React.createElement(Link, {href: "/"}, React.createElement("span", {className: "fa fa-search m-l-20 m-r-10 hint"}), " View Latest Offers")
								), 
								React.createElement("div", {className: "event-date hidden"}, 
									React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.openHelp.bind(this, 'help-offers', 'Offers')}, "What is a offer?")
								)
							)

						)
					), 

					React.createElement("div", {className: "timeline-block"}, 
						React.createElement("div", {className: "timeline-point small"}
						), 							

						React.createElement("div", {className: "timeline-content"}, 
							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", null, "Offer Page")
								), 
								React.createElement("div", {className: "card-description"}, 
									"Click on a offer to view the conditions and compare payouts with multiple networks." + ' ' +
									"Offers with ", React.createElement("span", {className: "fa fa-image"}), " ad data  allow you to see how the offer" + ' ' + 
									"is being promoted by real-life affiliates, which ads are used most and where it is being promoted."
								)
							)

						)
					), 

					React.createElement("div", {className: "timeline-block"}, 
						React.createElement("div", {className: "timeline-point primary"}, 
							React.createElement("i", {className: "fa fa-file-code-o"})
						), 							

						React.createElement("div", {className: "timeline-content"}, 
							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", null, "Affiliate Landers")
								), 
								React.createElement("div", {className: "card-description"}, 
									"See the tricks top affiliates use to profit for yourself. A selection of landers" + ' ' + 
									"from our database that are currently being used by affiliates" + ' ' + 
									"to promote offers. Filter by country and traffic source to find landers to" + ' ' +
									"inspire your next campaigns."   
								), 
								React.createElement("div", {className: "card-footer"}, 
									React.createElement(Link, {href: "/affiliate-lander/"}, React.createElement("span", {className: "fa fa-search m-l-20 m-r-10 hint"}), " View Affiliate Landers")
								)
							)
							
						)
					), 

					React.createElement("div", {className: "timeline-block"}, 
						React.createElement("div", {className: "timeline-point complete"}, 
							React.createElement("i", {className: "fa fa-group"})
						), 							

						React.createElement("div", {className: "timeline-content"}, 
							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", null, "Affiliate Networks")
								), 
								React.createElement("div", {className: "card-description"}, 
									"With over 50 top affiliate networks with offers in every country and for every device" + ' ' +
									"it is easy to find a network that has offers that convert your traffic. Filter networks" + ' ' +
									"by offer country and device to find the best networks to support you."
								), 
								React.createElement("div", {className: "card-footer"}, 
									React.createElement(Link, {href: "/affiliate-network/"}, React.createElement("span", {className: "fa fa-search m-l-20 m-r-10 hint"}), " View Affiliate Landers")
								)
							)
							
						)
					), 

					React.createElement("div", {className: "timeline-block"}, 
						React.createElement("div", {className: "timeline-point warning"}, 
							React.createElement("i", {className: "fa fa-exchange"})
						), 							

						React.createElement("div", {className: "timeline-content"}, 
							React.createElement("div", {className: "card share full-width"}, 
								React.createElement("div", {className: "card-header"}, 
									React.createElement("h5", null, "Traffic Sources")
								), 
								React.createElement("div", {className: "card-description"}, 
									"Explore ad data from over 200 traffic sources. Find the your next profitable traffic" + ' ' + 
									"source and wee what others are promoting on popular traffic sources such as Facebook" + ' ' + 
									"and Google."
								), 
								React.createElement("div", {className: "card-footer"}, 
									React.createElement(Link, {href: "/traffic-source/"}, React.createElement("span", {className: "fa fa-search m-l-20 m-r-10 hint"}), " View Traffic Sources")
								)
							)
							
						)
					)
				)
			)
		);
	}

});

module.exports = HelpTimeline;

},{"pubsub-js":10,"react":235,"react-router-component":22}],334:[function(require,module,exports){
var React = require('react');

var OffersHelp = React.createClass({displayName: "OffersHelp",

	title: 'Offers',

	render: function() {
		return (
			React.createElement("div", null, 
				React.createElement("h5", null, "What is a offer?")
				
			)
		);
	}

});

module.exports = OffersHelp;

},{"react":235}],335:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var LanderPanel = require('../lander/app-landerpanel.jsx')
var OfferPanel = require('../offer/app-offerpanel.jsx')
var ExternalPanel = require('../lander/app-externalpanel.jsx')
var HostAdGrid = require('./app-hostadgrid.jsx')
var Link = require('react-router-component').Link
var OfferDetail = require('../offer/app-offerdetail.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var CategoryLabel = require('../category/app-categorylabel.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var AffiliteHostToggle = require('../admin/app-affiliatehosttoggle.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var is_admin = require('../admin/is_admin.js')
var log = require('loglevel')
var AsyncFilterGrid = require('../ad/app-asyncfiltergrid.jsx')
var AsyncFilterLanders = require('../lander/app-asyncfilterlanders.jsx')
var AsyncFilterOffers = require('../offer/app-asyncfilteroffers.jsx')
var role = require('../../utils/role.js')

var Host = React.createClass({displayName: "Host",

	mixins: [NavigatableMixin],

	offerClick: function(offer_hash){
		$(window).scrollTop($('#offer-row').offset().top)
		this.navigate('/advertiser/' + this.props._[0] + '/' + this.props._[1] + '/offer/' + offer_hash + '/',  {replace: true})
		this.setState({offer_hash: offer_hash})
	},

	getInitialState: function(props, cb){
		if (this.props._[2] == 'offer' && this.props._[3] !== undefined){
			return {offer_hash: this.props._[3]}
		} else {
			return {offer_hash: undefined}
		}
	},

	render: function() {

		// name the props
		var host_type = this.props._[0]
		var host_hash = this.props._[1]

		var panels = []
		if (this.props.remote.loading){
			var inner = React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		} else {

			var base_path = '/advertiser/' + url_host_type(this.props.remote.host_type) + '/' + this.props.remote.hash + '/'
			if (this.props.remote.slug){
				base_path = '/advertiser/' + url_host_type(this.props.remote.host_type) + '/' + this.props.remote.slug + '/'
			}				

			var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : base_path, name: this.props.remote.host_name, className: 'active'}
			]
			
			var panels = [
				(React.createElement("div", {className: "container-fluid "}, 
					React.createElement(AsyncFilterOffers, {
	                        title: "Offers", 
	                        filter_country: true, 
	                        filter_devices: true, 
	                        filter_networks: true, 
	                        sort: true, 
	                        cols: ['device', 'ads', 'title', 'payout-amount',  'payout-type', 'countries',  'category', 'network', 'date-added'], 
	                        sort_default: 'date_added_desc', 
	                        async_path: base_path + 'offer/panel', 
	                        base_path: base_path})	
					)),
				(React.createElement("div", {className: "container-fluid "}, 
					React.createElement(AsyncFilterGrid, {
						title: "Ads", 			
						filter_country: true, 	
						filter_dimensions: true, 		
						filter_platforms: true, 	
						sort: true, 
						sort_default: 'last_seen_desc', 
						async_path: base_path + "ad/panel", 
						base_path: base_path})
					)),
				(React.createElement("div", {className: "container-fluid "}, 
					React.createElement(AsyncFilterLanders, {
						title: "Advertiser Landers", 			
						filter_country: true, 		
						filter_platforms: true, 	
						sort: true, 
						sort_default: 'last_seen_desc', 
						async_path: base_path + "lander/panel", 
						base_path: base_path})
					)),
				(React.createElement("div", {className: "container-fluid "}, 
					React.createElement(AsyncFilterLanders, {
						title: "Inbound Landers", 			
						filter_country: true, 		
						filter_platforms: true, 	
						sort: true, 
						sort_default: 'last_seen_desc', 
						async_path: base_path + "inbound/panel", 
						base_path: base_path})
					)),

			]

			if (is_admin()){
				panels.unshift(React.createElement("div", {className: "container-fluid "}, 
						React.createElement("div", {className: "panel"}, 
							React.createElement("div", {className: "panel-heading"}, 
								React.createElement("div", {className: "panel-title"}, 
									"Admin"
								)
							), 
							React.createElement("div", {className: "panel-body"}, 
								React.createElement(AffiliteHostToggle, {
									host_type: host_type, 
									host_hash: host_hash, 
									async_path: '/admin/affiliate/host/' + url_host_type(host_type) + '/' + host_hash + '/'})
							)
						)
					))
			}			

			var visit_url = 'http://' + this.props.remote.host_name + '/'
			var visitButton = ''
			if (this.props.remote.website_url){
				visitButton = (
					React.createElement("div", {className: "m-t-20"}, 
						React.createElement("form", {action: visit_url, target: "_blank"}, 
							React.createElement("button", {className: "btn btn-primary"}, "Visit Website")
						)
					))
			}

			var category = ''
			if (role.is_admin()){
				category = (React.createElement(CategoryLabel, {
            		base_path: "/advertiser/" + host_type + "/" + host_hash + "/", 
            		categories: this.props.remote.categories, 
	            	selected: this.props.remote.category}))
			}

			var inner = (React.createElement("div", {className: "inner"}, 
	                    	React.createElement(Breadcrumb, {links: crumb_links}), 
	                        React.createElement("div", {className: "row"}, 
	                        	
	                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
	                            
	                                React.createElement("div", {className: "panel panel-transparent"}, 
	                                    React.createElement("div", {className: "panel-heading"}, 
	                                        React.createElement("div", {className: "panel-title"}, "Advertiser")
	                                    ), 
	                                    React.createElement("div", {className: "panel-body"}, 
	                                        React.createElement("h3", {key: "title"}, this.props.remote.host_name), 
	                                        React.createElement("br", null), 
	                                        category, 
	                                        React.createElement("br", null), 
	                                        React.createElement("div", null, 
		                                        visitButton
                                            )
	                                    )
	                                )
	                               
	                            )
	                            
	                        )
	                    ))
		}
		return (
			React.createElement("div", null, 

                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    inner
                ), 

				panels
					
			)

		);
	}

});

module.exports = withAsyncState(Host);

},{"../../utils/role.js":412,"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../ad/app-asyncfiltergrid.jsx":280,"../admin/app-affiliatehosttoggle.jsx":294,"../admin/is_admin.js":295,"../breadcrumb/app-breadcrumb.jsx":311,"../category/app-categorylabel.jsx":314,"../lander/app-asyncfilterlanders.jsx":340,"../lander/app-externalpanel.jsx":341,"../lander/app-landerpanel.jsx":349,"../offer/app-asyncfilteroffers.jsx":376,"../offer/app-offerdetail.jsx":378,"../offer/app-offerpanel.jsx":381,"../xhr/app-loading.jsx":401,"./app-hostadgrid.jsx":336,"loglevel":9,"react":235,"react-router-component":22}],336:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Loading = require('../xhr/app-loading.jsx')
var AdGrid = require('../ad/app-adgrid.jsx')
var AdBuilder = require('../ad/app-adbuilder.jsx')

var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')

var log = require('loglevel');
var UserOverlay = require('../../utils/userOverlay.jsx')
var Pagination = require('../control/app-pagination.jsx')

var HostAdGrid = React.createClass({displayName: "HostAdGrid",

	getInitialState: function(props, cb){
		return {page: 0, perPage: 40}
	},

	previousClick: function(){
		this.setState({page: this.state.page - 1})
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	nextClick: function(){
		this.setState({page: this.state.page + 1})
	},

	render: function() {
		// initial a stack for ads, to allow for next and previous
		if (this.props.remote.loading){
			return (React.createElement("div", {id: "adList_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Ads")
	                    ), 
	                    React.createElement("div", {className: "panel-body p-b-20 p-t-20"}, 
					        React.createElement(Loading, null)
						)
	                )
				))
		}

		if (window._adStack === undefined){
			window._adStack = {}
		}
		var items = ''

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "adList_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Ads")
                    ), 
                    React.createElement("div", {className: "panel-body text-left"}, 
				        "No ads found."
					)
                )
			)	)
		}
		var stack = []
		if (this.state.page == 0){
			var start = 0
		} else {
			var start = this.state.page * this.state.perPage
		}
		var items = []
		var numPages = Math.ceil(this.props.remote.items.length / this.state.perPage)
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= this.props.remote.items.length){
				break;
			}
			var item = this.props.remote.items[i]
			if (item.resources.length > 0){
				try {
					item.resources.forEach(function(resource){
						if (resource.width == null || resource.height == null){
							throw 'Invalid ad data. Width or Height of resource is null'
						}
					});
				} catch (e){
					console.log(item, e)
					continue
				}
			} else if (item.titles.length == 0 && item.descriptions.length == 0){
				console.log(item, 'Invalid ad data. Ad must have at least one resource, title or description')
				continue
			}
			item.key = i
			var ad = AdBuilder(item, this.props.base_path + 'ad/' + item['hash'] + '/')
			stack.push(item['hash'])
			items.push(ad)
		}
		
		// assign item hashes to stack	
		window._adStack[this.props.host_type + '-' + this.props.host_hash] = stack
		log.debug('app-hostadgrid', 'items from adbuilder', items)	
		return (
			React.createElement("div", {id: "adList_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Ads")
                    ), 
                    React.createElement("div", {id: "host-ad-container", className: "panel-body"}, 
                    	React.createElement(UserOverlay, null, 
					        React.createElement(AdGrid, {column_width: "180"}, 
								items
							), 
							React.createElement("div", {className: "pull-left m-t-20"}, 
	                        	React.createElement(Pagination, {		
	                        		page: this.state.page, 
	                        		total: this.props.remote.items.length, 
	                        		perPage: this.state.perPage, 
	                        		pageClick: this.pageClick})
	                        ), 
	                        React.createElement("div", {className: "clearfix"})
	                    )
					)
                )
			)	
		);
	}
});

module.exports = withAsyncState(HostAdGrid);

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../ad/app-adbuilder.jsx":272,"../ad/app-adgrid.jsx":276,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-async":12}],337:[function(require,module,exports){
var React = require('react')
var Breadcrumb = require('./breadcrumb/app-breadcrumb.jsx')

var Jumbotron = React.createClass({displayName: "Jumbotron",
	render: function(){
		var title = ''
		if (this.props.title !== undefined){
			title = this.props.title
		}
		var description = ''
		if (this.props.description !== undefined){
			description = this.props.description
		}
		var crumb_links = []
		if (this.props.crumb_links !== undefined){
			crumb_links = this.props.crumb_links
		}
		var heading = ''
		if (this.props.heading !== undefined){
			heading = (
				React.createElement("div", {className: "panel-heading"}, 
					React.createElement("div", {className: "panel-title"}, 
						this.props.heading
					)
				)
			)
		}

		return (
			/*<div className="jumbotron">*/ 
	            React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                React.createElement("div", {className: "inner"}, 
	                    React.createElement(Breadcrumb, {links: crumb_links}), 
	                    React.createElement("div", {className: "row"}, 
	                        React.createElement("div", {className: "col-lg-5 col-md-8 "}, 	                            
	                            React.createElement("div", {className: "panel panel-transparent"}, 
	                                heading, 
	                                React.createElement("div", {className: "panel-body"}, 
	                                    React.createElement("h3", null, title), 
	                                    React.createElement("p", null, description)
	                                )
	                            )
	                        ), 
	                        React.createElement("div", {className: "col-lg-7 col-md-4 "}, 
	                            React.createElement("div", {className: "full-height"}, 
	                                React.createElement("div", {className: "panel-body text-center"}
	                                    
	                                )
	                            )
	                        )
	                    )
	                )
	            )
	        /*</div>*/ 
		)
	}
	
})

module.exports = Jumbotron;

},{"./breadcrumb/app-breadcrumb.jsx":311,"react":235}],338:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var Lander = require('./app-lander.jsx')


var AdLanderPanel = React.createClass({displayName: "AdLanderPanel",

	render: function() {

		
		if (this.props.remote.loading){
			return (React.createElement("div", {id: "lander_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Landers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		} else {
			if (this.props.remote.items.length == 0){
				return (React.createElement("div", {id: "lander_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Landers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        "No landers found for this ad."
	                    )
	                )
				))
			}
			var items = []
			this.props.remote.items.forEach(function(item, i){
				items.push(React.createElement(Lander, {key: i, navigate: this.props.navigate, href: this.props.base_path + "lander/" + item.hash + "/" + window.location.search, screenshot: item.screenshot}))
				/* Use lander component instead
				items.push(<div className="pull-left m-r-10">
					<Link href={this.props.base_path + "lander/" + item.hash + "/"}>
						<img width={item.screenshot.width} height={item.screenshot.height} src={item.screenshot.url} />
					</Link>
				</div>)
				*/
				
			}, this)

			var panelCls = ""
			if (this.props.panelCls !== undefined){
				panelCls = this.props.panelCls
			}

			return (
				React.createElement("div", {id: "lander_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Landers"), 	
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        items
	                    )
	                )
				)
			)
		}
		
	}

});

module.exports = withAsyncState(AdLanderPanel);

},{"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"./app-lander.jsx":343,"react":235}],339:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var evaluateURI = require('../../utils/evaluate-uri.js')
var AffiliateLander = React.createClass({displayName: "AffiliateLander",

    mixins: [NavigatableMixin],
    
    getInitialState: function(){
        return {page: 0}
    },

    pageClick: function(page){
        this.navigate('/landers/' + page + '/')
    },

    landerClick: function(url){
        window._modalInternal = true
        this.navigate(url)
    },

	render: function() {

		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/landers/', name: 'Affiliate Landers', className: 'active'},
		]
        if (this.props.remote.loading){
            var days = React.createElement(Loading, null)
        } else {
            var days = []
            var i = 0;
            for (var key in this.props.remote.days){
                if (this.props.remote.days.hasOwnProperty(key)) {
                    var items = this.props.remote.days[key]
                    landers = []
                    items.forEach(function(item, x){
                        landers.push(React.createElement("div", {key: x, style: {'boxShadow': '0 1px 2px #aaa', "position": "relative"}, className: "pull-left m-r-30 m-b-30"}, 
                            React.createElement("a", {onClick: this.landerClick.bind(this, evaluateURI(this.props.base_path, this.props) + item.hash + "/?aff=" + item.id)}, 
                                React.createElement("img", {width: "240", height: "180", src: item.screenshot.url, alt: item.hash})
                            )
                        ))
                    }.bind(this))
                    days.push(
                        React.createElement("div", {key: i, className: "panel panel-transparent"}, 
                            React.createElement("div", {className: "panel-heading"}, 
                                React.createElement("div", {className: "panel-title"}, key)
                            ), 
                            React.createElement("div", {className: "panel-body"}, 
                                landers
                            )
                        )
                    )
                }
                i++;
            }
        }

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "jumbotron"}, 
                    React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                        React.createElement("div", {className: "inner"}, 

                            React.createElement(Breadcrumb, {links: crumb_links}), 

                            React.createElement("div", {className: "row"}, 
                                React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                                    
                                    React.createElement("div", {className: "panel panel-transparent"}, 
                                        
                                        React.createElement("div", {className: "panel-body"}, 
                                            React.createElement("h3", null, "Affiliate Landers")
                                        )
                                    )
                                ), 
                                React.createElement("div", {className: "col-lg-7 col-md-6 "}, 
                                    React.createElement("div", {className: "full-height"}, 
                                        React.createElement("div", {className: "panel-body text-center"}
                                            
                                        )
                                    )
                                )
                            )
                        )
                    )
                ), 

                React.createElement("div", {className: "container-fluid  bg-white"}, 
                    days
                )

            )  
		);
	}

});

module.exports = withAsyncState(AffiliateLander);

},{"../../utils/evaluate-uri.js":406,"../../utils/withAsyncState.jsx":416,"../breadcrumb/app-breadcrumb.jsx":311,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],340:[function(require,module,exports){
var React = require('react');
var AdGrid = require('../ad/app-adgrid.jsx')
var AdBuilder = require('../ad/app-adbuilder.jsx')
var log = require('loglevel');
var UserOverlay = require('../../utils/userOverlay.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var getState = require('../../utils/getState.js')
var CountryDropdown = require('../control/app-countrydropdown.jsx')
var CountDropdown = require('../control/app-countdropdown.jsx')
var NameCountDropdown = require('../control/app-namecountdropdown.jsx')
var SortDropdown = require('../control/app-sortdropdown.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var LanderGridItem = require('./app-landergriditem.jsx')
var role = require('../../utils/role.js')
var PubSub = require('pubsub-js')
var qs = require('querystring')

var AsyncFilterLanders = React.createClass({displayName: "AsyncFilterLanders",

	mixins: [NavigatableMixin],

	visitClick: function(item){
		// duplicate implementation in LanderFeatue (app-landerfeature.jsx)
		if (!role.is_pro()){
			console.log('publish pro-required')
			PubSub.publish('pro-required', {view: 'lander'})
		} else {
			console.log('publish visit-lander', item)
			PubSub.publish('visit-lander', item)
		}
	},

	filteredResults: function(){
		var filters = [
			'filter_country', 
			'filter_dimensions', 
			'filter_platform', 
			'filter_device', 
			'filter_mediator', 
			'filter_advertiser'
		]
		for (var i = 0; i < filters.length; i++){
			if (this.state.query[filters[i]]){
				return true
			}
		}
		if (this.state.query.show_adult == false){
			return true
		}
		return false
	},

	getInitialState: function(){

		var id = 'l'
		if (this.props.id !== undefined && this.props.id){
			id = this.props.id
		}

		show_adult = true
		if (this.props.filter_adult !== undefined && this.props.filter_adult == true){
			show_adult = false
		}
		var get = qs.parse(location.search.substr(1,Infinity))
		if (get[id + '_show_adult'] !== undefined){
			if (get[id + '_show_adult'] == 'true'){
				show_adult = true
			}
		}

		var sort_by = false
		var sort_default = false
		if (this.props.sort !== undefined && this.props.sort == true && this.props.sort_default !== undefined){
			sort_by = this.props.sort_default
			sort_default = this.props.sort_default
		}

		var exclude_advertisers = false
		if (this.props.exclude_advertisers !== undefined && this.props.exclude_advertisers == true){
			exclude_advertisers = this.props.exclude_advertisers
		}

		return {
			total: 0,
			loading: true,
			loaded: false,
			sort_default: sort_default,
			query: {
				loading: false, 
				filter_country: false, 
				filter_dimensions: false, 
				filter_platform: false, 
				filter_device: false, 
				filter_mediator: false, 
				filter_advertiser: false, 
				show_adult: show_adult,
				exclude_advertisers: exclude_advertisers,
				sort_by: sort_by,
				page: 0, 
				per_page: 30
			}
		}
	},

	showAdultChange: function(show_adult){
		var state = this.state
		if (show_adult === null){
			show_adult = !state.query.show_adult
		}
		state.query.show_adult = show_adult
		this.getAsyncState(state)
	},

	landerClick: function(url_file_hash){
		window._modalInternal = true
		this.navigate(this.props.base_path + 'lander/url_file/' + url_file_hash + '/')
	},

	pageClick: function(page){
		var state = this.state
		state.query.page = page
		this.getAsyncState(state)
	},

	componentWillMount: function(){
		this.getAsyncState(this.state)	
	},
	
	getAsyncState: function(state){
		var props = $.extend({}, this.props)
		props['async_path'] += '?' + $.param(state.query)
		if (!state.loaded){
			state.loading = true
		} else {
			state.query.loading = true
		}
		this.setState(state);
		getState(props, function(error, newState) {
			if (this.state.loaded == false){
				newState.loading = false
				newState.loaded = true
			} else {
				newState.query = this.state.query
				newState.query.loading = false
			}
			this.setState(newState);
		}.bind(this));
	},

	handleCountryChange: function(country){
		var state = this.state
		if (!country || country == '' || country == 'all'){
			state.query.filter_country = false			
		} else {
			if (country == 'GB'){
				state.query.filter_country = country
			} else {
				state.query.filter_country = country
			}			
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleDimensionsChange: function(dimensions){
		var state = this.state
		if (!dimensions){
			state.query.filter_dimensions = false			
		} else {
			state.query.filter_dimensions = dimensions
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleSourceChange: function(platform){
		var state = this.state
		if (!platform){
			state.query.filter_platform = false			
		} else {
			state.query.filter_platform = platform
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleAdvertiserChange: function(advertiser){
		var state = this.state
		if (!advertiser){
			state.query.filter_advertiser = false			
		} else {
			state.query.filter_advertiser = advertiser
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleSortChange: function(sort_by){
		var state = this.state
		if (!sort_by){
			state.query.sort_by = this.state.sort_default			
		} else {
			state.query.sort_by = sort_by
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	render: function() {
		var title = 'Landers'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.state.loading){
			return (
				React.createElement("div", {id: "adList_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, title)
	                    ), 
	                    React.createElement("div", {className: "panel-body p-b-20 p-t-20"}, 
					        React.createElement(Loading, null)
						)
	                )
				))
		}
		
		var countryFilter = ''
		if (this.props.filter_country !== undefined && this.props.filter_country == true){
			var countryFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by country"), 
            	React.createElement(CountryDropdown, {country_map: this.state.countries, countryChange: this.handleCountryChange, selected: this.state.query.filter_country})
			))
		}
		var dimensionsFilter = ''
		if (this.props.filter_dimensions !== undefined && this.props.filter_dimensions == true){
			var dimensionsFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by size"), 
            	React.createElement(CountDropdown, {name: 'Size', onChange: this.handleDimensionsChange, items: this.state.dimensions, selected: this.state.query.filter_dimensions})
			))
		}
		var sourceFilter = ''
		if (this.props.filter_platforms !== undefined && this.props.filter_platforms == true){
			var sourceFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by traffic source"), 
            	React.createElement(NameCountDropdown, {name: 'Traffic Source', onChange: this.handleSourceChange, items: this.state.platforms, selected: this.state.query.filter_platform})
			))
		}

		var advertiserFilter = ''
		if (this.props.filter_advertisers !== undefined && this.props.filter_advertisers == true){
			var advertiserFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by advertiser"), 
            	React.createElement(CountDropdown, {name: 'Advertiser', onChange: this.handleAdvertiserChange, items: this.state.advertisers, selected: this.state.query.filter_advertisers})
			))
		}

		var sortBy = ''
		if (this.props.sort !== undefined){
			var sort_by = {
				'last_seen_desc': 'Last seen: new first',
				'last_seen_asc': 'Last seen: old first',
				'age_desc': 'Age: longest running first',
				'age_asc': 'Age: shortest running first',
				'frequency_desc': 'Frequency: most frequent first',
				'frequency_asc': 'Frequency: least frequent first',
			}
			if (this.props.sort_first_seen !== undefined && this.props.sort_first_seen === true){
				sort_by['first_seen_desc'] = 'First seen: new first'
				sort_by['first_seen_asc'] = 'First seen: old first'
			}
			var sortBy = (
				React.createElement("div", {className: "col-md-3"}, 
					React.createElement("h5", null, "Sort"), 
	            	React.createElement(SortDropdown, {items: sort_by, onChange: this.handleSortChange, selected: this.state.query.sort_by})
				)
			)
		}

		var adultContentSwitch = ''
		if (this.props.filter_adult !== undefined && this.props.filter_adult == true){
			if (this.state.query.show_adult){
				var color = '#CD4945'
				var onStyle = {
					fontWeight: 'bold',
					color: '#CD4945',
					cursor: 'pointer',
				}
				var offStyle = {
					color: '#E6E6E6',
					cursor: 'pointer'
				}
			} else {
				var color = '#E6E6E6'
				var onStyle = {
					color: '#E6E6E6',
					cursor: 'pointer'
				}
				var offStyle = {
					fontWeight: 'bold',
					color: '#CD4945',
					cursor: 'pointer'				
				}
			}
			var adultContentSwitch = (
				React.createElement("div", {className: "col-xs-12 col-md-3 p-t-10"}, 
					React.createElement("div", {style: {display: 'inline-block', paddingRight: '10px'}}, 
						React.createElement("span", {style: {fontSize: '60px', color: color}, onClick: this.showAdultChange.bind(this, null)}, "18+")
					), 
					React.createElement("div", {style: {display: 'inline-block', verticalAlign: 'top'}}, 
						React.createElement("div", null, 
							"Show adult ads & landers"
						), 
						React.createElement("div", null, 
							React.createElement("span", {style: onStyle, onClick: this.showAdultChange.bind(this, true)}, "ON"), " | ", React.createElement("span", {style: offStyle, onClick: this.showAdultChange.bind(this, false)}, "OFF")
						)
					)
				)
			)
		}

		var filterRow = (
			React.createElement("div", {className: "row"}, 				
    			countryFilter, 
    			dimensionsFilter, 
    			sourceFilter, 
    			advertiserFilter, 
    			sortBy
    		)
		)

		var switchRow = (
			React.createElement("div", {className: "m-b-20 row"}, 
				adultContentSwitch
			)
		)


		if (this.state.query.loading){
			var results = [filterRow, switchRow,(
				React.createElement("div", {className: "text-center p-b-20 p-t-20"}, 
			        React.createElement(Loading, null)
				)
			)]
		} else {

			var width = 240
			var height = 180

			if (this.props.width !== undefined){
				width = this.props.width
			}

			if (this.props.height !== undefined){
				height = this.props.height
			}
			
			var items = []

			var LanderItem = LanderGridItem
			if (this.props.LanderItem !== undefined){
				var LanderItem = this.props.LanderItem
			}

			for (var i = 0; i < this.state.items.length; i++){
				var item = this.state.items[i]

				items.push(React.createElement(LanderItem, {key: i, item: item, width: width, height: height, show_advertisers: this.props.show_advertisers, onClick: this.landerClick, visitClick: this.visitClick}))
				/*
				items.push(
				<div key={i} style={{'boxShadow': '0 1px 2px #aaa', "position": "relative"}} className="pull-left m-r-30 m-b-30">
					<a onClick={this.landerClick.bind(this, this.props.base_path + 'lander/url_file/' + item.url_file_hash + '/')}>
						<img width={width} height={height} src={item.screenshot.url} />
					</a>
				</div>)
				*/
			}

			if (items.length > 0){
				var results = [filterRow, switchRow, (
					React.createElement("div", null, 
						React.createElement("div", {className: "row"}, 
		                    React.createElement("div", {className: "col-xs-12"}, 
							items
							)
						), 
						React.createElement("div", {className: "pull-left m-t-20"}, 
			            	React.createElement(Pagination, {		
			            		page: this.state.query.page, 
			            		total: this.state.total, 
			            		perPage: this.state.query.per_page, 
			            		pageClick: this.pageClick})
			            )
			        )
			    )]
			} else {
				if (this.filteredResults()){
					var results = [filterRow, switchRow, (React.createElement("div", null, "No landers found."))]	
				} else {
					var results = [(React.createElement("div", null, "No landers found."))]	
				}
				
			}
		}

		return (
            React.createElement("div", {className: "panel panel-transparent"}, 
                React.createElement("div", {className: "panel-heading"}, 
                    React.createElement("div", {className: "panel-title"}, title)
                ), 
                React.createElement("div", {id: "host-ad-container", className: "panel-body"}, 
                	React.createElement(UserOverlay, null, 		
				        results, 
                        React.createElement("div", {className: "clearfix"})
                    )
				)
            )
		);
	}

});

module.exports = AsyncFilterLanders;

},{"../../utils/getState.js":408,"../../utils/role.js":412,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../ad/app-adbuilder.jsx":272,"../ad/app-adgrid.jsx":276,"../control/app-countdropdown.jsx":316,"../control/app-countrydropdown.jsx":317,"../control/app-namecountdropdown.jsx":318,"../control/app-pagination.jsx":321,"../control/app-sortdropdown.jsx":324,"../xhr/app-loading.jsx":401,"./app-landergriditem.jsx":348,"loglevel":9,"pubsub-js":10,"querystring":420,"react":235,"react-router-component":22}],341:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Loading = require('../xhr/app-loading.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')

var ExternalPanel = React.createClass({displayName: "ExternalPanel",

	mixins: [ReactAsync.Mixin, AsyncIsomorphicMixin],

	render: function() {

		if (this.state.items !== undefined){

			var items = []

			this.state.items.forEach(function(item){
				items.push(
					React.createElement("div", {style: {'boxShadow': '0 1px 2px #aaa'}, className: "pull-left m-r-30 m-b-30"}, 
						React.createElement(Link, {href: this.props.base_path + "external/" + item.hash + "/"}, 
							React.createElement("img", {width: "240", height: "180", src: item.screenshot.url})
						)
					))
			}, this)
			

			return (
				React.createElement("div", {id: "lander_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, this.props.title)
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        items
	                    )
	                )
				)
			)
		} else {
			return React.createElement("div", null)
		}
		
	}

});

module.exports = ExternalPanel;

},{"../../mixins/async-isomorphic-mixin.js":402,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"react":235,"react-async":12,"react-router-component":22}],342:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Loading = require('../xhr/app-loading.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var log = require('loglevel')
var Pagination = require('../control/app-pagination.jsx')
var UserOverlay = require('../../utils/userOverlay.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')

var InlineLanderPanel = React.createClass({displayName: "InlineLanderPanel",

	mixins: [NavigatableMixin],

	advertiserChange: function(e) {
		this.setState({advertiser_lander_check: !this.state.advertiser_lander_check, page: 0})
	},

	affiliateChange: function(e) {
		this.setState({affiliate_lander_check: !this.state.affiliate_lander_check, page: 0})
	},

	getInitialState: function () {
	    return {
	    	advertiser_lander_check: true,
	        affiliate_lander_check: true,
	        perPage: 20,
	        page: 0
	      };
	},

	landerClick: function(url){
		window._modalInternal = true
		this.navigate(url)
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	render: function() {

		console.log("LanderPanel", this.state)

		var title = 'Landers'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.props.items.length == 0){
			return (
				React.createElement("div", {id: "lander-panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, title)
	                    ), 
	                    React.createElement("div", {className: "panel-body text-left"}, 
					        "No landers found."
						)
	                )
				)
			)
		}

		var selected = []

		this.props.items.forEach(function(item, i){
			if (item.type == 'advertiser' && !this.state.advertiser_lander_check){
				return
			}
			if (item.type == 'affiliate' && !this.state.affiliate_lander_check){
				return
			}
			selected.push(item)
		}, this)

		var items = []

		var width = 240
		var height = 180

		if (this.props.width !== undefined){
			width = this.props.width
		}

		if (this.props.height !== undefined){
			height = this.props.height
		}

		var start = this.state.page * this.state.perPage
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= selected.length){
				break;
			}
			var item = selected[i]
			var path_part = "lander"
			if (item.type == 'advertiser'){
				var indicatorBg = 'bg-success'
				var indicatorTitle = 'Advertiser Lander'
				var path_part = "lander"
			} else if (item.type == 'affiliate') {
				var indicatorBg = 'bg-primary'
				var indicatorTitle = 'Affiliate Lander'
				var path_part = "external"
			}
			var indicatorCls = {
				"position":"absolute", 
				"bottom": "10px", 
				"left": "10px", 
				"height": "10px", 
				"width": "10px"
			}

			var indicator = (React.createElement("div", {className: indicatorBg, style: indicatorCls, "data-toggle": "tooltip", title: indicatorTitle}))
			items.push(
				React.createElement("div", {key: i, style: {'boxShadow': '0 1px 2px #aaa', "position": "relative"}, className: "pull-left m-r-30 m-b-30"}, 
					React.createElement("a", {onClick: this.landerClick.bind(this, this.props.base_path + path_part + "/" + item.hash + "/")}, 
						React.createElement("img", {width: width, height: height, src: item.screenshot.url})
					), 
					indicator
				))
		}

		if (items.length == 0){
			items = 'No landers found.'
		}

		
		
		log.debug(this.state)

		return (
			React.createElement("div", {id: "lander-panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent"}, 	                	
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, title)		                        
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement(UserOverlay, null, 
	                    	React.createElement("div", {className: "row"}, 
	                    		React.createElement("div", {className: "col-xs-12"}, 
	                    			React.createElement("div", null, 
			                        	React.createElement("div", {className: "checkbox check-success checkbox-circle"}, 
				                        	React.createElement("label", null, 
											    React.createElement("input", {
											    	type: "checkbox", 
											    	defaultChecked: this.state.advertiser_lander_check, 
											    	ref: "advertiser_lander_check", 
											    	onChange: this.advertiserChange}), 
											    "Advertiser Landers"
											)
										), 
										React.createElement("div", {className: "checkbox check-primary checkbox-circle"}, 
											React.createElement("label", null, 
											    React.createElement("input", {
											    	type: "checkbox", 
											    	defaultChecked: this.state.affiliate_lander_check, 
											    	ref: "affiliate_lander_check", 
											    	onChange: this.affiliateChange}), 
											    "Affiliate Landers"
											)
										)
			                        )
	                    		)
	                    	), 
	                    	React.createElement("div", {className: "row"}, 
	                    		React.createElement("div", {className: "col-xs-12"}, 
	                        		items
	                        	)
	                        ), 
	                        React.createElement("div", {className: "row"}, 
	                        	React.createElement("div", {className: "col-xs-12"}, 
	                        		React.createElement(Pagination, {		
		                        		page: this.state.page, 
		                        		total: selected.length, 
		                        		perPage: this.state.perPage, 
		                        		pageClick: this.pageClick})
	                        	)		                    	
		                    )
	                    )
                    )	                    
                )
			)
		)		
	}

});

module.exports = InlineLanderPanel;

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-async":12,"react-router-component":22}],343:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin


var Lander = React.createClass({displayName: "Lander",

	mixins: [NavigatableMixin],

	onClick: function(url){
		if (this.props.navigate !== undefined){
			this.props.navigate(url)
		} else {
			this.navigate(url)
		}
	},

	render: function() {
		return (
			React.createElement("div", {style: {cursor: 'pointer', 'boxShadow': '0 1px 2px #aaa', "position": "relative"}, className: "pull-left m-r-30 m-b-30"}, 
				React.createElement("a", {onClick: this.onClick.bind(this, this.props.href)}, 
					React.createElement("img", {width: "240", height: "180", className: "fade-in lazyload", "data-src": this.props.screenshot.url})
				)
			)
		);
	}

});

module.exports = Lander;

},{"react":235,"react-router-component":22}],344:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Loading = require('../xhr/app-loading.jsx')
var AdGrid = require('../ad/app-adgrid.jsx')
var AdBuilder = require('../ad/app-adbuilder.jsx')
var log = require('loglevel');

var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var LanderAdGrid = React.createClass({displayName: "LanderAdGrid",

	render: function() {

		if (this.props.remote.loading){
			return (
				React.createElement("div", {id: "landerad_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Ads"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
					        React.createElement(Loading, null)
						)
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (
				React.createElement("div", {id: "landerad_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Ads"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
					        "No ads found for this lander."
						)
	                )
				))
		}
		
		// initial a stack for ads, to allow for next and previous
		if (window._adStack === undefined){
			window._adStack = {}
		}
		var items = []
		var stack = []
		var items = this.props.remote.items.map(function(item, i){
			if (item.resources.length > 0){
				item.resources.forEach(function(resource){
					if (resource.width == null || resource.height == null){
						throw 'Invalid ad data. Width or Height of resource is null'
					}
				});
			} else if (item.titles.length == 0 && item.descriptions.length == 0){
				throw 'Invalid ad data. Ad must have at least one resource, title or description'
			}
			item.key = i
			ad = AdBuilder(item, this.props.base_path + 'ad/' + item['hash'] + '/' + window.location.search, this.props.navigate)
			stack.push(item['hash'])
			return ad
		}, this);	
		// assign item hashes to stack	
		//window._adStack[this.props.host_type + '-' + this.props.host_hash] = stack
		log.debug('app-landeradgrid', 'items from adbuilder', items)	
		return (
			React.createElement("div", {id: "landerad_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Ads"), 
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {id: "lander-ad-panel-body", className: "panel-body"}, 
				        React.createElement(AdGrid, {column_width: "120"}, 
							items
						)
					)
                )
			)
		);
	}

});

module.exports = withAsyncState(LanderAdGrid);

},{"../../utils/withAsyncState.jsx":416,"../ad/app-adbuilder.jsx":272,"../ad/app-adgrid.jsx":276,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235}],345:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx');
var Loading = require('../xhr/app-loading.jsx')
var Pagination = require('../control/app-pagination.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var Link = require('react-router-component').Link

var LanderAffiliatePanel = React.createClass({displayName: "LanderAffiliatePanel",

	getInitialState: function(){
		var perPage = 20
		if (this.props.perPage !== undefined){
			perPage = this.props.perPage
		}
		return {page: 0, perPage: perPage}
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "affiliate_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Affiliate"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "mediator_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Affiliate"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        "No offer advertiser identified."
	                    )
	                )
				))
		}

		var total = this.props.remote.count

		items = []
		this.props.remote.items.forEach(function(item, i){
			var chain = []
			for (var x = item.links.length - 1; x >= 0; x--){
				var link = []
				if (chain.length > 0){
					link.push(' > ')
				}
				if (x != 0){
					// mediator
					link.push(React.createElement(Link, {href: '/mediator/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
				} else {
					// advertiser
					link.push(React.createElement(Link, {href: '/advertiser/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
				}
				chain = chain.concat(link)
			}
			items.push(React.createElement("div", {key: i}, chain))
		}, this)

		var title = 'Affiliate'
		if (this.props.title){
			var title = this.props.title
		}

		return (
			React.createElement("div", {id: "mediator_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, title), 	
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement("div", {className: "row"}, 
                    		React.createElement("div", {className: "col-xs-12"}, 
                    			React.createElement("table", {className: "col-xs-12"}, 
                    				React.createElement("thead", null, 
                    					React.createElement("tr", null, 
                    						React.createElement("td", null), 
                    						React.createElement("td", null)
                    					)
                    				), 
                    				React.createElement("tbody", null, 
	                        			items
	                        		)
                        		)
                        	)
                        ), 
                        React.createElement("div", {className: "row p-t-20"}, 
                        	React.createElement("div", {className: "col-xs-12"}, 
                        		React.createElement(Pagination, {
                        			page: this.state.page, 
                        			perPage: this.state.perPage, 
                        			pageClick: this.pageClick, 
                        			total: this.props.remote.items.length})	
                        	)
                        )
                    )
                )
			)
		)

	}

});

module.exports = withAsyncState(LanderAffiliatePanel);

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],346:[function(require,module,exports){
var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var role = require('../../utils/role.js')
var PubSub = require('pubsub-js')

var LanderDetail = React.createClass({displayName: "LanderDetail",

	visitClick: function(item){
		// duplicate implementation in LanderFeatue (app-landerfeature.jsx)
		if (!role.is_pro()){
			console.log('publish pro-required')
			PubSub.publish('pro-required', {view: 'lander'})
		} else {
			console.log('publish visit-lander', item)
			PubSub.publish('visit-lander', item)
		}
	},

	render: function() {

		if (this.props.remote.loading){
			return (
				React.createElement("div", {className: "panel"}, 
					React.createElement("div", {className: "panel-heading"}, 
						React.createElement("div", {className: "panel-title"}, 
							"Lander"
						)						
					)
				)
			)
		}

		var header = "Lander"
		var screenshot = null
		if (this.props.remote.screenshot !== undefined){
			screenshot = this.props.remote.screenshot
		}
		var advertiserLinks = []
		if (this.props.remote.advertiser !== undefined && this.props.remote.advertiser){
			this.props.remote.advertiser.forEach(function(advertiser){
				advertiserLinks.push(
					React.createElement("span", null, React.createElement(Link, {href: "/advertiser/" + url_host_type(advertiser.host_type) + '/' + advertiser.hash + '/'}, 
						advertiser.host_name + '.'
					))
				)
			})
		}
		if (role.is_pro()){
			if (this.props.remote.url !== undefined && this.props.remote.url){
				var landerAccess = [(
					React.createElement("div", null, 		
	            		React.createElement("div", {className: "btn btn-success", onClick: this.visitClick.bind(this, this.props.remote)}, React.createElement("span", {className: "fa fa-external-link"}), " Visit Lander")		
	            	)
	            )]			
			} else {
				var landerAccess = [(
					React.createElement("div", null, 		
	            		React.createElement("div", {className: "btn disabled"}, React.createElement("span", {className: "fa fa-external-link"}), " Visit Lander")		
	            	)
	            ), (React.createElement("div", null, "Sorry, Lander not accessible."))]
			}
		} else {
			var landerAccess = [(
				React.createElement("div", null, 		
            		React.createElement("div", {className: "btn btn-success", onClick: this.visitClick.bind(this, this.props.remote)}, React.createElement("span", {className: "fa fa-external-link"}), " Visit Lander")		
            	)
            )]	
		}
		var screenshot = (			
			React.createElement("img", {className: "m-t-10 spinner lazyload img-responsize", src: this.props.remote.screenshot.url})
		)
		return (
		React.createElement("div", {className: "panel"}, 
			React.createElement("div", {className: "panel-heading"}, 
				React.createElement("div", {className: "panel-title"}, 
					"Lander"
				)						
			), 
			React.createElement("div", {className: "panel-body"}, 
				advertiserLinks, 
				landerAccess, 
				screenshot
			)
		)
		)
	}

});

module.exports = withAsyncState(LanderDetail);

},{"../../utils/role.js":412,"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"pubsub-js":10,"react":235,"react-router-component":22}],347:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var log = require('loglevel');
//
var Next = require('../control/app-next.jsx')
var Previous = require('../control/app-previous.jsx')

/*
DEPRECATED - along with lander modal using url file modal instead
*/

var LanderFeature = React.createClass({

	mixins: [NavigatableMixin],

	displayName: 'LanderFeature',

	getInitialState: function() {
		return {ready: false}
	},

	componentDidMount: function() {
        setTimeout(function(){
        	this.setState({ready: true})
        }.bind(this), 500)
    },

	//make sure this rerenders on resize 
	render: function() {
		if (this.props.remote.loading){
			return (
				React.createElement("div", {id: "lander-feature", className: "p-t-10 p-b-10"}, 
					React.createElement(Loading, null)
				))
		}
		if (!this.state.ready){
			return (
				React.createElement("div", {id: "lander-feature", className: "p-t-10 p-b-10"}, 
					React.createElement(Loading, null)
				))
		}
		
		var featureWidth = $('#lander-feature').width()
		var maxWidth = 500
		if (featureWidth < maxWidth){
			maxWidth = featureWidth
		}
		if (this.props.remote.screenshot.width > maxWidth){
			var newWidth = maxWidth
			var newHeight = (this.props.remote.screenshot.height / this.props.remote.screenshot.width) * newWidth
		} else {
			var newHeight = ad.props.height
			var newWidth = ad.props.width
		}

		var marginLeft = (featureWidth - newWidth) / 2

		var cls = "spinner lazyload"
		return (
			React.createElement("div", {id: "lander-feature", style: {height: newHeight}, className: "relative"}, 
				React.createElement("img", {style: {'position':'absolute', 'left': marginLeft + 'px'}, 
				width: newWidth, height: newHeight, className: cls, "data-src": this.props.remote.screenshot.url})
			)
		)

	}

});

module.exports = withAsyncState(LanderFeature);

},{"../../utils/withAsyncState.jsx":416,"../control/app-next.jsx":320,"../control/app-previous.jsx":323,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],348:[function(require,module,exports){
var React = require('react');
var Link = require('react-router-component').Link

var LanderGridItem = React.createClass({displayName: "LanderGridItem",

	onClick: function(url_file_hash){
		this.props.onClick(url_file_hash);
	},

	visitClick: function(url){
		this.props.visitClick(url);
	},

	render: function() {

		var landerItemStyle = {
			boxShadow: '0 1px 2px #aaa', 
			position: 'relative',
			padding: '10px',
			backgroundColor: 'white',

		}

		var metaStyle = {
			paddingTop: '12px',
			paddingLeft: '10px',
			color: '#777',
			lineHeight: '20px'
		}

		var countries = []
		if (this.props.item.meta !== undefined){
			if (this.props.item.meta.countries !== undefined){
				var countries = this.props.item.meta.countries.split(',')
				if (countries.length <= 7){
					countries = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-globe p-r-10", title: "Target countries"}), countries.join(' ')]				
				} else {
					countries = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-globe p-r-10", title: "Target countries"}), React.createElement("span", {style: {cursor: 'pointer'}, title: countries.join(' ')}, countries.length, " countries")]				
				}
			}
		}

		var lastSeen = []
		if (this.props.item.meta !== undefined){
			if (this.props.item.meta.last_seen !== undefined){
				lastSeen = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-eye p-r-10", title: "Last seen"}), 'Last seen ' + this.props.item.meta.last_seen]				
			}
		}

		var dimensions = []
		if (this.props.item.meta !== undefined){
			if (this.props.item.meta.dimensions !== undefined){
				dimensions = (
					React.createElement("div", {style: {display: 'inline-block', marginRight: '20px'}}, 
						React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-arrows-alt p-r-10", title: "Dimensions"}), 
						this.props.item.meta.dimensions
					)
				)				
			}
		}

		var frequency = []
		if (this.props.item.meta !== undefined){
			if (this.props.item.meta.frequency !== undefined){
				frequency = (
					React.createElement("div", {style: {display: 'inline-block'}}, 
						React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-line-chart p-r-10", title: "Frequency"}), 
						this.props.item.meta.frequency
					)
				)
			}
		}

		var age = []
		if (this.props.item.meta !== undefined){
			if (this.props.item.meta.age !== undefined){
				age = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-clock-o p-r-10", title: "Age"}), this.props.item.meta.age]				
			}
		}

		var sources = []
		if (this.props.item.meta != undefined){
			if (this.props.item.meta.sources !== undefined){				
				sources = [React.createElement("span", {style: {color: '#a5a5a5'}, className: "fa fa-exchange p-r-10", title: "Traffic source"})]	
				if (this.props.item.meta.sources.length > 2){
					sources.push(this.props.item.meta.sources.length + ' traffic sources')
				} else {		
					this.props.item.meta.sources.forEach(function(source){
						if (source.slug){
							var source_link = '/traffic-source/' + source.slug + '/'
						} else {
							var source_link = '/traffic-source/' + source.hash + '/'
						}						
						var name = source.name.substr(0,20)	
						sources.push(React.createElement(Link, {style: {color: '#777'}, className: "p-r-5", href: source_link}, name))
					})
				}
			}
		}

		var advertiser = ''
		if (this.props.show_advertisers !== undefined && this.props.show_advertisers){
			advertiser = React.createElement("div", null, this.props.item.meta.advertisers)
		}

		return (
			React.createElement("div", {style: landerItemStyle, className: "pull-left m-r-10 m-b-10"}, 
				React.createElement("div", {style: {height: this.props.height, width: this.props.width, textAlign: 'center'}}, 
				React.createElement("a", {onClick: this.onClick.bind(this, this.props.item.url_file_hash)}, 
					React.createElement("img", {style: {border: '1px solid #F5F5F5', maxWidth: '100%', maxHeight: '100%'}, src: this.props.item.screenshot.url})
				)
				), 
				React.createElement("div", {className: "small", style: metaStyle}, 
					React.createElement("div", null, countries), 
					React.createElement("div", {className: "clear-fix"}, 
						dimensions, 
						frequency
					), 
					React.createElement("div", {style: {clear: 'both'}}), 
					React.createElement("div", null, age), 
					React.createElement("div", null, lastSeen), 			
					React.createElement("div", null, sources), 
					React.createElement("div", null, 
						React.createElement("span", {className: "fa fa-external-link p-r-10", title: "Visit Lander"}), 
						React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.visitClick.bind(this, this.props.item)}, "Visit Lander"), 
						React.createElement("span", {className: "fa fa-info p-l-30 p-r-10", title: "More Info"}), 
						React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.onClick.bind(this, this.props.item.url_file_hash)}, "More Info")
					), 
					advertiser
				)
			)
		);
	}

});

module.exports = LanderGridItem;

},{"react":235,"react-router-component":22}],349:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Loading = require('../xhr/app-loading.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var log = require('loglevel')
var Pagination = require('../control/app-pagination.jsx')
var UserOverlay = require('../../utils/userOverlay.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')

var LanderPanel = React.createClass({displayName: "LanderPanel",

	mixins: [NavigatableMixin],

	advertiserChange: function(e) {
		this.setState({advertiser_lander_check: !this.state.advertiser_lander_check, page: 0})
	},

	affiliateChange: function(e) {
		this.setState({affiliate_lander_check: !this.state.affiliate_lander_check, page: 0})
	},

	getInitialState: function () {
	    return {
	    	advertiser_lander_check: true,
	        affiliate_lander_check: true,
	        perPage: 20,
	        page: 0
	      };
	},

	landerClick: function(url){
		window._modalInternal = true
		this.navigate(url)
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	render: function() {

		console.log("LanderPanel", this.state)

		var title = 'Landers'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "lander-panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, title)
	                    ), 
	                    React.createElement("div", {className: "panel-body p-b-20 p-t-20"}, 
					        React.createElement(Loading, null)
						)
	                )
				))
		}
		if (this.props.remote.items.length == 0){
			return (
				React.createElement("div", {id: "lander-panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, title)
	                    ), 
	                    React.createElement("div", {className: "panel-body text-left"}, 
					        "No landers found."
						)
	                )
				)
			)
		}

		var selected = []

		this.props.remote.items.forEach(function(item, i){
			if (item.type == 'advertiser' && !this.state.advertiser_lander_check){
				return
			}
			if (item.type == 'affiliate' && !this.state.affiliate_lander_check){
				return
			}
			selected.push(item)
		}, this)

		var items = []

		var width = 240
		var height = 180

		if (this.props.width !== undefined){
			width = this.props.width
		}

		if (this.props.height !== undefined){
			height = this.props.height
		}

		var start = this.state.page * this.state.perPage
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= selected.length){
				break;
			}
			var item = selected[i]
			var path_part = "lander"
			if (item.type == 'advertiser'){
				var indicatorBg = 'bg-success'
				var indicatorTitle = 'Advertiser Lander'
				var path_part = "lander"
			} else if (item.type == 'affiliate') {
				var indicatorBg = 'bg-primary'
				var indicatorTitle = 'Affiliate Lander'
				var path_part = "external"
			}
			var indicatorCls = {
				"position":"absolute", 
				"bottom": "10px", 
				"left": "10px", 
				"height": "10px", 
				"width": "10px"
			}

			//var indicator = (<div className={indicatorBg} style={indicatorCls} data-toggle="tooltip" title={indicatorTitle}></div>)
			items.push(
				React.createElement("div", {key: i, style: {'boxShadow': '0 1px 2px #aaa', "position": "relative"}, className: "pull-left m-r-30 m-b-30"}, 
					React.createElement("a", {onClick: this.landerClick.bind(this, this.props.base_path + path_part + "/" + item.hash + "/")}, 
						React.createElement("img", {width: width, height: height, src: item.screenshot.url})
					)
				))
		}

		if (items.length == 0){
			items = 'No landers found.'
		}

		
		
		log.debug(this.state)

		return (
			React.createElement("div", {id: "lander-panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent"}, 	                	
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, title)		                        
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement(UserOverlay, null, 
                    		/*
	                    	<div className="row">
	                    		<div className="col-xs-12">
	                    			<div>
			                        	<div className="checkbox check-success checkbox-circle">
				                        	<label>
											    <input 
											    	type="checkbox" 
											    	defaultChecked={this.state.advertiser_lander_check} 
											    	ref="advertiser_lander_check"
											    	onChange={this.advertiserChange} />
											    Advertiser Landers
											</label>
										</div>
										<div className="checkbox check-primary checkbox-circle">
											<label>
											    <input 
											    	type="checkbox" 
											    	defaultChecked={this.state.affiliate_lander_check} 
											    	ref="affiliate_lander_check"
											    	onChange={this.affiliateChange} />
											    Affiliate Landers
											</label>
										</div>
			                        </div>
	                    		</div>
	                    	</div>
	                    	*/ 
	                    	React.createElement("div", {className: "row"}, 
	                    		React.createElement("div", {className: "col-xs-12"}, 
	                        		items
	                        	)
	                        ), 
	                        React.createElement("div", {className: "row"}, 
	                        	React.createElement("div", {className: "col-xs-12"}, 
	                        		React.createElement(Pagination, {		
		                        		page: this.state.page, 
		                        		total: selected.length, 
		                        		perPage: this.state.perPage, 
		                        		pageClick: this.pageClick})
	                        	)		                    	
		                    )
	                    )
                    )	                    
                )
			)
		)		
	}

});

module.exports = withAsyncState(LanderPanel);

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-async":12,"react-router-component":22}],350:[function(require,module,exports){
var React = require('react');

var VisitLander = React.createClass({displayName: "VisitLander",

	render: function() {
		console.log('visit-lander', this.props)

		countryMessage = ''
		if (this.props.meta.countries){
			var countryMessage = (
				React.createElement("p", null, 
                	"For the most accurate result it is recommended that you visit with an IP address in ", this.props.meta.countries	
                )
            )
		}
		if (this.props.fullsize_screenshot){
			var fullsize = React.createElement("a", {href: this.props.fullsize_screenshot.url, target: "_blank"}, "View")
		} else {
			var fullsize = React.createElement("span", null, "Not available.")
		}
		return (
			React.createElement("div", null, 
                React.createElement("div", {style: {wordWrap: 'break-word', maxWidth: '600px'}, className: "m-t-10"}, React.createElement("strong", null, "Lander Url: ", React.createElement("a", {href: this.props.url, target: "_blank"}, this.props.url, " ", React.createElement("span", {className: "fa fa-external-link"})))), 
                React.createElement("div", {className: "m-t-10"}, "Fullsize Screenshot: ", fullsize), 
                React.createElement("p", {className: "m-t-10"}, 
                	"Note: This is an externally hosted lander we cannot guarantee the content has not changed or is still accessible"
                ), 
                countryMessage
            )
		);
	}

});

module.exports = VisitLander;

},{"react":235}],351:[function(require,module,exports){
var React = require('react');

/*
	List with searching and pagination
	- props: 
		- itemElement: react class that to render items
		- items: array of data props for itemElement
			- textIndex (optional): text representation of item
		- filterText (optional): text to filter items by
*/
var List = React.createClass({displayName: "List",

	render: function() {

		if (this.props.items !== undefined){

			var filterText = this.props.filterText === undefined ? false : this.props.filterText

			var children = []
			this.props.items.forEach(function(item, i){
				if (item.textIndex !== undefined && filterText != false && filterText != ''){
					//if there is a textIndex and filterText is set
					//then filter items based on textIndex
					if (item.textIndex.toLowerCase().indexOf(filterText.toLowerCase()) == -1) return false
				}
				item['key'] = i
				item['i'] = i
				children.push(React.createElement(this.props.itemElement, React.__spread({},  item)))
			}.bind(this))
			if (children.length > 0){
				return (
					React.createElement("div", null, 
						children
					)
				);
			} else {
				if (this.props.empty_text !== undefined){
					return (
						React.createElement("div", {className: "text-center m-t-20 m-b-20"}, this.props.empty_text)
					)
				} else {
					return (
						React.createElement("div", {className: "text-center m-t-20 m-b-20"}, "No results")
					)
				}
				
			}			
		} else {
			return (
				React.createElement("div", null)
			);
		}
	}

});

module.exports = List;

},{"react":235}],352:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var Loading = require('../xhr/app-loading.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var validateRelation = require('../../utils/validate-relation.js')
var url_host_type = require('../../utils/url-host-type.js')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var AdMediatorPanel = React.createClass({displayName: "AdMediatorPanel",

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "mediator_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Mediators"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "mediator_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Mediators"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        "No mediators found for this ad."
	                    )
	                )
				))
		}

		items = []
		this.props.remote.items.forEach(function(item, i){
			var chain = []
			for (var x = 0; x < item.links.length; x++){
				var link = []
				if (chain.length > 0){
					link.push(' > ')
				}
				if (x != item.links.length - 1){
					// mediator
					link.push(React.createElement(Link, {href: '/mediator/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
				} else {
					// advertiser
					link.push(React.createElement(Link, {href: '/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
				}
				chain = chain.concat(link)
			}
			items.push(React.createElement("div", {key: i}, chain))
		}, this)

		var panelCls = ""
		if (this.props.panelCls !== undefined){
			panelCls = this.props.panelCls
		}

		return (
			React.createElement("div", {id: "mediator_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Mediators"), 	
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                        items
                    )
                )
			)
		)

		
	}

});

module.exports = withAsyncState(AdMediatorPanel);

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"react":235,"react-async":12,"react-router-component":22}],353:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var LanderPanel = require('../lander/app-landerpanel.jsx')
var HostAdGrid = require('../host/app-hostadgrid.jsx')
var PublisherPanel = require('../publisher/app-publisherpanel.jsx')
var AdvertiserListPanel = require('../advertiser/app-advertiserlistpanel.jsx')

var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')

var log = require('loglevel')

var Mediator = React.createClass({displayName: "Mediator",

	mixins: [NavigatableMixin],

	render: function() {

		// name the props
		var host_type = this.props._[0]
		var host_hash = this.props._[1]


		if (this.props.remote.loading){
			var inner = React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		} else {

			

			log.debug('app-mediator props', this.props, this.props._[1], this.props._)

			var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : '/' + host_type + '/'+ host_hash + '/', name: this.props.remote.host_name, className: 'active'}
			]

			var inner = (React.createElement("div", {className: "inner"}, 
	                    	React.createElement(Breadcrumb, {links: crumb_links}), 
	                        React.createElement("div", {className: "row"}, 
	                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
	                            
	                                React.createElement("div", {className: "panel panel-transparent"}, 
	                                    React.createElement("div", {className: "panel-heading"}, 
	                                        React.createElement("div", {className: "panel-title"}, "Mediator")
	                                    ), 
	                                    React.createElement("div", {className: "panel-body"}, 
	                                        React.createElement("h3", {key: "title"}, this.props.remote.host_name)

	                                    )
	                                )
	                               
	                            )
	                            
	                        )
	                    ))
		}
		return (
			React.createElement("div", null, 
	            React.createElement("div", {className: "jumbotron"}, 
	                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                    inner
	                )
	            ), 
	            
	            React.createElement("div", {className: "panels"}, 
	            	React.createElement("div", {className: "container-fluid "}, 
		            	React.createElement("div", {className: "row"}, 
		            		React.createElement("div", {className: "col-md-6"}, 
			            		React.createElement(PublisherPanel, {
										panelCls: "bg-white m-b-0", 
						        		async_path: "/mediator/" + host_type + "/" + host_hash + "/publisher/panel", 
						        		base_path: "/mediator/" + host_type + "/" + host_hash + "/"})
						    ), 
						    React.createElement("div", {className: "col-md-6"}, 
			            		React.createElement(AdvertiserListPanel, {
										panelCls: "bg-white m-b-0", 
						        		async_path: "/mediator/" + host_type + "/" + host_hash + "/advertiser/panel", 
						        		base_path: "/mediator/" + host_type + "/" + host_hash + "/"})
						    )
		            	)
	            	), 
	            	React.createElement(HostAdGrid, {
							key: "host-ad-grid", 
							title: name, 
							panelCls: "container-fluid ", 
							host_type: host_type, 
							host_hash: host_hash, 
							async_path: "/mediator/" + host_type + "/" + host_hash + "/ad/panel", 
							base_path: "/mediator/" + host_type + "/" + host_hash + "/"}), 

					React.createElement(LanderPanel, {
							key: "lander-panel", 
							title: "Landers", 
							panelCls: "container-fluid ", 
							host_type: host_type, 
							host_hash: host_hash, 
							async_path: "/mediator/" + host_type + "/" + host_hash + "/lander/panel", 
							base_path: "/mediator/" + host_type + "/" + host_hash + "/"}), 

					React.createElement(LanderPanel, {
							key: "external-panel", 
							title: "Incoming Landers", 
							panelCls: "container-fluid ", 
							host_type: host_type, 
							host_hash: host_hash, 
							async_path: "/mediator/" + host_type + "/" + host_hash + "/external/panel", 
							base_path: "/mediator/" + host_type + "/" + host_hash + "/"})
				)

			)

		);
	}

});

module.exports = withAsyncState(Mediator);

},{"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserlistpanel.jsx":299,"../breadcrumb/app-breadcrumb.jsx":311,"../host/app-hostadgrid.jsx":336,"../lander/app-landerpanel.jsx":349,"../publisher/app-publisherpanel.jsx":384,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],354:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var Link = require('react-router-component').Link

var MediatorListPanel = React.createClass({displayName: "MediatorListPanel",

	getInitialState: function(){
		var perPage = 20
		if (this.props.perPage !== undefined){
			perPage = this.props.perPage
		}
		return {page: 0, perPage: perPage}
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	externalClick: function(url){
		window.open(url, "_blank")
	},

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "mediator_list_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Top Mediators"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "mediator_list_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Top Mediators"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        "No mediators found."
	                    )
	                )
				))
		}

		var total = this.props.remote.total

		var items = []
		
		var start = this.state.page * this.state.perPage
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= this.props.remote.items.length){
				break
			}
			var item = this.props.remote.items[i]

			if (item.count !== undefined){
				var percent = Math.ceil(item.count / total * 100)
				var progressBar = (React.createElement("td", {className: "col-xs-3"}, 
						React.createElement("div", {className: "progress no-margin"}, 
							React.createElement("div", {className: "progress-bar progress-bar-success", "data-percentage": percent + '%', style: {width: percent + '%'}})
						)
					))
			}			

			var mediatorLink = React.createElement(Link, {href: "/mediator/" + url_host_type(item.host_type) + '/' + item.hash + '/'}, item.host_name)

			items.push(
				React.createElement("tr", {key: i}, 	
					progressBar, 																
					React.createElement("td", {className: "no-padding col-xs-12"}, 
						mediatorLink, " ", React.createElement("span", {style: {cursor: 'pointer'}, className: "fs-10 fa fa-external-link", onClick: this.externalClick.bind(this, "http://" + item.domain)})
					)
						
				)					
			)
		}

		var panelCls = ""
		if (this.props.panelCls !== undefined){
			panelCls = this.props.panelCls
		}

		return (
			React.createElement("div", {id: "mediator_list_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Top Mediators"), 	
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement("div", {className: "row"}, 
                    		React.createElement("div", {className: "col-xs-12"}, 
                    			React.createElement("table", {className: "col-xs-12"}, 
                    				React.createElement("thead", null, 
                    					React.createElement("tr", null, 
                    						React.createElement("td", null), 
                    						React.createElement("td", null)
                    					)
                    				), 
                    				React.createElement("tbody", null, 
	                        			items
	                        		)
                        		)
                        	)
                        ), 
                        React.createElement("div", {className: "row p-t-20"}, 
                        	React.createElement("div", {className: "col-xs-12"}, 
                        		React.createElement(Pagination, {
                        			page: this.state.page, 
                        			perPage: this.state.perPage, 
                        			pageClick: this.pageClick, 
                        			total: this.props.remote.items.length})	
                        	)
                        )
                    )
                )
			)
		)		
	}
});

module.exports = withAsyncState(MediatorListPanel);

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],355:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var Link = require('react-router-component').Link
/*
	Lists mediators sorted by occurence
*/

var MediatorPanel = React.createClass({displayName: "MediatorPanel",

	getInitialState: function(){
		var perPage = 20
		if (this.props.perPage !== undefined){
			perPage = this.props.perPage
		}
		return {page: 0, perPage: perPage}
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	externalClick: function(url){
		window.open(url, "_blank")
	},

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "mediator_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Mediators"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "mediator_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Mediators"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        "No mediators found."
	                    )
	                )
				))
		}

		var total = this.props.remote.count

		items = []
		this.props.remote.items.forEach(function(item, i){
			var chain = []
			for (var x = 0; x < item.links.length; x++){
				var link = []
				if (chain.length > 0){
					link.push(' > ')
				}
				if (x != item.links.length - 1){
					// mediator
					link.push(React.createElement(Link, {href: '/mediator/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
				} else {
					// advertiser
					link.push(React.createElement(Link, {href: '/advertiser/' + url_host_type(item.links[x]['host_type']) + '/' + item.links[x]['host_hash'] + '/'}, item.links[x]['host_name']))
				}
				chain = chain.concat(link)
			}
			items.push(React.createElement("div", {key: i}, chain))
		}, this)

		var panelCls = ""
		if (this.props.panelCls !== undefined){
			panelCls = this.props.panelCls
		}

		var title = 'Inbound Tracking'
		if (this.props.title){
			title = this.props.title
		}

		return (
			React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, title), 	
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement("div", {className: "row"}, 
                    		React.createElement("div", {className: "col-xs-12"}, 
                    			React.createElement("table", {className: "col-xs-12"}, 
                    				React.createElement("thead", null, 
                    					React.createElement("tr", null, 
                    						React.createElement("td", null), 
                    						React.createElement("td", null)
                    					)
                    				), 
                    				React.createElement("tbody", null, 
	                        			items
	                        		)
                        		)
                        	)
                        ), 
                        React.createElement("div", {className: "row p-t-20"}, 
                        	React.createElement("div", {className: "col-xs-12"}, 
                        		React.createElement(Pagination, {
                        			page: this.state.page, 
                        			perPage: this.state.perPage, 
                        			pageClick: this.pageClick, 
                        			total: this.props.remote.items.length})	
                        	)
                        )
                    )
                )
			)
		)		
	}
});

module.exports = withAsyncState(MediatorPanel);

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],356:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')

var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var AdvertiserOfferPanel = require('../advertiser/app-advertiserofferpanel.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var AppOfferPanel = require('../offer/app-appofferpanel.jsx')
var Jumbotron = require('../jumbotron.jsx')
var GooglePlay = React.createClass({displayName: "GooglePlay",

	render: function() {

		var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : '/mobile/google/', name: 'Google Play', className: 'active'}
			]
		return (
			React.createElement("div", null, 
	            React.createElement(Jumbotron, {crumb_links: crumb_links, title: "Google Play"}), 
	            React.createElement("div", {className: "container-fluid "}, 
					React.createElement(AppOfferPanel, {async_path: "/mobile/google/", panelCls: "container-fluid bg-white"})
				)
			)
		);
	}

});

module.exports = GooglePlay;

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserofferpanel.jsx":300,"../breadcrumb/app-breadcrumb.jsx":311,"../jumbotron.jsx":337,"../offer/app-appofferpanel.jsx":375,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"react":235,"react-async":12,"react-router-component":22}],357:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')

var AdBlockModal = React.createClass({displayName: "AdBlockModal",

    getInitialState: function(){
        return {blocked: false}
    },

    componentDidMount: function(){
        PubSub.subscribe( 'adBlocked', function(msg, data){
            this.setState({blocked: true})
        }.bind(this));
    },

    componentDidUpdate: function(){
        if (this.state.blocked == true){
            $('#modalAdBlock').modal('show')
        }
    },

    render: function() {
        if (this.state.blocked == true){
            return (
                React.createElement("div", {className: "modal fade slide-up disable-scroll", id: "modalAdBlock", tabindex: "-1", role: "dialog", "aria-labelledby": "modalSlideUpLabel", "aria-hidden": "false"}, 
                    React.createElement("div", {className: "modal-dialog "}, 
                        React.createElement("div", {className: "modal-content-wrapper"}, 
                        React.createElement("div", {className: "modal-content"}, 
                            React.createElement("div", {className: "modal-header clearfix text-left"}, 
                                React.createElement("h5", null, "Oops, some content could not be loaded")
                            ), 
                            React.createElement("div", {className: "modal-body"}, 
                                React.createElement("p", null, React.createElement("strong", null, "Please check your connection and refresh the page.")), 
                                React.createElement("p", null, "Ad Block might have prevent this page from fully loading. Ad Blockers are great, but not so great when researching ads. ;) Add this site to your Ad Block whitelist to continue browsing.")
                            )
                        )
                        )
                    )
                )
            );
        } else {
            return (React.createElement("div", null))
        }
        
    }
})

module.exports = AdBlockModal

},{"pubsub-js":10,"react":235}],358:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var evaluateUri = require('../../utils/evaluate-uri.js')
var log = require('loglevel');
var modalNavigate = require('./modalNavigate.js')

var AdDetail = require('../ad/app-addetail.jsx')
var AdFeature = require('../ad/app-adfeature.jsx')
var AdLanderPanel = require('../lander/app-adlanderpanel.jsx')
var PublisherPanel = require('../publisher/app-publisherpanel.jsx')
var MediatorPanel = require('../mediator/app-mediatorpanel.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var AsyncFilterLanders = require('../lander/app-asyncfilterlanders.jsx')
/**
 * AdModal display one Ad centered on the overlay. With Ad data displayed in the side bar.
 *
 */
var AdModal = React.createClass({displayName: "AdModal",

	mixins: [NavigatableMixin],

	/*

	<MediatorPanel
	 	async_path="/ad/:ad_hash/mediator/panel"
		panelCls="bg-white m-b-0" 
		ad_hash={ad_hash}
		base_path={base_path}  />

	<PublisherPanel
		async_path="/ad/:ad_hash/publisher/panel"
		panelCls="bg-master-lightest m-b-0" 
		ad_hash={ad_hash}
		base_path={base_path}  />

		<AdDetail 
						        	async_path="/ad/:ad_hash/info/"
						        	ad_hash={ad_hash}
						        	base_path={base_path} />

		*/

	render: function(){

		/*
		var base_path = evaluateUri(this.props.base_path, this.props)

		if (base_path.indexOf('/search') == 0){
			var ad_hash = this.props["_"][1]
		} else {
			var host_type = this.props["_"][0]
			var host_hash = this.props["_"][1]
			var ad_hash = this.props["_"][2]
		}

		*/

		if (this.props.ad_hash === undefined){
			throw 'Ad hash not specified.'
		}
		var ad_hash = evaluateUri(this.props.ad_hash, this.props)
		var base_path = location.pathname.substring(0, location.pathname.indexOf('ad/' + ad_hash + '/'))
		
		log.debug("AdModel render.", this.props, this.state)
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "pull-left"}, 
					React.createElement("div", {className: "modal-dialog modal-lg"}, 
					    React.createElement("div", {className: "modal-content-wrapper"}, 
					        React.createElement("div", {className: "modal-content table-block bg-master-lighter"}, 
					        	React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-label": "Close"}, React.createElement("i", {style: {fontSize: '20px'}, className: "fa fa-close"})), 
					            						       						       
					        	React.createElement(AdFeature, {
						        	async_path: "/ad/:hash/", 
					        		base_path: base_path, 
					        		hash: ad_hash, 
					        		host_type: this.props["_"][0], 
					        		host_hash: this.props["_"][1]}), 
						        

						        React.createElement(AsyncFilterLanders, {
									title: "Landers", 			
									filter_country: true, 		
									filter_platforms: true, 	
									sort: true, 
									sort_default: 'last_seen_desc', 
									async_path: "/ad/" + ad_hash + "/lander/panel", 
									base_path: base_path})

							)
				        )
				    )
				)
			)
		)
	}
});

module.exports = AdModal


},{"../../utils/evaluate-uri.js":406,"../ad/app-addetail.jsx":273,"../ad/app-adfeature.jsx":274,"../lander/app-adlanderpanel.jsx":338,"../lander/app-asyncfilterlanders.jsx":340,"../mediator/app-mediatorpanel.jsx":355,"../publisher/app-publisherpanel.jsx":384,"./modalNavigate.js":365,"loglevel":9,"react":235,"react-router-component":22}],359:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var VisitLander = require('../lander/app-visitlander.jsx')
var HelpOffers = require('../help/app-offers.jsx')
var ContentModal = React.createClass({displayName: "ContentModal",

    getInitialState: function(){
        return {view: false, data: null}
    },

    componentDidMount: function(){
        PubSub.subscribe( 'visit-lander', function(msg, data){
            this.setState({view: 'visit-lander', data: data})
        }.bind(this));
        PubSub.subscribe( 'pro-required', function(msg, data){
            this.setState({view: 'pro-required', data: data})
        }.bind(this));
        PubSub.subscribe( 'help', function(msg, data){
            console.log(msg, data)
            this.setState({view: data.view, title: data.title, data: data})
        }.bind(this));
    },

    componentDidUpdate: function(){
        if (this.state.view){
            $('#modalContent').modal('show')
        }
    },

    render: function() {
        if (this.state.view){

            if (this.state.view.indexOf('help-') == 0){
                switch (this.state.view){
                    case 'help-offers':
                        var inner = React.createElement(HelpOffers, null)
                        var title = this.state.title
                        break
                    default:
                        console.error('Missing help content')
                        $('#modalContent').modal('hide')

                }
                var content = (
                    React.createElement("div", {className: "modal-content"}, 
                        React.createElement("div", {className: "modal-header clearfix text-left"}, 
                            React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true"}, 
                              React.createElement("i", {className: "fa fa-close fs-14"})
                            ), 
                            React.createElement("h4", null, title)
                        ), 
                        React.createElement("div", {style: {maxHeight: '100%', overflow: 'auto'}, className: "modal-body"}, 
                            inner
                        )
                    )
                )
                return (
                    React.createElement("div", {className: "modal fade slide-up", id: "modalContent", tabindex: "-1", role: "dialog", "aria-labelledby": "modalSlideUpLabel", "aria-hidden": "false"}, 
                        React.createElement("div", {className: "modal-dialog "}, 
                            React.createElement("div", {className: "modal-content-wrapper"}, 
                                content
                            )
                        )
                    )
                );
            } else if (this.state.view == 'visit-lander'){
                var content = (
                    React.createElement("div", {className: "modal-content"}, 
                        React.createElement("div", {className: "modal-header clearfix text-left"}, 
                            React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true"}, 
                              React.createElement("i", {className: "fa fa-close fs-14"})
                            ), 
                            React.createElement("h5", null, "Visit Lander")
                        ), 
                        React.createElement("div", {className: "modal-body"}, 
                            React.createElement(VisitLander, React.__spread({},  this.state.data))
                        )
                    )
                )
            } else if (this.state.view == 'pro-required'){
                var content = (
                    React.createElement("div", {className: "modal-content"}, 
                        React.createElement("div", {className: "modal-header clearfix text-left"}, 
                            React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-hidden": "true"}, 
                              React.createElement("i", {className: "fa fa-close fs-14"})
                            ), 
                            React.createElement("h5", null, "Upgrade to Make Massive Pro!")
                        ), 
                        React.createElement("div", {className: "modal-body"}, 
                            React.createElement("div", {className: "m-t-10"}, 
                                React.createElement("strong", null, "Become a Make Massive Pro for unlimited access to all ads and landers.")
                            ), 
                            React.createElement("div", {className: "m-t-20"}, 
                                "Are you ready to run profitable campaigns?" 
                            ), 
                            React.createElement("div", {className: "m-t-10"}, 
                                "As a Make Massive Pro you get unlimited access to real-life profitable ads and landers to inspire your next successful campaigns." + ' ' + 
                                "Easily visit any lander displayed on the site and download the ads in a neatly packaged zip file."
                            ), 
                            React.createElement("div", {className: "text-center m-t-40"}, 
                                React.createElement("a", {href: "/accounts/subscribe/", className: "btn btn-primary"}, "Let's do this!")
                            )
                        )
                    )
                )
            }

            return (
                React.createElement("div", {className: "modal fade slide-up disable-scroll", id: "modalContent", tabindex: "-1", role: "dialog", "aria-labelledby": "modalSlideUpLabel", "aria-hidden": "false"}, 
                    React.createElement("div", {className: "modal-dialog "}, 
                        React.createElement("div", {className: "modal-content-wrapper"}, 
                            content
                        )
                    )
                )
            );
        } else {
            return (React.createElement("div", null))
        }
        
    }
})

module.exports = ContentModal

},{"../help/app-offers.jsx":334,"../lander/app-visitlander.jsx":350,"pubsub-js":10,"react":235}],360:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var evaluateUri = require('../../utils/evaluate-uri.js')
var modalNavigate = require('./modalNavigate.js')
//
var LanderDetail = require('../lander/app-landerdetail.jsx')
var LanderFeature = require('../lander/app-landerfeature.jsx')
var LanderAdGrid = require('../lander/app-landeradgrid.jsx')
var PublisherPanel = require('../publisher/app-publisherpanel.jsx')
var MediatorPanel = require('../mediator/app-mediatorpanel.jsx')

var LanderAffiliatePanel = require('../lander/app-landeraffiliatepanel.jsx')

var qs = require('querystring')

/**
 *
 * Lander modal display one Lander centered on the overlay. With Lander data displayed in the side bar.
 *
 */
var LanderModal = React.createClass({displayName: "LanderModal",

	render: function(){


		
		console.log("LanderModal render.", this.props, this.state)

		/*
		var base_path = evaluateUri(this.props.base_path, this.props)

		if (this.props.lander_hash !== undefined){
			var lander_hash = evaluateUri(this.props.lander_hash, this.props)
		}
		
		console.log('evaluate lander_hash', lander_hash)
		if (lander_hash === undefined){
			if (base_path.indexOf('/search') == 0){
				var lander_hash = this.props["_"][1]
			} else {
				var host_type = this.props["_"][0]
				var host_hash = this.props["_"][1]
				var lander_hash = this.props["_"][2]
			}
		}
		<LanderDetail
				        		lander_hash={lander_hash}
				        		async_path={"/lander/" + lander_hash + "/"} />
		*/
		if (this.props.url_file_hash === undefined){
			throw 'Lander hash not specified.'
		}
		var url_file_hash = evaluateUri(this.props.url_file_hash, this.props)
		var base_path = location.pathname.substring(0, location.pathname.indexOf('lander/url_file/' + url_file_hash + '/'))

		var get = qs.parse(location.search.substr(1,Infinity))
		var affId = get['aff']

		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "pull-left"}
					
				), 
				React.createElement("div", {className: "modal-dialog modal-lg"}, 
				    React.createElement("div", {className: "modal-content-wrapper"}, 
				        React.createElement("div", {className: "modal-content table-block bg-master-lighter"}, 
				        	React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-label": "Close"}, React.createElement("i", {style: {fontSize: '20px'}, className: "fa fa-close"})), 
				      
			        		React.createElement(LanderFeature, {
								lander_hash: lander_hash, 
								async_path: "/lander/" + lander_hash + "/", 
								base_path: base_path}), 						

							React.createElement(LanderAdGrid, {
								navigate: modalNavigate, 
				        		panelCls: "bg-master-lightest m-b-0", 
				        		lander_hash: lander_hash, 
				        		async_path: "/lander/" + lander_hash + "/ad/panel", 
				        		base_path: base_path}), 

				        	React.createElement(LanderAffiliatePanel, {
				        		title: "Outbound Tracking", 
								panelCls: "bg-white m-b-0", 
								base_path: base_path, 
							 	async_path: "/lander/" + lander_hash + "/outbound/panel"}), 

				        	React.createElement(MediatorPanel, {
				        		title: "Indound Tracking", 
								panelCls: "bg-master-lightest m-b-0", 
				        		lander_hash: lander_hash, 
				        		async_path: "/lander/" + lander_hash + "/mediator/panel", 
				        		base_path: base_path}), 

				        	React.createElement(PublisherPanel, {
								panelCls: "bg-white m-b-0", 
				        		lander_hash: lander_hash, 
				        		async_path: "/lander/" + lander_hash + "/publisher/panel", 
				        		base_path: base_path})
				        )
				    )
				)
			)
		)
	}
});

module.exports = LanderModal


},{"../../utils/evaluate-uri.js":406,"../lander/app-landeradgrid.jsx":344,"../lander/app-landeraffiliatepanel.jsx":345,"../lander/app-landerdetail.jsx":346,"../lander/app-landerfeature.jsx":347,"../mediator/app-mediatorpanel.jsx":355,"../publisher/app-publisherpanel.jsx":384,"./modalNavigate.js":365,"loglevel":9,"querystring":420,"react":235}],361:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var Router = require('react-router-component');
var Locations = Router.Locations;
var Location = Router.Location;
var NotFound = Router.NotFound;
var NavigatableModal = require('./app-navigatablemodal.jsx')
var NoModal = require('./app-nomodal.jsx')
var AdModal = require('./app-admodal.jsx')
var LanderModal = require('./app-landermodal.jsx')
var UrlFileModal = require('./app-urlfilemodal.jsx')

var ModalRouter = React.createClass({displayName: "ModalRouter",

	onNavigation: function(e){
		window._modalInternalNavigation = false // navigation complete, reset this flag. see: modalNavigate.js
	},

	onBeforeNavigation: function(e){
		//
	},

	// path_repr allows navigatable modal to access path= equivalent in order to calc base path

	render: function() {
		return (
			React.createElement(Locations, {
				onBeforeNavigation: this.onBeforeNavigation, 
	    		onNavigation: this.onNavigation}, 


	    		React.createElement(Location, {
					modal: AdModal, 
					ad_hash: ":_0", 
					async_path: "/ad/:_0/", 
					path_repr: "/ad/:_0/", 
					path: /[^<]+\/ad\/([-\.a-zA-Z0-9]{32})\//, 
					handler: NavigatableModal}), 

				
				React.createElement(Location, {
					modal: UrlFileModal, 
					url_file_hash: ":_0", 
					async_path: "/lander/url_file/:_0/", 
					path_repr: "/lander/url_file/:_0/", 
					path: /[^<]+\/lander\/url_file\/([-\.a-zA-Z0-9]{32})\//, 
					handler: NavigatableModal}), 


				React.createElement(Location, {
					modal: LanderModal, 
					lander_hash: ":_0", 
					path_repr: "/lander/:_0/", 
					async_path: "/lander/:_0/", 
					path: /[^<]+\/lander\/([-\.a-zA-Z0-9]{32})\//, 
					handler: NavigatableModal}), 

						

				React.createElement(NotFound, {handler: NoModal})
			)
		)
	}
})

module.exports = ModalRouter


/*



				<Location 
					modal={AdModal}
					type="advertiser"
					base_path="/advertiser/:_0/:_1/"
					async_path="/advertiser/:_0/:_1/ad/:_2/" 
					path={/\/advertiser\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/ad\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location 
					modal={AdModal}
					type="advertiser"
					base_path="/mediator/:_0/:_1/"
					async_path="/mediator/:_0/:_1/ad/:_2/" 
					path={/\/mediator\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/ad\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location 
					modal={AdModal}
					type="advertiser"
					base_path="/publisher/:_0/:_1/"
					async_path="/publisher/:_0/:_1/ad/:_2/" 
					path={/\/publisher\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/ad\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />
				
				<Location 
					modal={AdModal}
					type="affiliate"
					base_path="/advertiser/:_0/:_1/"
					async_path="/advertiser/:_0/:_1/ad/:_2/" 
					path={/\/advertiser\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/extad\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location
					modal={AdModal}
					base_path="/search/:_0/" 			
					async_path="/search/ads/:_0/:_1/" 
					path={/\/search\/(ads|landers)\/ad\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location
					modal={AdModal}
					base_path="/category/:_0/" 			
					async_path="/category/:_0/ad/:_1/" 
					path={/\/category\/([-\.a-zA-Z0-9]+)\/ad\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

<Location 
					modal={LanderModal}
					type="advertiser"
					base_path="/advertiser/:_0/:_1/"
					async_path="/advertiser/:_0/:_1/lander/:_2/" 
					path={/\/advertiser\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/lander\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />
				
				<Location 
					modal={LanderModal}
					type="affiliate"
					base_path="/advertiser/:_0/:_1/"
					async_path="/advertiser/:_0/:_1/lander/:_2/" 
					path={/\/advertiser\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/external\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location 
					modal={LanderModal}
					type="advertiser"
					base_path="/mediator/:_0/:_1/"
					async_path="/mediator/:_0/:_1/lander/:_2/" 
					path={/\/mediator\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/lander\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location 
					modal={LanderModal}
					type="affiliate"
					base_path="/mediator/:_0/:_1/"
					async_path="/mediator/:_0/:_1/external/:_2/" 
					path={/\/mediator\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/external\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location 
					modal={LanderModal}
					type="affiliate"
					lander_hash=":_0"
					base_path="/admin/trackers/"
					async_path="/admin/trackers/external/:_0/" 
					path={/\/admin\/trackers\/external\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location 
					modal={LanderModal}
					type="advertiser"
					base_path="/publisher/:_0/:_1/"
					async_path="/publisher/:_0/:_1/lander/:_2/" 
					path={/\/publisher\/(domain|sub_domain|url_dir|url_file|query)\/([-\.a-zA-Z0-9]{32})\/lander\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location
					modal={LanderModal}
					base_path="/search/:_0/" 			
					async_path="/search/landers/:_0/:_1/" 
					path={/\/search\/(ads|landers)\/lander\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location
					modal={LanderModal}
					lander_hash=":_1"
					base_path="/category/:_0/" 			
					async_path="/category/:_0/lander/:_1/" 
					path={/\/category\/([-\.a-zA-Z0-9]+)\/lander\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location
					modal={LanderModal}
					lander_hash=":_1"
					base_path="/landers/:_0/" 			
					async_path="/landers/:_1/" 
					path={/\/landers\/([-\.a-zA-Z0-9]{10})\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />

				<Location
					modal={LanderModal}
					lander_hash=":_0"
					base_path="/landers/:_0/" 			
					async_path="/landers/:_0/" 
					path={/\/landers\/([-\.a-zA-Z0-9]{32})\//}
					handler={NavigatableModal} />	


					*/

},{"./app-admodal.jsx":358,"./app-landermodal.jsx":360,"./app-navigatablemodal.jsx":362,"./app-nomodal.jsx":363,"./app-urlfilemodal.jsx":364,"react":235,"react-router-component":22}],362:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var validateRelation = require('../../utils/validate-relation.js')

var AdFeature = require('../ad/app-adfeature.jsx')
var AdLanderPanel = require('../lander/app-adlanderpanel.jsx')
var AdPublisherPanel = require('../publisher/app-adpublisherpanel.jsx')
var AdMediatorPanel = require('../mediator/app-admediatorpanel.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin

var evaluateUri = require('../../utils/evaluate-uri.js')

var log = require('loglevel');
/**
 * Modal wrapper
 */

var NavigatableModal = React.createClass({displayName: "NavigatableModal",

	mixins: [NavigatableMixin],

	_history: [],
	_historyLoc: -1,

	getInitialState: function(){
		if (this.props.base_path === undefined){
			var base_path = ''
		} else {
			var base_path = this.props.base_path
		}
		console.log('NavigatableMixin', this.props, this.state)
		return {base_path: base_path}
	},

	componentDidMount: function(){
		$('#Modal').modal({keyboard: true})
		$('#Modal').on('hidden.bs.modal', function (e) {
			this.closeClick()
		}.bind(this))
		$(window).on("popstate", this.popstate)
		this.resetHistory()
		this.updateModalDepth(this.props)
	},

	closeClick: function(e){
		// if closing because of navigation then do not adjust location
		if (window._modalExtenalNavigate !== undefined && window._modalExtenalNavigate == true){			
			return false
		}
		// if opened from external page then close should do to base url
		// if opened from internal page then close should go back to internal page
		// if opened then view more modals a few times when close should go back number the number of modal views 
		// keep count of nexts and previous in _modalDepth then history.go(-amount)
		//BUG if opened modal directly with no history then navigate forward then close then click back
		//	history the resolve first url will be gone
		//POSSIBLE: assign value to url indicating that modal was loaded first from external
		//FIXED: cannot discern between back and forward when clicking between the same urls
		//SOLUTION: used unique mid values in url for each navigation
		var firstUrl = this._history[this._historyLoc - (window._modalDepth - 1)].url
		if (window._initial !== undefined && window._initial == firstUrl){
			// base_path is location path minus modal path_repr
			var base_path = location.pathname.substring(0, location.pathname.indexOf(evaluateUri(this.props.path_repr, this.props))) + '/'
			this.navigate(base_path + window.location.search)			
		} else {
			var go = window._modalDepth * -1
			history.go(go)
		}
	},

	updateHistory: function(url){
		if (window._modalInternalNavigation !== undefined && window._modalInternalNavigation){
			// new direction, remove any future, set to current
			this._history.length = this._historyLoc + 1 // + 1 since length is 1 based not 0 based
			this._history.push({url: url, length: history.length})
			this._historyLoc += 1
			return 1
		}
		// assess if back or forward and update history loc
		if (this._history[this._historyLoc + 1] !== undefined && this._history[this._historyLoc + 1].url == url){
			// check forward first to for cases where back and forward and the same, must go back to go forward
			this._historyLoc += 1
			return 1
		} else if (this._history[this._historyLoc - 1] !== undefined && this._history[this._historyLoc - 1].url == url){
			//back
			this._historyLoc -= 1
			return -1
		} else {
			// new direction, remove any future, set to current
			this._history.length = this._historyLoc + 1 // + 1 since length is 1 based not 0 based
			this._history.push({url: url, length: history.length})
			this._historyLoc += 1
			return 1
		}
		
	},

	resetHistory: function(){
		this._history = []
		this._historyLoc = -1
		window._modalDepth = undefined
		window._modalExtenalNavigate = false
	},

	componentDidUpdate: function(){
		$('#Modal').modal({keyboard: true})
	},

	popstate: function(){
		log.debug("popstate", evaluateUri(this.props.async_path, this.props), this._history, this._historyLoc)
	},

	componentWillUnmount: function(){
		$(window).off("popstate", this.popstate)
		window._modalExtenalNavigate = true
		$('#Modal').modal('hide')
	},

	componentWillReceiveProps: function(nextProps){
		this.updateModalDepth(nextProps)
	},

	updateModalDepth: function(props){
		if (props.remote !== undefined && props.remote.loading){
			//ignore first prop change if loading withAsyncState
			return
		}
		if (window._modalDepth === undefined){
			window._modalDepth = 0
		}
		direction = this.updateHistory(window.location.pathname + window.location.search)
		if (direction < 0){
			// back
			window._modalDepth -= 1
		} else if (direction > 0){
			window._modalDepth += 1
		}
		log.debug('modal history', this._history, this._historyLoc, window._modalDepth)
	},

	render: function(){
		log.debug("NavigatableModal render.", this.props, this.state)
		var modal = React.createElement(this.props.modal, React.__spread({},  this.props))
		return (
			React.createElement("div", {className: "modal fade slide-right", id: "Modal", tabIndex: "-1", role: "dialog", "aria-labelledby": "Modal", "aria-hidden": "true"}, 
				modal
			)
		)
	}

});

module.exports = NavigatableModal


},{"../../utils/evaluate-uri.js":406,"../../utils/validate-relation.js":415,"../ad/app-adfeature.jsx":274,"../lander/app-adlanderpanel.jsx":338,"../mediator/app-admediatorpanel.jsx":352,"../publisher/app-adpublisherpanel.jsx":382,"loglevel":9,"react":235,"react-router-component":22}],363:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');

var NoModal = React.createClass({displayName: "NoModal",

	render: function() {
		return (
			React.createElement("div", null)
		)
	}
})

module.exports = NoModal


},{"react":235}],364:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var evaluateUri = require('../../utils/evaluate-uri.js')
var modalNavigate = require('./modalNavigate.js')
//
var LanderDetail = require('../lander/app-landerdetail.jsx')
var LanderFeature = require('../lander/app-landerfeature.jsx')

var PublisherPanel = require('../publisher/app-publisherpanel.jsx')
var MediatorPanel = require('../mediator/app-mediatorpanel.jsx')

var AsyncFilterGrid = require('../ad/app-asyncfiltergrid.jsx')
var LanderAffiliatePanel = require('../lander/app-landeraffiliatepanel.jsx')

var qs = require('querystring')

/**
 *
 * Lander modal display one Lander centered on the overlay. With Lander data displayed in the side bar.
 *
 */
var UrlFileModal = React.createClass({displayName: "UrlFileModal",

	render: function(){
		
		console.log("UrlFileModal render.", this.props, this.state)

		if (this.props.url_file_hash === undefined){
			throw 'Lander hash not specified.'
		}
		var url_file_hash = evaluateUri(this.props.url_file_hash, this.props)
		var base_path = location.pathname.substring(0, location.pathname.indexOf('lander/url_file/' + url_file_hash + '/'))
		return (
			React.createElement("div", null, 
				React.createElement("div", {className: "pull-left"}
					
				), 
				React.createElement("div", {className: "modal-dialog modal-lg"}, 
				    React.createElement("div", {className: "modal-content-wrapper"}, 
				        React.createElement("div", {className: "modal-content table-block bg-master-lighter"}, 
				        	React.createElement("button", {type: "button", className: "close", "data-dismiss": "modal", "aria-label": "Close"}, React.createElement("i", {style: {fontSize: '20px'}, className: "fa fa-close"})), 

				        	React.createElement(LanderDetail, {
				        		url_file_hash: url_file_hash, 
				        		async_path: "/lander/url_file/" + url_file_hash + "/"}), 
				        	
							React.createElement(AsyncFilterGrid, {
								title: "Ads", 			
								filter_country: true, 	
								filter_dimensions: true, 		
								filter_platforms: true, 	
								sort: true, 
								sort_default: 'last_seen_desc', 
								async_path: "/lander/url_file/" + url_file_hash + "/ad/panel", 
								base_path: base_path}), 

							React.createElement("div", {className: "clear:both"})
				        	/*
				        	<LanderAffiliatePanel 
				        		title="Outbound Tracking"
								panelCls="bg-white m-b-0"
								base_path={base_path}
							 	async_path={"/lander/" + lander_hash + "/outbound/panel"} />

				        	<MediatorPanel
				        		title="Indound Tracking"
								panelCls="bg-master-lightest m-b-0"
				        		lander_hash={lander_hash}
				        		async_path={"/lander/" + lander_hash + "/mediator/panel"}
				        		base_path={base_path}  />

				        	<PublisherPanel
								panelCls="bg-white m-b-0"
				        		lander_hash={lander_hash}
				        		async_path={"/lander/" + lander_hash + "/publisher/panel"}
				        		base_path={base_path}  />
				        	*/
				        )
				    )
				)
			)
		)
	}
});

module.exports = UrlFileModal


},{"../../utils/evaluate-uri.js":406,"../ad/app-asyncfiltergrid.jsx":280,"../lander/app-landeraffiliatepanel.jsx":345,"../lander/app-landerdetail.jsx":346,"../lander/app-landerfeature.jsx":347,"../mediator/app-mediatorpanel.jsx":355,"../publisher/app-publisherpanel.jsx":384,"./modalNavigate.js":365,"loglevel":9,"querystring":420,"react":235}],365:[function(require,module,exports){

var NavigatableMixin = require('react-router-component').NavigatableMixin

// Use this to navigate the modal internal to be able to discern between navigation clicks and back/forward button usage
module.exports = function(url){
	function updateQueryStringParameter(uri, key, value) {
	  var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
	  var separator = uri.indexOf('?') !== -1 ? "&" : "?";
	  if (uri.match(re)) {
	    return uri.replace(re, '$1' + key + "=" + value + '$2');
	  }
	  else {
	    return uri + separator + key + "=" + value;
	  }
	}
	var mid = Math.floor(Math.random() * 10000) + 10000
	url = updateQueryStringParameter(url, 'mid', mid)
	window._modalInternalNavigation = true // will be set to false in ModalRouter onNavigation
	NavigatableMixin.context = {router: false}
	NavigatableMixin.navigate(url)
}

},{"react-router-component":22}],366:[function(require,module,exports){
var React = require('react');
var AdGrid = require('../ad/app-adgrid.jsx')
var AdBuilder = require('../ad/app-adbuilder.jsx')
var log = require('loglevel');
var UserOverlay = require('../../utils/userOverlay.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var getState = require('../../utils/getState.js')
var CountryDropdown = require('../control/app-countrydropdown.jsx')
var CountDropdown = require('../control/app-countdropdown.jsx')
var NameCountDropdown = require('../control/app-namecountdropdown.jsx')
var NameLinkDropdown = require('../control/app-namelinkdropdown.jsx')
var SortDropdown = require('../control/app-sortdropdown.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Link = require('react-router-component').Link
var PieChart = require('react-simple-pie-chart')

var AsyncFilterNetworks = React.createClass({displayName: "AsyncFilterNetworks",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		var sort_by = false
		var sort_default = false
		if (this.props.sort !== undefined && this.props.sort == true && this.props.sort_default !== undefined){
			sort_by = this.props.sort_default
			sort_default = this.props.sort_default
		}
		return {
			total: 0,
			loading: true,
			loaded: false,
			sort_default: sort_default,
			query: {
				loading: false, 
				filter_country: false, 
				filter_device: false, 
				filter_category: false,
				sort_by: sort_by,
				page: 0, 
				per_page: 30
			}
		}
	},

	joinClick: function(item){
		if (item.referral_url){
			window.open(item.referral_url, '_blank')
		} else {
			window.open(item.website_url, '_blank')
		}
	},

	pageClick: function(page){
		var state = this.state
		state.query.page = page
		this.getAsyncState(state)
	},

	componentWillMount: function(){
		this.getAsyncState(this.state)	
	},
	
	getAsyncState: function(state){
		var props = $.extend({}, this.props)
		props['async_path'] += '?' + $.param(state.query)
		if (!state.loaded){
			state.loading = true
		} else {
			state.query.loading = true
		}
		this.setState(state);
		getState(props, function(error, newState) {
			if (this.state.loaded == false){
				newState.loading = false
				newState.loaded = true
			} else {
				newState.query = this.state.query
				newState.query.loading = false
			}
			this.setState(newState);
		}.bind(this));
	},

	handleCountryChange: function(country){
		var state = this.state
		if (!country || country == '' || country == 'all'){
			state.query.filter_country = false		
			state.query.sort_by = 'name_asc'	
		} else {
			if (country == 'GB'){
				state.query.filter_country = country
			} else {
				state.query.filter_country = country
			}			
			state.query.sort_by = 'count_desc'
		}
		// reset page to display newly filtered items
		state.query.page = 0		
		this.getAsyncState(state)
	},

	handleSortChange: function(sort_by){
		var state = this.state
		if (!sort_by){
			state.query.sort_by = this.state.sort_default			
		} else {
			state.query.sort_by = sort_by
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	render: function() {
		var title = 'Affiliate Networks'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.state.loading){
			return (				
                React.createElement("div", {className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, title)
                    ), 
                    React.createElement("div", {className: "panel-body p-b-20 p-t-20"}, 
				        React.createElement(Loading, null)
					)
                )
			)
		}
		
		var countryFilter = ''
		if (this.props.filter_country !== undefined && this.props.filter_country == true){
			var countryFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by country"), 
            	React.createElement(CountryDropdown, {country_map: this.state.countries, countryChange: this.handleCountryChange, selected: this.state.query.filter_country})
			))
		}
		var dimensionsFilter = ''
		if (this.props.filter_dimensions !== undefined && this.props.filter_dimensions == true){
			var dimensionsFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by size"), 
            	React.createElement(CountDropdown, {name: 'Size', onChange: this.handleDimensionsChange, items: this.state.dimensions, selected: this.state.query.filter_dimensions})
			))
		}
		var sourceFilter = ''
		if (this.props.filter_platforms !== undefined && this.props.filter_platforms == true){
			var sourceFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by traffic source"), 
            	React.createElement(NameCountDropdown, {name: 'Traffic Source', onChange: this.handleSourceChange, items: this.state.platforms, selected: this.state.query.filter_platform})
			))
		}

		var sortBy = ''
		if (this.props.sort !== undefined){
			var sort_by = {
				'name_asc': 'Name: a-z',
				'name_desc': 'Name: z-a',				
				'device_desktop_desc': 'Device: Desktop offers',
				'device_mobile_desc': 'Device: Mobile offers',
				'device_ios_desc': 'Device: iOS offers',
				'device_android_desc': 'Device: Android offers',
				'count_desc': 'Offers: most',
				'count_asc': 'Offers: least'
			}
			var sortBy = (
				React.createElement("div", {className: "col-md-3"}, 
					React.createElement("h5", null, "Sort"), 
	            	React.createElement(SortDropdown, {items: sort_by, onChange: this.handleSortChange, selected: this.state.query.sort_by})
				)
			)
		}

		var nameSelect = ''
		if (this.state.names !== undefined){
			nameSelect = (React.createElement("div", {className: "col-md-6 col-xs-12"}, 
						React.createElement("div", {className: "m-r-10", style: {display: 'inline-block'}}, 
							React.createElement("h5", null, "Select by name")
						), 
						React.createElement("div", {style: {display: 'inline-block'}}, 
							React.createElement(NameLinkDropdown, {
								name: "Network", 
								value_name: "hash", 
								display_name: "name", 
								items: this.state.names, 
								base_path: "/affiliate-network/"})
							)
						))
		}

		var filterRow = (
			React.createElement("div", null, 
				React.createElement("div", {className: "row"}, 
					nameSelect
				), 
				React.createElement("div", {className: "m-b-20 row"}, 
	    			countryFilter, 
	    			dimensionsFilter, 
	    			sourceFilter, 
	    			sortBy
	    		)
	    	)
		)


		if (this.state.query.loading){
			var results = [filterRow,(
				React.createElement("div", {className: "text-center p-b-20 p-t-20"}, 
			        React.createElement(Loading, null)
				)
			)]
		} else {

			var width = 240
			var height = 180

			if (this.props.width !== undefined){
				width = this.props.width
			}

			if (this.props.height !== undefined){
				height = this.props.height
			}
			
			var items = []
			for (var i = 0; i < this.state.items.length; i++){
				var item = this.state.items[i]
				if (item.slug){
					var networkLink = "/affiliate-network/" + item.slug + "/"
					
				} else {
					var networkLink = "/affiliate-network/" + item.hash + "/"
				}
				var name = (React.createElement(Link, {href: networkLink}, React.createElement("h4", null, item.name)))	

				categories = []
				if (item.custom_categories){
					for (var x = 0; x < item.custom_categories.split(',').length; x++){
						var catName = item.custom_categories[x]
						categories.push(React.createElement("span", {className: "label font-montserrat fs-11 pull-left"}, catName))
					}
				} else {
					for (var x = 0; x < item.meta.categories.length; x++){
						var catName = item.meta.categories[x][0]						
						if (x == 0){
							var className = "label label-success font-montserrat fs-14"
						} else if (x == 1){
							var className = "label label-info font-montserrat fs-13"
						} else {
							var className = "label label-inverse font-montserrat fs-11"
						}
						categories.push(React.createElement("div", {style: {height: '24px'}, className: "pull-left m-r-5 m-b-5"}, React.createElement("span", {className: className}, catName)))
						if (x == 7){
							break;
						}

					}
					var catExtra = ''
					if (item.meta.categories.length - 7 > 0){
						var catExtra = React.createElement("span", {style: {padding: '3px 9px 3px 9px', fontWeight: 'bold'}, className: "pull-left fs-11 font-montserrat m-r-5 m-b-5"}, item.meta.categories.length - 5, " more...")
					}
				}

				
				var desktop = item.desktop_count
				var mobile = item.mobile_count
				var ios = item.ios_count
				var android = item.android_count
				var deviceTotal = desktop + mobile + ios + android
				/*
				for (var x = 0; x < item.meta.devices.length; x++){
					device = item.meta.devices[x]
					if (device[0] == 'Desktop'){
						desktop = device[1]
					} else {
						mobile += device[1]
					}
					deviceTotal += device[1]
				}
				*/

				var countryBars = []
				for (var x = 0; x < item.meta.countries.length; x++){
					country = item.meta.countries[x]
					countryBars.push(
						React.createElement("div", null, country[0], " - ", country[1] + ' offers', 
							React.createElement("div", {className: "progress"}, 
								React.createElement("div", {className: "progress-bar progress-bar-success", style: {width: Math.ceil(country[1] / item.meta.offer_count * 100) + '%'}})
							)
						));
					if (x >= 2) break
				}


				var filterCountryBar = ''
				if (this.state.query.filter_country){
					for (var x = 0; x < item.meta.countries.length; x++){
						if (item.meta.countries[x][0] == this.state.query.filter_country){
							country = item.meta.countries[x]
							filterCountryBar = (
								React.createElement("div", null, country[0], " - ", country[1] + ' offers', 
									React.createElement("div", {className: "progress"}, 
										React.createElement("div", {className: "progress-bar progress-bar-warning", style: {width: Math.ceil(country[1] / item.meta.offer_count * 100) + '%'}})
									)
								)
							);
						}
					}
				}
				
				items.push(
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {style: {maxWidth: '1000px'}, className: "col-xs-12 p-b-15"}, 
							React.createElement("div", {style: {border: '1px solid rgba(230, 230, 230, 0.7)'}, className: "bg-white p-l-10 p-t-10 p-b-10"}, 
								React.createElement("div", {className: "row"}, 
									React.createElement("div", {className: "col-md-9"}, 
										React.createElement("div", null, name), 
										React.createElement("div", null, categories, " ", catExtra), 
										React.createElement("div", {className: "clearfix"})
									), 
									React.createElement("div", {className: "col-md-3 p-b-20 p-t-10"}, 
										React.createElement("button", {className: "btn m-b-10 btn-primary font-bold btn-cons", onClick: this.joinClick.bind(null, item)}, 
											"Join this Network"
										), 	
										React.createElement(Link, {href: networkLink, className: "btn m-b-10 btn-default btn-cons"}, 
											"View ", item.meta.offer_count, " offers"
										)
															
									)								
								), 
								React.createElement("div", {className: "row m-t-10"}, 
									React.createElement("div", {className: "col-md-9"}, 									
										React.createElement("div", {style: {maxWidth: '80%'}}, 
											filterCountryBar, 
											countryBars
										)
									), 
									React.createElement("div", {className: "col-md-3 p-r-10"}, 
										React.createElement("div", {className: "pull-left", style: {display: 'inline-block', width: '100px', width: '100px'}}, 
											React.createElement(PieChart, {
											  slices: [
											    {
											      //color: '#48B0F7',
											      color: '#f8d053',
											      value: desktop,
											    },
											    {
											      //color: '#F55753',
											      color: '#3a8fc8',
											      value: mobile,
											    },
											    {
											      //color: '#F55753',
											      color: '#10cfbd',
											      value: ios,
											    },
											    {
											      //color: '#F55753',
											      color: '#48b0f7',
											      value: android,
											    }
											  ]})
										), 

										React.createElement("div", {style: {width: '80px'}, className: "pull-left p-r-10"}, React.createElement("div", {style: {display: 'inline-block', height: '10px', width: '10px', backgroundColor: '#f8d053'}}), " Desktop"), 
										React.createElement("div", {style: {width: '80px'}, className: "pull-left p-r-10"}, React.createElement("div", {style: {display: 'inline-block', height: '10px', width: '10px', backgroundColor: '#3a8fc8'}}), " Mobile"), 
										React.createElement("div", {style: {width: '80px'}, className: "pull-left p-r-10"}, React.createElement("div", {style: {display: 'inline-block', height: '10px', width: '10px', backgroundColor: '#10cfbd'}}), " iOS"), 
										React.createElement("div", {style: {width: '80px'}, className: "pull-left p-r-10"}, React.createElement("div", {style: {display: 'inline-block', height: '10px', width: '10px', backgroundColor: '#48b0f7'}}), " Android")

									)
								)
							)
						)
					)
				)
			}

			if (items.length > 0){
				var results = [filterRow,(
					React.createElement("div", null, 
						items, 						
						React.createElement("div", {className: "pull-left m-t-20"}, 
			            	React.createElement(Pagination, {		
			            		page: this.state.query.page, 
			            		total: this.state.total, 
			            		perPage: this.state.query.per_page, 
			            		pageClick: this.pageClick})
			            )
			        )
			    )]
			} else {
				var results = React.createElement("div", null, "No affiliate networks found.")
			}
		}

		return (
            React.createElement("div", {className: "panel panel-transparent"}, 
                React.createElement("div", {className: "panel-heading"}, 
                    React.createElement("div", {className: "panel-title"}, title)
                ), 
                React.createElement("div", {className: "panel-body"}, 		
			        results, 
                    React.createElement("div", {className: "clearfix"})
				)
            )
		);
	}

});

module.exports = AsyncFilterNetworks;

},{"../../utils/getState.js":408,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../ad/app-adbuilder.jsx":272,"../ad/app-adgrid.jsx":276,"../control/app-countdropdown.jsx":316,"../control/app-countrydropdown.jsx":317,"../control/app-namecountdropdown.jsx":318,"../control/app-namelinkdropdown.jsx":319,"../control/app-pagination.jsx":321,"../control/app-sortdropdown.jsx":324,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22,"react-simple-pie-chart":53}],367:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')

var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var AdvertiserOfferPanel = require('../advertiser/app-advertiserofferpanel.jsx')
var OfferPanel = require('../offer/app-offerpanel.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var AsyncFilterOffers = require('../offer/app-asyncfilteroffers.jsx')

var Network = React.createClass({

	displayName: 'Network',

    handleJoinClick: function(){
    	if (this.props.remote.referral_url !== undefined && this.props.remote.referral_url != ''){
    		var win = window.open(this.props.remote.referral_url, '_blank')
    		return
    	}
    	if (this.props.remote.website_url !== undefined && this.props.remote.website_url != ''){
    		var win = window.open(this.props.remote.website_url, '_blank')
    		return
    	}
    	//TODO: handle error, display message when no url
    },

	render: function() {

		if (this.props.remote.loading){
			var inner = React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		} else {

			var basePath = "/affiliate-network/" + this.props.remote.hash + "/"
			if (this.props.remote.slug){
				var basePath = "/affiliate-network/" + this.props.remote.slug + "/"
			}

			var crumb_links = [
				{url : '/affiliate-network/', name: 'Affiliate Networks', className: ''},
				{url : '/affiliate-network/'+this.props.network_hash+'/', name: this.props.remote.name, className: 'active'}
			]
			var source = '';
			if (typeof this.props.remote.source != 'undefined'){
				if (this.props.remote.source != ''){
					source = 'Source: ' + this.props.remote.source;
				}
			}
			if (this.props.remote.screenshot === undefined){
				// display place holder screenshot
				var screenshot_col = []
			} else {
				var screenshot_col = (
					React.createElement("div", {style: {"maxWidth": "640px"}, className: "col-lg-7 col-md-6 "}, 
	                    React.createElement("div", {className: "full-height"}, 
	                        React.createElement("div", {className: "panel-body"}, 
	                            React.createElement("img", {className: "img-responsive fade-in lazyload", "data-src": this.props.remote.screenshot.url, alt: this.props.remote.name})
	                        )
	                    )
	                )
				)
			}

			var logo = ''
			if (this.props.remote.logo_url){
				logo = React.createElement("img", {style: {maxWidth: '185px', maxHeight: '60px'}, src: this.props.remote.logo_url})
			}

			var inner = (
				React.createElement("div", {className: "inner"}, 
                	React.createElement(Breadcrumb, {links: crumb_links}), 
                    React.createElement("div", {className: "row"}, 
                    	/* screenshot_col */
                        React.createElement("div", {className: "col-lg-5 col-md-8 "}, 
                            React.createElement("div", {className: "panel panel-transparent"}, 
                                React.createElement("div", {className: "panel-heading"}, 
                                    React.createElement("div", {className: "panel-title"}, "Affiliate Network")
                                ), 
                                React.createElement("div", {className: "panel-body"}, 
                                    React.createElement("h3", null, this.props.remote.name), 
                                    logo, 
                                    React.createElement("p", null, this.props.remote.about), 
                                    React.createElement("p", {className: "small hint-text m-t-5"}, source), 
                                    React.createElement("br", null), 
                                    React.createElement("div", null, 
                                        React.createElement("button", {className: "pull-left btn btn-primary btn-cons", onClick: this.handleJoinClick}, "Join this Network")
                                    )
                                )
                            )
                        )
                    )
                )
            )
		}

		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    inner
                ), 
	            React.createElement("div", {className: "container-fluid "}, 
	            	React.createElement(AsyncFilterOffers, {
	                        title: "Offers", 
	                        filter_country: true, 
	                        filter_devices: true, 
	                        filter_networks: true, 
	                        with_ads_switch: true, 
	                        sort: true, 
	                        cols: ['device', 'ads', 'title', 'payout-amount',  'payout-type', 'countries',  'category', 'date-added'], 
	                        sort_default: 'date_added_desc', 
	                        network_hash: this.props.network_hash, 
							async_path: "/affiliate-network/:network_hash/offer/panel", 
	                        base_path: basePath})	
				)
			)
		);
	}

});

module.exports = withAsyncState(Network);

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserofferpanel.jsx":300,"../breadcrumb/app-breadcrumb.jsx":311,"../offer/app-asyncfilteroffers.jsx":376,"../offer/app-offerpanel.jsx":381,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"react":235,"react-async":12,"react-router-component":22}],368:[function(require,module,exports){
var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var NetworkBar = React.createClass({displayName: "NetworkBar",

	render: function() {

		var title = 'Affiliate Networks'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.props.remote.loading){
			return (
				React.createElement("div", {className: "container-fluid "}, 
					React.createElement("div", {className: "panel"}, 
						React.createElement("div", {className: "panel-heading"}, 
							React.createElement("div", {className: "panel-title"}, 
								title
							)
						), 
						React.createElement("div", {className: "panel-body text-center m-t-10 m-b-10"}, 
							React.createElement(Loading, null)
						)
					)

				)
			);
		}

		var list = []
		for (var i = 0; i < this.props.remote.items.length; i++){
			var item = this.props.remote.items[i]
			var logo = ''
			if (item.logo_url){
				logo = React.createElement("img", {style: {maxWidth: '185px', maxHeight: '60px'}, src: item.logo_url})
			}
			if (item.slug){
				var link = '/affiliate-network/' + item.slug + '/'
			} else {
				var link = '/affiliate-network/' + item.hash + '/'
			}
			list.push(
				React.createElement("div", {style: {height: '105px'}, className: "col-md-3 b-grey"}, 
					React.createElement("div", null, React.createElement("h5", null, React.createElement(Link, {href: link}, item.name))), 
					React.createElement(Link, {href: link}, logo)				
				)
			)
			if (i >= 3) break;
		}

		var list_url = '/affiliate-network/'
		if (this.props.list_url){
			list_url = this.props.list_url
		}

		return (
			React.createElement("div", {className: "container-fluid "}, 
				React.createElement("div", {className: "panel"}, 
					React.createElement("div", {className: "panel-heading"}, 
						React.createElement("div", {style: {width: '100%'}, className: "panel-title"}, 
							title, 
							React.createElement("div", {className: "pull-right"}, 
								React.createElement(Link, {href: list_url}, "View All")
							)
						)
						
					), 
					React.createElement("div", {className: "panel-body"}, 
						React.createElement("div", {className: "row"}, 
							list
						)
					)
				)

			)
		);
	}

});

module.exports = withAsyncState(NetworkBar);

},{"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],369:[function(require,module,exports){
var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin
var PubSub = require('pubsub-js')

var NetworkCard = React.createClass({displayName: "NetworkCard",

	mixins: [NavigatableMixin],

	cardClick: function(url){
		this.navigate(url)
	},

	acronym: function(name){
		var capitals = ''
		for (var i = 0; i < name.length; i++){
			if (name.charAt(i) == name.charAt(i).toUpperCase()){
				capitals += name.charAt(i)
				if (capitals.length >= 2){
					break
				}
			}
		}
		return capitals
	},

	randomColor: function(){
		function getRandomInt (min, max) {
		    return Math.floor(Math.random() * (max - min + 1)) + min;
		}
		var colors = [
			'bg-primary-light', 
			'bg-complete-light', 
			'bg-success-light', 
			'bg-warning-light', 
			'bg-danger-light', 
			'bg-info-light',
			'bg-primary', 
			'bg-complete', 
			'bg-success', 
			'bg-warning', 
			'bg-danger', 
			'bg-info',
		]
		//num = getRandomInt(1, colors.length - 1)
		num = this.props.i % 12;
		return colors[num]
	},

	render: function() {

		about = this.props.about.substr(0,250).trim() + '...'

		return (
			React.createElement("div", {style: {width:"340px", cursor: "pointer"}, className: "card share m-r-10", onClick: this.cardClick.bind(this, '/affiliate-network/' + this.props.hash + '/')}, 
				React.createElement("div", {className: "card-header"}, 
					React.createElement("div", {className: "logo-circle pull-left " + this.randomColor()}, 
						React.createElement("h4", {className: "text-white text-center"}, this.acronym(this.props.name))
					), 
					React.createElement("h3", {className: "ellipses", style: {"width": "250px", "marginLeft":"55px"}}, this.props.name)
					
				), 
				React.createElement("div", {className: "card-description", style: {'height':'200px'}}, 
					React.createElement("div", {style: {'height':'160px'}}, 
						about
					), 
					React.createElement("div", {className: "hint-text"}, 
						this.props.count, " ", React.createElement("i", {className: "fa fa-money"})
					)
				)
			)
		);
	}

});

module.exports = NetworkCard;

},{"pubsub-js":10,"react":235,"react-router-component":22}],370:[function(require,module,exports){
var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Link = require('react-router-component').Link
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var log = require('loglevel');

var NetworkFeature = React.createClass({displayName: "NetworkFeature",

	mixins: [NavigatableMixin],

	joinClick: function(){
		if (this.props.remote.referral_url !== undefined && this.props.remote.referral_url != ''){
    		var win = window.open(this.props.remote.referral_url, '_blank')
    		return
    	}
    	if (this.props.remote.website_url !== undefined && this.props.remote.website_url != ''){
    		var win = window.open(this.props.remote.website_url, '_blank')
    		return
    	}
	},

	render: function() {
		if (this.props.remote.loading == true){
			return (
				React.createElement("div", {className: "panel"}, 
					React.createElement("div", {className: "panel-body p-t-40 p-b-40 text-center"}, 
						React.createElement(Loading, null)
					)
				)
			)
		}
		return (
			React.createElement("div", {className: "panel"}, 
				React.createElement("div", {className: "panel-heading"}, 
					React.createElement("div", {className: "panel-title"}, 
						"Network"
					)					
				), 
				React.createElement("div", {className: "panel-body"}, 
					React.createElement("h3", null, React.createElement(Link, {href: "/affiliate-network/" + this.props.remote.hash + "/"}, this.props.remote.name)), 
					React.createElement("p", null, this.props.remote.about), 
					React.createElement("button", {className: "btn btn-primary m-r-10", onClick: this.joinClick}, "Join Network"), 
					React.createElement("button", {className: "btn btn-default", onClick: this.navigate.bind(null, "/affiliate-network/" + this.props.remote.hash + "/")}, "View All Offers")
				)
			)
		)
		
	}

});

module.exports = withAsyncState(NetworkFeature);

},{"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],371:[function(require,module,exports){
var React = require('react');

var NetworkItem = React.createClass({displayName: "NetworkItem",

	render: function() {
		return (
			React.createElement("div", null, 
				React.createElement("div", {style: {'display':'table-cell'}}, 
					React.createElement("h3", null, this.props.name)
				), 
				React.createElement("div", {style: {'display':'table-cell'}}, 
					React.createElement("p", null, this.props.about)
				), 
				React.createElement("div", {style: {'display':'table-cell'}}, 
					React.createElement("h3", null, this.props.count)
				)
			)
		);
	}

});

module.exports = NetworkItem;

},{"react":235}],372:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var AsyncFilterNetworks = require('./app-asyncfilternetworks.jsx')

var NetworkList = React.createClass({displayName: "NetworkList",

	render: function() {

		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/affiliate-network/', name: 'Affiliate Networks', className: 'active'},
		]

        var base_path = '/affiliate-network/'

		return (
			React.createElement("div", null, 
               
                React.createElement("div", {className: "container-fluid sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 

                        React.createElement(Breadcrumb, {links: crumb_links}), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                                
                                React.createElement("div", {className: "panel panel-transparent"}, 
                                    
                                    React.createElement("div", {className: "panel-body"}, 
                                        React.createElement("h3", null, "Affiliate Networks"), 
                                        React.createElement("p", null, "Affiliate networks provide offers that pay affiliates for every customer referred to the product being advertised.")
                                    )
                                )
                            ), 
                            React.createElement("div", {className: "col-lg-7 col-md-6 "}, 
                                React.createElement("div", {className: "full-height"}, 
                                    React.createElement("div", {className: "panel-body text-center"}
                                        
                                    )
                                )
                            )
                        )
                    )
                ), 


                React.createElement("div", {className: "container-fluid"}, 
                    React.createElement(AsyncFilterNetworks, {
                        title: "Affiliate Networks", 
                        filter_category: true, 
                        filter_country: true, 
                        filter_device: true, 
                        sort: true, 
                        sort_default: 'name_asc', 
                        async_path: base_path, 
                        base_path: base_path})
                    /*<div id="networkPanel" className="panel panel-transparent">
                        <div className="panel-heading">
                            <div className="panel-title">AFFILIATE NETWORKS</div>
                            <div className="pull-right">
                                <div className="col-xs-12">
                                    <input type="text" id="search-networkList" className="form-control pull-right" placeholder="Search" />
                                </div>
                            </div>
                            <div className="clearfix"></div>
                        </div>
                        <div className="panel-body">
                            {table}
                        </div>
                    </div> */
                )

            )  
		);
	}

});

module.exports = NetworkList;

},{"../breadcrumb/app-breadcrumb.jsx":311,"./app-asyncfilternetworks.jsx":366,"react":235}],373:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')

var NetworkItem = require('../network/app-networkitem.jsx')
var NetworkCard = require('../network/app-networkcard.jsx')
var List = require('../list/app-list.jsx')
var log = require('loglevel');

var NetworksPanel = React.createClass({displayName: "NetworksPanel",

    getInitialState: function(){
        return {filterText: undefined}
    },

    searchChange: function() {
        this.setState({filterText: this.refs['search'].getDOMNode().value})
    },

	render: function() {

        if (this.props.remote.loading){
            return (
                React.createElement("div", {id: "networkPanel", className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "AFFILIATE NETWORKS")
                    ), 
                    React.createElement("div", {className: "panel-body p-t-40 p-b-40 text-center"}, 
                        React.createElement(Loading, null)
                    )
                )
            );
        }

        if (this.props.remote.items.length == 0){
            var items = []
        } else {
            log.debug('NetworksPanel items', this.props, this.state)
			var items = this.props.remote.items.map(function(item, i){
                item['href'] = '/affiliate-network/' + item.hash + '/'
                item['textIndex'] = item['name']
                return item
	      	}, this)
		}
        var filterRowCls = "row"
        if (this.props.hide_filter !== undefined){
            filterRowCls = "row hidden"
        }

		return (
            React.createElement("div", {id: "networkPanel", className: "panel panel-transparent"}, 
                React.createElement("div", {className: "panel-heading"}, 
                    React.createElement("div", {className: "panel-title"}, "AFFILIATE NETWORKS"), 
                    React.createElement("div", {className: filterRowCls}, 
                        React.createElement("div", {className: "col-sm-6 col-xs-12 col-md-4 p-t-10 p-b-20"}, 
                            React.createElement("input", {ref: "search", type: "text", id: "search-networkList", className: "form-control pull-right", placeholder: "Search for your network", onChange: this.searchChange})
                        )
                    ), 
                    React.createElement("div", {className: "clearfix"})
                ), 
                React.createElement("div", {className: "panel-body"}, 
                    React.createElement(List, {itemElement: NetworkCard, items: items, filterText: this.state.filterText, empty_text: "No networks match this search."})
                )
            )
		);
	}

});

module.exports = withAsyncState(NetworksPanel);

},{"../../utils/withAsyncState.jsx":416,"../list/app-list.jsx":351,"../network/app-networkcard.jsx":369,"../network/app-networkitem.jsx":371,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235}],374:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var PubSub = require('pubsub-js')

var Notifications = React.createClass({displayName: "Notifications",

    getInitialState: function(){
        return {notifications:[]}
    },

    componentDidMount: function(){
        PubSub.subscribe( 'error', function(msg, data){
            var notifications = this.state.notifications
            if (typeof data == "string"){
                var message = data
                var pgn_type = 'pgn-bar'
                var position = 'top'
            } else {
                var message = data.message
                var pgn_type = data.pgn_type
                var position = data.position
            }
            notifications.push({type:'error', message:message, pgn_type: pgn_type, position: position, state: 'show'})
            this.setState({notifications: notifications})
        }.bind(this));
        PubSub.subscribe( 'warning', function(msg, data){
            var notifications = this.state.notifications
            if (typeof data == "string"){
                var message = data
                var pgn_type = 'pgn-bar'
                var position = 'top'
            } else {
                var message = data.message
                var pgn_type = data.pgn_type
                var position = data.position
            }
            notifications.push({type:'warning', message:message, pgn_type: pgn_type, position: position, state: 'show'})
            this.setState({notifications: notifications})
        }.bind(this));
        PubSub.subscribe( 'success', function(msg, data){
            var notifications = this.state.notifications
            if (typeof data == "string"){
                var message = data
                var pgn_type = 'pgn-bar'
                var position = 'top'
            } else {
                var message = data.message
                var pgn_type = data.pgn_type
                var position = data.position
            }
            notifications.push({type:'success', message:message, pgn_type: pgn_type, position: position, state: 'show'})
            this.setState({notifications: notifications})
        }.bind(this));
    },

    closeClick: function(i){
        var notifications = this.state.notifications
        notifications[i].state = 'hidden'
        this.setState({notifications: notifications})
    },

	render: function() {
        var notifs = this.state.notifications.map(function(item, i){
            if (item.state == 'show'){
                cls = 'alert alert-' + item.type
                //setTimeout to close notifation after 5 seconds.
                setTimeout(function(i){
                    this.closeClick(i)
                }.bind(this, i), 10000)
                var pgn_type = 'pgn-bar'
                if (item.pgn_type !== undefined){
                    pgn_type = item.pgn_type
                }
                var position = 'top'
                if (item.position !== undefined){
                    position = item.position
                }
                return (
                    React.createElement("div", {className: "pgn-wrapper", "data-position": position}, 
                        React.createElement("div", {key: i, className: "pgn " + pgn_type}, 
                            React.createElement("div", {className: cls}, 
                                React.createElement("button", {type: "button", className: "close", onClick: this.closeClick.bind(this, i)}, 
                                    React.createElement("span", null, "×"), React.createElement("span", {className: "sr-only"}, "Close")
                                ), 
                                React.createElement("span", null, item.message)
                            )
                        )
                    )
                )
            }            
        }, this)
        if (notifs.length > 0){
            return (        
                React.createElement("div", null, 
                    notifs
                )
            );
        } else {
            return (React.createElement("div", null))
        }
		
	}

});

module.exports = Notifications;

},{"pubsub-js":10,"react":235}],375:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;

var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')

var AppOfferPanel = React.createClass({displayName: "AppOfferPanel",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		country_list = countries.all.sort(function(a, b){ 
			return a.name.localeCompare(b.name)
		})
		return {
			country_list: country_list,
			filter: { 'search': '', 'country': [], 'category': [], 'payout': []},
			page: 0, 
			perPage: 50
		}
	},

	pageClick: function(page){
		$(window).scrollTop($('#network-offer-panel').offset().top)
		this.setState({page: page})
	},

	handleSearchChange: function(event){
		filter = this.state.filter;
		filter['search'] = event.target.value;
		// reset page to display newly filtered items
		this.setState({filter:filter, page: 0})
	},

	handleClearCountry: function(){
		var filter = this.state.filter
		filter['country'] = []
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handleCountryChange: function(event){
		var country = event.target.value.toLowerCase()
		var filter = this.state.filter
		if (country == '' || country == 'all'){
			filter['country'] = []
		} else {
			if (country == 'gb'){
				filter['country'] = [country, 'UK'.toLowerCase()] // support alternate country code for gb
			} else {
				filter['country'] = [country]
			}
			
		}
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handleCategoryClick: function(event){
		var category = event.target.textContent.toLowerCase()
		var filter = this.state.filter
		if (category == 'all'){
			filter['category'] = []
		} else {
			// check if category in filter already
			var pos = false
			for (var i = 0; i < filter['category'].length; i++){
				if (category == filter['category'][i]){
					pos = i
					break
				}
			}
			// if so remove
			if (pos !== false){
				filter['category'].splice(i,1)
			} else {
				// if not add
				filter['category'].push(category)
			}
		}
		console.log('filter: category', filter['category'])
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handlePayoutClick: function(event){
		var payoutType = event.target.textContent.toLowerCase()
		var filter = this.state.filter
		if (payoutType == 'all'){
			filter['payout'] = []
		} else {
			// check if payoutType in filter already
			var pos = false
			for (var i = 0; i < filter['payout'].length; i++){
				if (payoutType == filter['payout'][i]){
					pos = i
					break
				}
			}
			// if so remove
			if (pos !== false){
				filter['payout'].splice(i,1)
			} else {
				// if not add
				filter['payout'].push(payoutType)
			}
		}
		console.log('filter: payout', filter['payout'])
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	categoryFilterEnabled: function(category){
		//normalize category name to lower case
		category = category.toLowerCase()
		categoryFilter = this.state.filter['category']
		if (categoryFilter.length == 0){
			return category == 'all' ? true : false
		}
		if ($(categoryFilter).filter([category]).length > 0){
			return true
		} else {
			return false
		}
	},

	payoutFilterEnabled: function(payoutType){
		//normalize category name to lower case
		payoutType = payoutType.toLowerCase()
		payoutFilter = this.state.filter['payout']
		if (payoutFilter.length == 0){
			return payoutType == 'all' ? true : false
		}
		if ($(payoutFilter).filter([payoutType]).length > 0){
			return true
		} else {
			return false
		}
	},

	offerRowClick: function(e){
		if (e.target.tagName == 'TD'){
			var href = e.target.parentNode.getAttribute('data-href')
		} else {
			var href = e.target.getAttribute('data-href')
		}
		console.log('click', href)
		this.navigate(href)
	},

	render: function() {

		if (this.props.remote.loading){
			return (
                React.createElement("div", {className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Offers")
                    ), 
                
	                React.createElement("div", {className: "panel-body p-t-40 p-b-40"}, 
	                	React.createElement(Loading, null)
	                )
	            )
			)
		}		
		var rows = []
		var x = 0
		var start = this.state.page * this.state.perPage 
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= this.props.remote.items.length){
				break
			}
			var offer = this.props.remote.items[i]

			if (offer.payout_type == 'RevShare'){
				var payout_amount = offer.payout_amount.replace('%','') + '%'
			} else {
				var payout_amount = '$' + offer.payout_amount.replace('$','')		
			}

			if (offer.pub_date){
				var last_updated = new Date(offer.pub_date).toLocaleDateString();
			} else {
				var last_updated = new Date(offer.date_added).toLocaleDateString();
			}
			rows.push(React.createElement("tr", null, 
                			React.createElement("td", {className: "offer-title"}, offer.offer_title), 			
                			React.createElement("td", {className: "offer-amount text-left p-l-20"}, payout_amount), 
                			React.createElement("td", {className: "offer-app"}, offer.host_value), 
                			React.createElement("td", {className: "offer-app"}, offer.network_name), 
                			React.createElement("td", {style: {"width": "120px"}, className: "p-l-20"}, last_updated)
                		))
			x++;
		}
		
		panelContent = []
		if (rows.length == 0){
			if (this.props.remote.items.length > 0){
				rows = (React.createElement("tr", null, 
                		React.createElement("td", {colSpan: "5", className: "text-center p-t-20 p-b-20"}, 
                			"No offers match your selection."
                		)
                	))
			} else {
				rows = (React.createElement("tr", null, 
                		React.createElement("td", {colSpan: "5", className: "text-center p-t-20 p-b-20"}, 
                			"No active offers found."
                		)
                	))
			}				
		} 
		panelContent = (
                React.createElement("table", {className: "table table-condensed table-hover offer-table"}, 
                	React.createElement("thead", {className: "fs-12 font-montserrat all-caps"}, 
                		React.createElement("tr", null, 
                			React.createElement("td", {className: "offer-title"}, "Offer"), 			
                			React.createElement("td", {className: "offer-amount text-left p-l-20"}, "Amount"), 
                			React.createElement("td", {className: "offer-app"}, "App"), 
                			React.createElement("td", {className: "offer-app"}, "Network"), 
                			React.createElement("td", {style: {"width": "120px"}, className: "p-l-20"}, "Last Updated")
                		)
                	), 
                    React.createElement("tbody", null, 
	                    rows
	                )
                )
            )

		return (
			React.createElement("div", {className: this.props.panelCls}, 
                React.createElement("div", {id: "network-offer-panel", className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Offers"), 
                        React.createElement("div", {className: "pull-right"}

                    	)
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	
	                    	React.createElement("div", {id: "advertiser-panel-content"}, 
	                        	panelContent, 
	                        	React.createElement(Pagination, {
		                        	page: this.state.page, 
		                        	perPage: this.state.perPage, 
		                        	total: this.props.remote.items.length, 
		                        	pageClick: this.pageClick})
	                        )

                    )
                )
			)
		)

	}

});

module.exports = withAsyncState(AppOfferPanel);

},{"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"country-data":6,"loglevel":9,"query-string":11,"react":235,"react-router-component":22}],376:[function(require,module,exports){
var React = require('react');
var AdGrid = require('../ad/app-adgrid.jsx')
var AdBuilder = require('../ad/app-adbuilder.jsx')
var log = require('loglevel');
var UserOverlay = require('../../utils/userOverlay.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var getState = require('../../utils/getState.js')
var CountryDropdown = require('../control/app-countrydropdown.jsx')
var CountDropdown = require('../control/app-countdropdown.jsx')
var NameCountDropdown = require('../control/app-namecountdropdown.jsx')
var SortDropdown = require('../control/app-sortdropdown.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Link = require('react-router-component').Link
var PieChart = require('react-simple-pie-chart')
var qs = require('querystring')

var AsyncFilterOffers = React.createClass({displayName: "AsyncFilterOffers",

	mixins: [NavigatableMixin],

	getInitialState: function(){

		var page = 0
		var q = false
		var filter_country = false
		var filter_device = false
		var filter_network = false

		var id = 'o'
		if (this.props.id !== undefined && this.props.id){
			id = this.props.id
		}

		var get = qs.parse(location.search.substr(1,Infinity))

		if (this.props.with_ads_default !== undefined){
			var with_ads = this.props.with_ads_default	
		} else {
			var with_ads = false
		}
		
		if (get[id + '_with_ads'] !== undefined){
			if (get[id + '_with_ads'] == 'true'){
				with_ads = true
			} else if (get[id + '_with_ads'] == 'false'){
				with_ads = false
			}
		}

		if (get['o_page'] !== undefined){
			page = parseInt(get['o_page'])
		}
		if (this.props.q !== undefined && this.props.q){
			q = this.props.q
		}
		if (get['o_filter_country'] !== undefined){
			filter_country = get['o_filter_country']
		}
		if (get['o_filter_device'] !== undefined){
			filter_device = get['o_filter_device']
		}
		if (get['o_filter_network'] !== undefined){
			filter_network = get['o_filter_network']
		}
		var network_visible = true
		if (get['invisible'] !== undefined){
			network_visible = false
		}
		
		var sort_by = false
		var sort_default = false
		if (this.props.sort !== undefined && this.props.sort == true && this.props.sort_default !== undefined){
			sort_by = this.props.sort_default
			sort_default = this.props.sort_default
		}
		if (get['o_sort_by'] !== undefined){
			sort_by = get['o_sort_by']
		}
		return {
			total: 0,
			loading: true,
			loaded: false,			
			query: {
				loading: false, 
				network_visible: network_visible,
				filter_country: filter_country, 
				filter_device: filter_device, 
				filter_network: filter_network,
				with_ads: with_ads,
				sort_default: sort_default,
				sort_by: sort_by,
				page: page, 
				per_page: 20,
				q: q
			}
		}
	},

	filteredResults: function(){
		var filters = [
			'filter_country', 
			'filter_device', 
			'filter_network', 
		]
		for (var i = 0; i < filters.length; i++){
			if (this.state.query[filters[i]]){
				return true
			}
		}
		if (this.state.query.with_ads == true){
			return true
		}
		if (this.state.query.q !== false){
			return true
		}
		return false
	},

	withAdsChange: function(with_ads){
		var state = this.state
		if (with_ads === null){
			with_ads = !state.query.with_ads
		}
		state.query.with_ads = with_ads
		this.getAsyncState(state)
	},

	landerClick: function(url){
		window._modalInternal = true
		this.navigate(url)
	},

	pageClick: function(page){
		var state = this.state
		state.query.page = page
		this.getAsyncState(state)
	},

	componentWillReceiveProps: function(nextProps){
		if (nextProps.q !== undefined && nextProps.q){
			if (nextProps.q !== this.state.query.q){
				var state = this.state
				state.query.q = nextProps.q
				this.getAsyncState(state)
			}
		}
	},

	componentWillMount: function(){
		this.getAsyncState(this.state)	
	},


	
	getAsyncState: function(state){
		var props = $.extend({}, this.props)
		props['async_path'] += '?' + $.param(state.query)
		if (!state.loaded){
			state.loading = true
		} else {
			state.query.loading = true
		}
		this.setState(state);
		getState(props, function(error, newState) {
			if (this.state.loaded == false){
				newState.loading = false
				newState.loaded = true
			} else {
				newState.query = this.state.query
				newState.query.loading = false
				var get = qs.parse(location.search.substr(1,Infinity))
				if (newState.query.page){
					get['o_page'] = newState.query.page
				} else {
					delete get['o_page']
				}
				if (newState.query.q){
					get['q'] = newState.query.q
				} else {
					delete get['q']
				}
				if (newState.query.filter_country){			
					get['o_filter_country'] = newState.query.filter_country
				} else {
					delete get['o_filter_country']
				}
				if (newState.query.filter_device){
					get['o_filter_device'] = newState.query.filter_device
				} else {
					delete get['o_filter_device']
				}
				if (newState.query.filter_network){
					get['o_filter_network'] = newState.query.filter_network
				} else {
					delete get['o_filter_network']
				}
				if (newState.query.sort_by && newState.query.sort_by != newState.query.sort_default){
					get['o_sort_by'] = newState.query.sort_by
				} else {
					delete get['o_sort_by']
				}
				var search = $.param(get)
				if (search != ''){
					this.navigate(location.pathname + '?' + $.param(get), {replace: true})
				} else {
					this.navigate(location.pathname, {replace: true})
				}
			}
			this.setState(newState);
		}.bind(this));
	},

	handleCountryChange: function(country){
		var state = this.state
		if (!country || country == '' || country == 'all'){
			state.query.filter_country = false			
		} else {
			if (country == 'GB'){
				state.query.filter_country = country
			} else {
				state.query.filter_country = country
			}			
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleDeviceChange: function(device){
		var state = this.state
		if (!device){
			state.query.filter_device = false			
		} else {
			state.query.filter_device = device
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleNetworkChange: function(network){
		var state = this.state
		if (!network){
			state.query.filter_network = false			
		} else {
			state.query.filter_network = network
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleSortChange: function(sort_by){
		var state = this.state
		if (!sort_by){
			state.query.sort_by = this.state.query.sort_default			
		} else {
			state.query.sort_by = sort_by
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	render: function() {
		var title = 'Affiliate Offers'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		// possible: ads, device, title, payout-type, payout-amount, network, category, countries, date-added
		var cols = ['title', 'payout-amount', 'payout-type', 'network']
		if (this.props.cols){
			cols = this.props.cols
		}

		if (this.state.loading){
			return (				
                React.createElement("div", {className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, title)
                    ), 
                    React.createElement("div", {className: "panel-body p-b-20 p-t-20"}, 
				        React.createElement(Loading, null)
					)
                )
			)
		}

		var filterCounts = true
		if (this.props.filter_counts !== undefined){
			filterCounts = this.props.filter_counts
		}
		
		var countryFilter = ''
		if (this.props.filter_country !== undefined && this.props.filter_country == true){
			var countryFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by country"), 
            	React.createElement(CountryDropdown, {counts: filterCounts, country_map: this.state.countries, countryChange: this.handleCountryChange, selected: this.state.query.filter_country})
			))
		}
		var devicesFilter = ''
		if (this.props.filter_devices !== undefined && this.props.filter_devices == true){
			var devicesFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by device"), 
            	React.createElement(CountDropdown, {counts: filterCounts, name: 'Device', onChange: this.handleDeviceChange, items: this.state.devices, selected: this.state.query.filter_device})
			))
		}
		var networksFilter = ''
		if (this.props.filter_networks !== undefined && this.props.filter_networks == true){
			var networksFilter = (React.createElement("div", {className: "col-md-3"}, 
				React.createElement("h5", null, "Filter by network"), 
            	React.createElement(NameCountDropdown, {counts: filterCounts, name: 'Affiliate Network', onChange: this.handleNetworkChange, items: this.state.networks, selected: this.state.query.filter_network})
			))
		}

		var sortBy = ''
		if (this.props.sort !== undefined){
			var sort_by = {
				'date_added_asc': 'Date added: old first',
				'date_added_desc': 'Date added: new first',
				'payout_amount_desc': 'Payout: high to low',
				'payout_amount_asc': 'Payout: low to high'
			}
			var sortBy = (
				React.createElement("div", {className: "col-md-3"}, 
					React.createElement("h5", null, "Sort"), 
	            	React.createElement(SortDropdown, {items: sort_by, onChange: this.handleSortChange, selected: this.state.query.sort_by})
				)
			)
		}

		if (this.props.with_ads_switch !== undefined && this.props.with_ads_switch){
			if (this.state.query.with_ads){
				var color = '#10CFBD'
				var onStyle = {
					fontWeight: 'bold',
					color: '#10CFBD',
					cursor: 'pointer',
				}
				var offStyle = {
					color: '#E6E6E6',
					cursor: 'pointer'
				}
			} else {
				var color = '#E6E6E6'
				var onStyle = {
					color: '#E6E6E6',
					cursor: 'pointer'
				}
				var offStyle = {
					fontWeight: 'bold',
					color: '#10CFBD',
					cursor: 'pointer'				
				}
			}
			var withAdsSwitch = (
				React.createElement("div", {className: "col-xs-12 col-md-3 p-t-10"}, 
					React.createElement("div", {style: {display: 'inline-block', paddingRight: '10px'}}, 
						React.createElement("span", {style: {fontSize: '60px', color: color, cursor: 'ponter'}, onClick: this.withAdsChange.bind(this, null), className: "fa fa-image"})
					), 
					React.createElement("div", {style: {display: 'inline-block', verticalAlign: 'top'}}, 
						React.createElement("div", null, 
							"Only offers with ads & landers" 
						), 
						React.createElement("div", null, 
							React.createElement("span", {style: onStyle, onClick: this.withAdsChange.bind(this, true)}, "ON"), " | ", React.createElement("span", {style: offStyle, onClick: this.withAdsChange.bind(this, false)}, "OFF")
						)
					)
				)
			)
		} else {
			withAdsSwitch = React.createElement("div", null)
		}

		var switchRow = (
			React.createElement("div", {className: "m-b-20 row"}, 
				withAdsSwitch
			)
		)

		var filterRow = (
			React.createElement("div", {className: "row"}, 
    			countryFilter, 
    			devicesFilter, 
    			networksFilter, 
    			sortBy
    		)
		)


		if (this.state.query.loading){
			var results = [
				filterRow, switchRow,
				React.createElement("div", {className: "text-center p-b-20 p-t-20"}, 					
			        React.createElement(Loading, null)
				)
			]
		} else {

			var width = 240
			var height = 180

			if (this.props.width !== undefined){
				width = this.props.width
			}

			if (this.props.height !== undefined){
				height = this.props.height
			}
			
			var rows = []
			for (var i = 0; i < this.state.items.length; i++){
				var item = this.state.items[i]

				if (item.countries != null && item.countries.trim() != ''){
					var numCountries = item.countries.split(",").length
					if (numCountries > 5){
						var countries = numCountries + " countries"
					} else {
						var countries = item.countries
					}
				} else {
					var countries = ''
				}

				var favicon = []
				if (item.favicon !== undefined && item.favicon.trim() != ''){
					favicon.push(React.createElement("img", {src: item.favicon}))
				}

				if (item.payout_float){
					var payout_amount = parseFloat(item.payout_float).toFixed(2)
				} else {
					var payout_amount = item.payout_amount
				}

				if (item.payout_type == 'RevShare'){
					var payout_amount = payout_amount.replace('%','') + '%'
				} else {
					var payout_amount = '$' + payout_amount.replace('$','')		
				}

				var rowCls = "offer-row"
				if (this.props.offer_hash !== undefined && item.hash == this.props.offer_hash){
					var rowCls = "offer-row selected"
				}

				var date_added = new Date(item.date_added).toLocaleDateString();

				var device = ''
				switch(item.device){
					case 'iPad':
						device = React.createElement("span", {className: "fa fa-apple"})
						break
					case 'iPhone':
						device = React.createElement("span", {className: "fa fa-apple"})
						break
					case 'iOS':
						device = React.createElement("span", {className: "fa fa-apple"})
						break
					case 'Android':
						device = React.createElement("span", {className: "fa fa-android"})
						break
					case 'Desktop':
						device = React.createElement("span", {className: "fa fa-desktop"})
						break
					case 'Mobile':
						device = React.createElement("span", {className: "fa fa-mobile"})
						break
					default:
						device = React.createElement("span", {className: "fa fa-desktop"})						
				}

				var ads = ''
				// show ads indicator if no advertiser false
				// show ads indicator only for desktop until we have mobile ad data
				if (item.network_no_advertiser == false && item.device.indexOf('Desktop') > -1 && item.meta.ad_count > 0){
					ads = React.createElement("span", {className: "fa fa-image"})
				}

				cells = []
				cols.forEach(function(col){
					switch(col){
						case 'ads':
							cells.push(React.createElement("div", {className: "offer-cell ads"}, ads))
							break
						case 'device':
							cells.push(React.createElement("div", {className: "offer-cell device"}, device))
							break;						
						case 'title':
							cells.push(React.createElement("div", {className: "offer-cell title"}, React.createElement(Link, {href: "/offer/" + item.hash + '/'}, item.offer_title)))
							break;
						case 'payout-type':
							cells.push(React.createElement("div", {className: "offer-cell payout-type"}, 
								React.createElement("span", {className: "hint-text small"}, item.payout_type)
							))
							break;
						case 'payout-amount':
							cells.push(React.createElement("div", {className: "offer-cell payout-amount"}, 
								React.createElement("span", {className: "font-montserrat fs-18"}, payout_amount)
							))
							break;
						case 'network':
							cells.push(React.createElement("div", {className: "offer-cell network"}, 
								React.createElement(Link, {href: "/affiliate-network/" + item.network_hash + "/"}, item.network_name)
							))
							break;
						case 'countries':
							cells.push(React.createElement("div", {className: "offer-cell countries"}, 
								React.createElement("span", {className: "hint-text small"}, countries)
							))
							break;
						case 'category':
							cells.push(React.createElement("div", {className: "offer-cell category"}, 
								React.createElement("span", {className: "hint-text small"}, item.category)
							))
							break;
						case 'date-added':
							cells.push(React.createElement("div", {className: "offer-cell date-added"}, 
								React.createElement("span", {className: "hint-text small"}, date_added)
							))
							break;
					}
				})

				rows.push(React.createElement("div", {className: rowCls, key: i}, 						
							cells
						))		
			}

			if (rows.length > 0){

				titles = []
				cols.forEach(function(col){
					switch(col){
						case 'ads':
							titles.push(React.createElement("div", {className: "offer-cell ads"}))
							break
						case 'device':
							titles.push(React.createElement("div", {className: "offer-cell device"}))
							break
						case 'title':
							titles.push(React.createElement("div", {className: "offer-cell title"}, "Title"))
							break
						case 'payout-type':
							titles.push(React.createElement("div", {className: "offer-cell payout-type"}, "Type"))
							break
						case 'payout-amount':
							titles.push(React.createElement("div", {className: "offer-cell payout-amount"}, "Payout"))
							break
						case 'network':
							titles.push(React.createElement("div", {className: "offer-cell network"}, "Network"))
							break
						case 'countries':
							titles.push(React.createElement("div", {className: "offer-cell countries"}, "Country"))
							break
						case 'category':
							titles.push(React.createElement("div", {className: "offer-cell category"}, "Category"))
							break
						case 'date-added':
							titles.push(React.createElement("div", {className: "offer-cell date-added"}, "Date Added"))
							break
					}
				})
				var table = (
	                React.createElement("div", {className: "offer-table"}, 
	                	
	                		React.createElement("div", {className: "offer-header"}, 			
	                			titles
	                		), 
	                	
	                    	rows
	                    
	                )
		        )

				var results = [filterRow, switchRow,(
					React.createElement("div", null, 
						React.createElement("div", null, 						
							table						
						), 
						React.createElement("div", {className: "pull-left m-t-20"}, 
			            	React.createElement(Pagination, {		
			            		page: this.state.query.page, 
			            		total: this.state.total, 
			            		perPage: this.state.query.per_page, 
			            		pageClick: this.pageClick})
			            )
			        )
			    )]
			} else {
				if (this.filteredResults()){
					var results = [
						filterRow, switchRow, (React.createElement("div", null, "No active offers found."))
					]
				} else {
					var results = [
						(React.createElement("div", null, "No active offers found."))
					]
				}				
			}
		}

		return (
            React.createElement("div", {className: "panel panel-transparent"}, 
                React.createElement("div", {className: "panel-heading"}, 
                    React.createElement("div", {className: "panel-title"}, title)
                ), 
                React.createElement("div", {className: "panel-body"}, 		
			        results, 
                    React.createElement("div", {className: "clearfix"})
				)
            )
		);
	}

});

module.exports = AsyncFilterOffers;

},{"../../utils/getState.js":408,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../ad/app-adbuilder.jsx":272,"../ad/app-adgrid.jsx":276,"../control/app-countdropdown.jsx":316,"../control/app-countrydropdown.jsx":317,"../control/app-namecountdropdown.jsx":318,"../control/app-pagination.jsx":321,"../control/app-sortdropdown.jsx":324,"../xhr/app-loading.jsx":401,"loglevel":9,"querystring":420,"react":235,"react-router-component":22,"react-simple-pie-chart":53}],377:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Link = require('react-router-component').Link
var NetworkFeature = require('../network/app-networkfeature.jsx')
var AdvertiserFeature = require('../advertiser/app-advertiserfeature.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var log = require('loglevel')

var Offer = React.createClass({displayName: "Offer",

	offerClick: function(){
		window.open(this.props.remote.preview_link, "_blank")
	},

	getInitialState: function(props, cb){
		return {}
	},

	render: function() {
		if (this.props.remote.loading){
			return (React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
                )	              	          
			))
		} else {

			var base_path = '/offer/' + this.props['offer_hash'] + '/'

			var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : base_path, name: this.props.remote.offer_title, className: 'active'}
			]

			if (this.props.remote.payout_type == 'RevShare'){
				var payout_amount = this.props.remote.payout_amount.replace('%','') + '%'
			} else {
				var payout_amount = '$' + this.props.remote.payout_amount.replace('$','')		
			}

			var description = this.props.remote.offer_description.split("\n").map(function(line){
				return React.createElement("p", null, line)
			})

			var device = ''
			if (this.props.remote.device !== undefined && this.props.remote.device){
				device  = React.createElement("p", null, "Device: ", this.props.remote.device)
			}

			var inspect = ''
			if (window._user !== undefined && window._user.groups !== undefined && window._user.groups.indexOf('Admin') > -1){
				inspect = React.createElement("div", null, React.createElement(Link, {href: "/admin/network/" + this.props.remote.network_hash + "/offers/" + this.props['offer_hash'] + '/'}, "Inspect"))
			}

			var expired = ''
			if (this.props.remote.status == 'Expired'){
				expired = React.createElement("div", {className: "text-danger"}, "This offer has expired.")
			}
			if (this.props.remote.network_no_advertiser){
				var screenshot = ''
			} else {
				var screenshot = (
					React.createElement("div", {style: {"maxWidth": "640px"}, className: "col-lg-4 col-md-4"}, 
	                    React.createElement("div", {className: "full-height"}, 
	                        React.createElement("div", {className: "panel-body"}, 
	                            React.createElement("img", {"data-src": this.props.remote.screenshot.url, className: "img-responsive fade-in lazyload"})
	                        )
	                    )
	                )
				)
			}
			var inner = (
				React.createElement("div", {className: "inner"}, 
                	React.createElement(Breadcrumb, {links: crumb_links}), 
                    React.createElement("div", {className: "row"}, 
                    	screenshot, 
                        React.createElement("div", {className: "col-lg-8 col-md-8"}, 	                            
                            React.createElement("div", {className: "panel panel-transparent"}, 
                                React.createElement("div", {className: "panel-heading"}, 
                                    React.createElement("div", {className: "panel-title"}, "Offer")
                                ), 
                                React.createElement("div", {className: "panel-body"}, 
                                    React.createElement("h3", null, this.props.remote.offer_title), 
                                    inspect, 
                                    React.createElement("div", {style: { /* maxHeight: '500px', overflow: 'auto', overflowX:'hidden'*/ }}, 
                                    description
                                    ), 
                                    React.createElement("br", null), 
                                    device, 
                                    React.createElement("p", {style: {wordWrap: 'break-word'}}, "Countries: ", this.props.remote.countries), 
                                    React.createElement("p", null, React.createElement("strong", null, "Payout: ", payout_amount)), 
                                    React.createElement("br", null), 
                                    expired, 
                                    React.createElement("div", null, 
                                    	React.createElement("button", {className: "pull-left btn btn-cons btn-primary", onClick: this.offerClick}, 
                                            "Visit Landing Page"
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
	        )

			if (this.props.remote.network_no_advertiser){
				var advertiserDisabled = true
				var advertiserHostType = null
			} else if (this.props.remote.host_hash == null){
				var advertiserDisabled = true
				var advertiserHostType = null
			} else {
				var advertiserHostType = url_host_type(this.props.remote.host_type)
			}
		
			return (
				React.createElement("div", null, 
	                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                    inner
	                ), 

		            React.createElement("div", {className: "container-fluid "}, 
	            		React.createElement(NetworkFeature, {
	            			async_path: "/affiliate-network/:hash/feature", 
	            			hash: this.props.remote.network_hash})
		            ), 

		            React.createElement("div", {className: "container-fluid "}, 
	            		React.createElement(AdvertiserFeature, {
	            			device: this.props.remote.device, 
	            			disabled: advertiserDisabled, 
	            			async_path: "/advertiser/:host_type/:host_hash/feature", 
	            			host_type: advertiserHostType, 
	            			host_hash: this.props.remote.host_hash, 
	            			base_path: base_path})
		            )
		           		          	         
				)

			);
		}
	}

});

module.exports = withAsyncState(Offer);

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserfeature.jsx":297,"../breadcrumb/app-breadcrumb.jsx":311,"../network/app-networkfeature.jsx":370,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],378:[function(require,module,exports){
var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Link = require('react-router-component').Link
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var log = require('loglevel');

var OfferDetail = React.createClass({displayName: "OfferDetail",

	mixins: [NavigatableMixin],

	joinClick: function(){
		if (this.props.remote.referral_url !== undefined && this.props.remote.referral_url != ''){
    		var win = window.open(this.props.remote.referral_url, '_blank')
    		return
    	}
    	if (this.props.remote.website_url !== undefined && this.props.remote.website_url != ''){
    		var win = window.open(this.props.remote.website_url, '_blank')
    		return
    	}
	},

	render: function() {
		log.debug('offerDetail', this.props, this.state)
		if (this.props.remote.loading == true){
			return (
				React.createElement("div", {className: "panel b-all b-grey"}, 
					React.createElement("div", {className: "panel-body p-t-40 p-b-40 text-center"}, 
						React.createElement(Loading, null)
					)
				)
			)
		}
		if (this.props.remote.offer_title !== undefined){
			if (this.props.remote.payout_type == 'RevShare'){
				var payout_amount = this.props.remote.payout_amount.replace('%','') + '%'
			} else {
				var payout_amount = '$' + this.props.remote.payout_amount.replace('$','')		
			}
			var description = this.props.remote.offer_description
			return (
				React.createElement("div", {className: "panel b-all b-grey"}, 
					{/*
					<div className="panel-heading">
						<div className="panel-title">
							{this.props.remote.offer_title}
						</div>					
					</div>*/}, 
					React.createElement("div", {className: "panel-body"}, 
						React.createElement("div", {className: "pull-right"}, 
							React.createElement("h4", {className: "text-success"}, payout_amount)
						), 
						React.createElement("h4", {className: "p-b-15"}, this.props.remote.offer_title), 
						React.createElement("div", {className: "p-b-15"}, 
							React.createElement("div", {className: "font-montserrat all-caps fs-12"}, "Description"), 
							React.createElement("p", {className: "m-t-10"}, description)
						), 
						
						{ /*
						
						*/ }, 
						React.createElement("div", {className: "p-b-15"}, 
							React.createElement("div", {className: "font-montserrat all-caps fs-12"}, "Network"), 	
							React.createElement("h5", null, React.createElement(Link, {href: "/affiliate-network/" + this.props.remote.network_hash + "/"}, this.props.remote.network_name)), 
							React.createElement("p", null, this.props.remote.network_about), 
							React.createElement("button", {className: "btn btn-primary m-r-10", onClick: this.joinClick}, "Join Network"), 
							React.createElement("button", {className: "btn btn-default", onClick: this.navigate.bind(null, "/network/" + this.props.remote.network_hash + "/")}, "View Offers")
						), 
						React.createElement("div", {className: ""}, 
							React.createElement("div", {className: "font-montserrat all-caps fs-12"}, "Lander"), 
							React.createElement("div", {className: "m-t-10", style: {"maxWidth": "312px"}}, 		
								React.createElement("img", {"data-src": this.props.remote.screenshot.url, className: "img-responsive fade-in lazyload"})
							)
						)
					)
				)
			);
		} else {
			return (
				React.createElement("div", {className: "panel b-all b-grey"}, 
					React.createElement("div", {className: "panel-body p-t-40 p-b-40 text-center"}, 
						"Loading..."
					)
				)
			)
		}
		
	}

});

module.exports = withAsyncState(OfferDetail);

},{"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],379:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var OfferInspectorItem = require('./app-offerinspectoritem.jsx')

var OfferInspector = React.createClass({displayName: "OfferInspector",

	mixins: [NavigatableMixin],

	render: function() {

		if (this.props.remote.loading){
			return (
	            React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                React.createElement(Loading, null)
	            )
	       )
		}		
		var rows = []
		var x = 0

		for (var i = 0; i < this.props.remote.items.length; i++){
			
			var offer = this.props.remote.items[i]
			rows.push(React.createElement(OfferInspectorItem, {offer: offer}))
			x++;

		}

		return (
			React.createElement("div", {id: "offer-inspector"}, 
                rows
			)
		)

	}

});

module.exports = mustBeAdmin(withAsyncState(OfferInspector));

},{"../../utils/mustBeAdmin.jsx":410,"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"./app-offerinspectoritem.jsx":380,"country-data":6,"loglevel":9,"query-string":11,"react":235,"react-router-component":22}],380:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var log = require('loglevel');
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var queryString = require("query-string");
var NavigatableMixin = require('react-router-component').NavigatableMixin
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;
var mustBeAdmin = require('../../utils/mustBeAdmin.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')

var OfferInspectorItem = React.createClass({displayName: "OfferInspectorItem",

	mixins: [NavigatableMixin],

	render: function() {

		var offer = this.props.offer

		var trackers = offer.trackers.map(function(tracker){
			var redirect = 'False'
			if (tracker.is_redirect){
				redirect = 'True'
			}
			return (
				React.createElement("div", {className: "m-t-5"}, 
					React.createElement("div", null, React.createElement("b", null, tracker.url)), 

					React.createElement("div", {className: "small"}, 
						React.createElement("span", null, "Request Country: ", tracker.request_country), 
						React.createElement("span", null, "Request Device: ", tracker.request_device), 
						React.createElement("span", null, "Redirect: ", redirect), 
						React.createElement("span", null, "Status: ", tracker.http_status)
					)
				)
			)
		})

		var links = offer.links.map(function(link){
			var redirect = 'False'
			if (link.is_redirect){
				redirect = 'True'
			}
			return (
				React.createElement("div", {className: "m-t-5"}, 
					React.createElement("div", null, React.createElement("b", null, link.url)), 

					React.createElement("div", {className: "small"}, 
						React.createElement("span", null, "Request Country: ", link.request_country), 
						React.createElement("span", null, "Request Device: ", link.request_device), 
						React.createElement("span", null, "Redirect: ", redirect), 
						React.createElement("span", null, "Status: ", link.http_status)
					)
				)
			)
		})

		var props = []
		for ( var prop in offer ){
			if ( offer.hasOwnProperty( prop ) )
			{
				if (prop != 'hash' && 
					prop != 'links' && 
					prop != 'offer_title')
				{
					if (typeof offer[prop] == 'string' || typeof offer[prop] == 'number' || offer[prop] == null){
						props.push(React.createElement("div", null, prop, ": ", offer[prop]))
					}				
				}
			}
		}

		return (
			React.createElement("div", {className: "container-fluid m-b-20"}, 
				React.createElement("div", {className: "bg-white"}, 
					React.createElement("h4", null, React.createElement(Link, {href: "/offer/" + offer.hash + "/"}, offer.offer_title)), 
					props, 
					React.createElement("div", null, 
						React.createElement("h5", null, "Preview crawl"), 
						links
					), 
					React.createElement("div", null, 
						React.createElement("h5", null, "Tracker crawl"), 
						trackers
					)
				)
			)
		)

	}

});

module.exports = mustBeAdmin(OfferInspectorItem);

},{"../../utils/mustBeAdmin.jsx":410,"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"country-data":6,"loglevel":9,"query-string":11,"react":235,"react-router-component":22}],381:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var AsyncIsomorphicMixin = require('../../mixins/async-isomorphic-mixin.js')
var Loading = require('../xhr/app-loading.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var url_host_type = require('../../utils/url-host-type.js')
var validateRelation = require('../../utils/validate-relation.js')
var countries  = require('country-data').countries,
    currencies = require('country-data').currencies,
    regions    = require('country-data').regions,
    languages  = require('country-data').languages;
var OfferDetail = require('./app-offerdetail.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')

var OfferPanel = React.createClass({displayName: "OfferPanel",

	getInitialState: function(props, cb){
		country_list = countries.all.sort(function(a, b){ 
			return a.name.localeCompare(b.name)
		})
		var perPage = 10
		if (this.props.perPage !== undefined){
			perPage = this.props.perPage
		}
		return {
			country_list: country_list,
			filter: { 'search': '', 'country': [], 'category': [], 'payout': []},
			page: 0,
			perPage: perPage,
			order: {by: 'last-updated', direction: 'desc'}
		}
	},

	pageClick: function(page){
		$(window).scrollTop($('#offer-panel').offset().top)
		this.setState({page: page})
	},

	offerClick: function(hash){
		this.props.offerClick(hash)
	},

	handleSearchChange: function(event){
		filter = this.state.filter;
		filter['search'] = event.target.value;
		// reset page to display newly filtered items
		this.setState({filter:filter, page: 0})
	},

	handleClearCountry: function(){
		var filter = this.state.filter
		filter['country'] = []
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handleCountryChange: function(event){
		var country = event.target.value.toLowerCase()
		var filter = this.state.filter
		if (country == '' || country == 'all'){
			filter['country'] = []
		} else {
			if (country == 'gb'){
				filter['country'] = [country, 'UK'.toLowerCase()] // support alternate country code for gb
			} else {
				filter['country'] = [country]
			}
			
		}
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handleCountryClick: function(event){
		var country = event.target.textContent.toLowerCase()
		var filter = this.state.filter
		if (country == '' || country == 'all'){
			filter['country'] = []
		} else {
			// check if category in filter already
			var pos = false
			for (var i = 0; i < filter['country'].length; i++){
				if (country == filter['country'][i]){
					pos = i
					break
				}
			}
			// if so remove
			if (pos !== false){
				filter['country'].splice(i,1)
			} else {
				// if not add
				filter['country'].push(country)
			}
			
		}
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handleCategoryClick: function(event){
		var category = event.target.textContent.toLowerCase()
		var filter = this.state.filter
		if (category == 'all'){
			filter['category'] = []
		} else {
			// check if category in filter already
			var pos = false
			for (var i = 0; i < filter['category'].length; i++){
				if (category == filter['category'][i]){
					pos = i
					break
				}
			}
			// if so remove
			if (pos !== false){
				filter['category'].splice(i,1)
			} else {
				// if not add
				filter['category'].push(category)
			}
		}
		console.log('filter: category', filter['category'])
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	handlePayoutClick: function(event){
		var payoutType = event.target.textContent.toLowerCase()
		var filter = this.state.filter
		if (payoutType == 'all'){
			filter['payout'] = []
		} else {
			// check if payoutType in filter already
			var pos = false
			for (var i = 0; i < filter['payout'].length; i++){
				if (payoutType == filter['payout'][i]){
					pos = i
					break
				}
			}
			// if so remove
			if (pos !== false){
				filter['payout'].splice(i,1)
			} else {
				// if not add
				filter['payout'].push(payoutType)
			}
		}
		console.log('filter: payout', filter['payout'])
		// reset page to display newly filtered items
		this.setState({filter: filter, page: 0})
	},

	countryFilterEnabled: function(country){
		//normalize category name to lower case
		country = country.toLowerCase()
		countryFilter = this.state.filter['country']
		if (countryFilter.length == 0){
			return country == 'all' ? true : false
		}
		if ($(countryFilter).filter([country]).length > 0){
			return true
		} else {
			return false
		}
	},

	categoryFilterEnabled: function(category){
		//normalize category name to lower case
		category = category.toLowerCase()
		categoryFilter = this.state.filter['category']
		if (categoryFilter.length == 0){
			return category == 'all' ? true : false
		}
		if ($(categoryFilter).filter([category]).length > 0){
			return true
		} else {
			return false
		}
	},

	payoutFilterEnabled: function(payoutType){
		//normalize category name to lower case
		payoutType = payoutType.toLowerCase()
		payoutFilter = this.state.filter['payout']
		if (payoutFilter.length == 0){
			return payoutType == 'all' ? true : false
		}
		if ($(payoutFilter).filter([payoutType]).length > 0){
			return true
		} else {
			return false
		}
	},

	render: function() {

		var panelTitle = ''
		if (this.props.title){
			var panelTitle = (
				React.createElement("div", {className: "panel-heading"}, 
                    React.createElement("div", {className: "panel-title"}, this.props.title)
                )
            )
		}

		if (this.props.remote.loading){
			return (
                React.createElement("div", {className: "panel"}, 
                    panelTitle, 
                    React.createElement("div", {className: "panel-body p-t-40 p-b-40"}, 
                    	React.createElement(Loading, null)
                    )
                )
			)
		}

		var table = []
		if (typeof this.props.remote.items != 'undefined' && this.props.remote.items.length > 0){

			var country_options = []
			var x = 0
			if (this.state.country_list !== undefined){
				this.state.country_list.forEach(function(country, i){
					if (country.status != 'assigned'){
						return false
					}
					country_options.push(
						React.createElement("option", {key: x, value: country.alpha2, "data-alternative-spellings": country.alpha2}, 
							country.name
						))
					x++;
				})
			}

			// add shortcut options
			country_options.unshift(React.createElement("option", {key: x+1, value: "all", "data-alternative-spellings": "all"}, "-----------------"))
			country_options.unshift(React.createElement("option", {key: x+2, value: "FR", "data-alternative-spellings": "FR"}, "France"))
			country_options.unshift(React.createElement("option", {key: x+3, value: "ES", "data-alternative-spellings": "ES"}, "Spain"))
			country_options.unshift(React.createElement("option", {key: x+4, value: "DE", "data-alternative-spellings": "DE"}, "Germany"))
			country_options.unshift(React.createElement("option", {key: x+5, value: "NZ", "data-alternative-spellings": "NZ"}, "New Zealand"))
			country_options.unshift(React.createElement("option", {key: x+6, value: "AU", "data-alternative-spellings": "AU"}, "Australia"))
			country_options.unshift(React.createElement("option", {key: x+7, value: "GB", "data-alternative-spellings": "GB"}, "United Kingdom"))
			country_options.unshift(React.createElement("option", {key: x+8, value: "CA", "data-alternative-spellings": "CA"}, "Canada"))
			country_options.unshift(React.createElement("option", {key: x+9, value: "US", "data-alternative-spellings": "US"}, "United States"))
			
			/*
			var x = 0
			var country_labels = this.props.remote.filters.countries.map(function(country, i){
				x = i
				var labelColor = ''
				if (this.countryFilterEnabled(country)){
					var labelColor = 'label-warning'
				}
				return (<span key={x} style={{"cursor": "pointer"}} className={"pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5"} onClick={this.handleCountryClick}>{country}</span>)
			}, this)
			var labelColor = ''
			if (this.countryFilterEnabled('all')){
				var labelColor = 'label-warning'
			}
			country_labels.unshift(<span key={x+1} style={{"cursor": "pointer"}} className={"pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5"} onClick={this.handleCountryClick}>All</span>)
			*/
			var x = 0
			var category_labels = this.props.remote.filters.categories.map(function(category, i){
				x = i
				var labelColor = ''
				if (this.categoryFilterEnabled(category)){
					var labelColor = 'label-info'
				}
				return (React.createElement("span", {key: x, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handleCategoryClick}, category))
			}, this)
			var labelColor = ''
			if (this.categoryFilterEnabled('all')){
				var labelColor = 'label-info'
			}
			category_labels.unshift(React.createElement("span", {key: x+1, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handleCategoryClick}, "All"))
			
			var x = 0
			var payout_type_labels = this.props.remote.filters.payout_types.map(function(payout_type, i){
				x = i
				var labelColor = ''
				if (this.payoutFilterEnabled(payout_type)){
					var labelColor = 'label-success'
				}
				return (React.createElement("span", {key: x, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handlePayoutClick}, payout_type))
			}, this)
			var labelColor = ''
			if (this.payoutFilterEnabled('all')){
				var labelColor = 'label-success'
			}
			payout_type_labels.unshift(React.createElement("span", {key: x+1, style: {"cursor": "pointer"}, className: "pull-left label " + labelColor + " all-caps font-montserrat fs-11 m-r-5 m-b-5", onClick: this.handlePayoutClick}, "All"))

			/*
			this.props.remote.items.sort(function(a, b){
				return new Date(a.date_added) < new Date(b.date_added)
			})
			*/
			var selected = []
			this.props.remote.items.forEach(function(item, i){
				if (this.state.filter['search'].trim() != ''){
					var searchText = this.state.filter['search'].trim().toLowerCase()
					if (item.offer_title.toLowerCase().indexOf(searchText) == -1){
						return false
					}
				}

				if (this.state.filter['country'].length > 0){
					var filter_countries = this.state.filter['country']
					if (item.countries == null){
						return false
					}
					var offer_countries = item.countries.split(',').map(function(country){
						// lower case to make lowercase filters
						return country.trim().toLowerCase()
					})
					if ($(filter_countries).filter(offer_countries).length == 0){
						return false
					}
				}

				if (this.state.filter['category'].length > 0){
					var filter_categories = this.state.filter['category']
					if (item.category == null){
						return false
					}
					var offer_categories = item.category.split(',').map(function(country){
						// lower case to make lowercase filters
						return country.trim().toLowerCase()
					})
					if ($(filter_categories).filter(offer_categories).length == 0){
						return false
					}
				}

				if (this.state.filter['payout'].length > 0){
					var filter_payouts = this.state.filter['payout']
					if (item.payout_type == null){
						return false
					}
					var offer_payouts = item.payout_type.split(',').map(function(payout_type){
						// lower case to make lowercase filters
						return payout_type.trim().toLowerCase()
					})
					if ($(filter_payouts).filter(offer_payouts).length == 0){
						return false
					}
				}

				selected.push(item)
			}.bind(this))

			// possible: title, payout-type, payout-amount, network, category, countries, last-updated
			var cols = ['title', 'payout-amount', 'payout-type', 'network']
			if (this.props.cols){
				cols = this.props.cols
			}




			var rows = []
			x = 0
			var start = this.state.page * this.state.perPage
			for (var i = start; i < start + this.state.perPage; i++){
				if (i >= selected.length){
					break
				}
				var item = selected[i]


				if (item.countries != null && item.countries.trim() != ''){
					var numCountries = item.countries.split(",").length
					if (numCountries > 5){
						var countries = numCountries + " countries"
					} else {
						var countries = item.countries
					}
				} else {
					var countries = ''
				}

				var favicon = []
				if (item.favicon !== undefined && item.favicon.trim() != ''){
					favicon.push(React.createElement("img", {src: item.favicon}))
				}

				if (item.payout_type == 'RevShare'){
					var payout_amount = item.payout_amount.replace('%','') + '%'
				} else {
					var payout_amount = '$' + item.payout_amount.replace('$','')		
				}

				var rowCls = ""
				if (this.props.offer_hash !== undefined && item.hash == this.props.offer_hash){
					var rowCls = "selected"
				}

				var last_updated = new Date(item.date_added).toLocaleDateString();

				cells = []
				cols.forEach(function(col){
					switch(col){
						case 'title':
							cells.push(React.createElement("td", {className: "title fs-14 no-padding"}, React.createElement(Link, {href: "/offer/" + item.hash + '/'}, item.offer_title)))
							break;
						case 'payout-type':
							cells.push(React.createElement("td", {style: {"width": "80px"}, className: "payout-type hidden-xs text-center b-r b-dashed b-grey"}, 
								React.createElement("span", {className: "hint-text small"}, item.payout_type)
							))
							break;
						case 'payout-amount':
							cells.push(React.createElement("td", {className: "payout-amount text-left"}, 
								React.createElement("span", {className: "font-montserrat fs-18"}, payout_amount)
							))
							break;
						case 'network':
							cells.push(React.createElement("td", {className: "network hidden-xs fs-14 b-l b-dashed b-grey small"}, 
								React.createElement(Link, {href: "/affiliate-network/" + item.network_hash + "/"}, item.network_name)
							))
							break;
						case 'countries':
							cells.push(React.createElement("td", {style: {"width": "130px"}, className: "countries text-center b-r b-dashed b-grey"}, 
								React.createElement("span", {className: "hint-text small"}, countries)
							))
							break;
						case 'category':
							cells.push(React.createElement("td", {style: {"width": "130px"}, className: "countries text-center b-r b-dashed b-grey"}, 
								React.createElement("span", {className: "hint-text small"}, item.category)
							))
							break;
						case 'last-updated':
							cells.push(React.createElement("td", {style: {"width": "130px"}, className: "last-updated text-center b-r b-dashed b-grey"}, 
								React.createElement("span", {className: "hint-text small"}, last_updated)
							))
							break;
					}
				})

				rows.push(React.createElement("tr", {style: {cursor: 'pointer'}, className: rowCls, key: x}, 						
							cells
						))
				x += 1
			}
			if (rows.length == 0){
				if (this.props.remote.items.length > 0){
					rows = (React.createElement("tr", null, 
	                		React.createElement("td", {colSpan: cols.length}, 
	                			"No offers match your selection."
	                		)
	                	))
				} else {
					rows = (React.createElement("tr", null, 
	                		React.createElement("td", {colSpan: cols.length}, 
	                			"No active offers found."
	                		)
	                	))
				}				
			} 
			titles = []
			cols.forEach(function(col){
				switch(col){
					case 'title':
						titles.push(React.createElement("td", {style: {"verticalAlign":"middle"}, className: "title no-padding"}, "Title"))
						break
					case 'payout-type':
						titles.push(React.createElement("td", {style: {"width": "70px"}, className: "payout-type hidden-xs text-center"}, "Type"))
						break
					case 'payout-amount':
						titles.push(React.createElement("td", {className: "payout-amount text-left p-l-20"}, "Amount"))
						break
					case 'network':
						titles.push(React.createElement("td", {style: {"width": "150px"}, className: "network hidden-xs p-l-20"}, "Network"))
						break
					case 'countries':
						titles.push(React.createElement("td", {style: {"width": "110px"}, className: "countries text-center"}, "Country"))
						break
					case 'category':
						titles.push(React.createElement("td", {style: {"width": "110px"}, className: "category text-center"}, "Category"))
						break
					case 'last-updated':
						titles.push(React.createElement("td", {style: {"width": "110px"}, className: "last-update text-center"}, "Last Updated"))
						break
				}
			})
			var table = (
                React.createElement("table", {className: "table table-condensed table-hover offer-table"}, 
                	React.createElement("thead", {className: "fs-12 font-montserrat all-caps"}, 
                		React.createElement("tr", null, 			
                			titles
                		)
                	), 
                	React.createElement("tbody", null, 
                    	rows
                    )
                )
	        )

	        var countrySelectValue = ""
			if (this.state.filter['country'].length > 0){
				countrySelectValue = this.state.filter['country'][0].toUpperCase()
			}

			var countryFilter = ''
			if (this.props.country_filter){
				var countryFilter = (
					React.createElement("div", null, 
                    	React.createElement("div", {className: "font-montserrat all-caps hint fs-12"}, "Filter by country"), 
                    	React.createElement("div", {id: "country-selector"}, 
                    		React.createElement("div", {className: "input-group"}, 
								React.createElement("select", {className: "field", value: countrySelectValue, className: "form-control", onChange: this.handleCountryChange}, 
							      	React.createElement("option", {value: ""}, "Select Country"), 
							        country_options
							    ), 
							    React.createElement("span", {className: "input-group-btn"}, 
							    	React.createElement("button", {className: "btn btn-default", onClick: this.handleClearCountry}, "Reset")
								)
							)
						)
                    ))
			}

			var searchFilter = ''
			if (this.props.search_filter){
				var searchFilter = (
					React.createElement("div", null, 
                		React.createElement("h5", null, "Search"), 
                		React.createElement("input", {type: "text", id: "search-advertiserList", className: "form-control input-md", placeholder: "Type search text", onChange: this.handleSearchChange})
                	)
                )
			}

			var payoutFilter = ''
			if (this.props.payout_filter){
				var payoutFilter = (
					React.createElement("div", null, 
                    	React.createElement("div", {className: "font-montserrat all-caps hint fs-12"}, "Payout type"), 
                    	React.createElement("div", null, payout_type_labels), 
                    	React.createElement("div", {className: "clearfix"})
                    )					
				)
			}

			var categoryFilter = ''
			if (this.props.category_filter){
				var categoryFilter = (
					React.createElement("div", null, 
                    	React.createElement("div", {className: "font-montserrat all-caps hint fs-12"}, "Category"), 
                    	React.createElement("div", null, category_labels), 
                    	React.createElement("div", {className: "clearfix"})
                    )				
				)
			}			

			var filterOrientaton = 'top'
			if (this.props.filter_orientation){
				filterOrientaton = this.props.filter_orientation
			}
			if (filterOrientaton == 'top'){				
				return (
	                React.createElement("div", {id: "offer-panel", className: "panel"}, 
	                    panelTitle, 
	                    React.createElement("div", {className: "panel-body"}, 	
                        	React.createElement("div", {className: "row"}, 
	                    		React.createElement("div", {id: "sticky-filters"}, 	
	                    			React.createElement("div", {className: "col-md-12"}, 
	                    				searchFilter		
	                    			), 
	                    			React.createElement("div", {className: "col-md-3"}, 		
		                        		countryFilter
		                        	), 
		                        	React.createElement("div", {className: "col-md-3"}, 
			                        	categoryFilter
			                        ), 
			                        React.createElement("div", {className: "col-md-3"}, 
			                        	payoutFilter			         
			                        )
			                    )
	                    	), 
	                    	React.createElement("div", {className: "row"}, 
	                    		React.createElement("div", {className: "col-xs-12"}, 
	                        	table
	                        	)
	                        ), 
	                        React.createElement("div", {className: "row"}, 
	                        	React.createElement("div", {className: "col-xs-12"}, 
	                        		React.createElement(Pagination, {
	                        			page: this.state.page, 
	                        			perPage: this.state.perPage, 
	                        			pageClick: this.pageClick, 
	                        			total: selected.length})
	                        	)
	                        )
	                    )
	                )
				)
			} else {
				return (
	                React.createElement("div", {id: "offer-panel", className: "panel"}, 
	                    panelTitle, 
	                    React.createElement("div", {className: "panel-body"}, 	
	                    	React.createElement("div", {className: "row"}, 
	                        	React.createElement("div", {className: "col-md-3"}, 		                        	
		                    		React.createElement("div", {id: "sticky-filters"}, 	
		                    			React.createElement("div", {className: "row"}, 	
		                    				React.createElement("div", {className: "col-md-12 m-b-10"}, 		                    			
		                    				searchFilter		                    		
		                    				)
		                    			), 
		                    			React.createElement("div", {className: "row"}, 
		                    				React.createElement("div", {className: "col-md-12 m-b-10"}, 
			                        			countryFilter
			                        		), 
			                        		React.createElement("div", {className: "col-md-12 m-b-10"}, 
				                        		categoryFilter
				                        	), 
				                        	React.createElement("div", {className: "col-md-12 m-b-10"}, 
				                        		payoutFilter			          
				                        	)
										)					                       
				                    )
			                    ), 
			                    React.createElement("div", {className: "col-md-9"}, 
	                        		table, 
	                        		 React.createElement("div", null, 
		                        		React.createElement(Pagination, {
		                        			page: this.state.page, 
		                        			perPage: this.state.perPage, 
		                        			pageClick: this.pageClick, 
		                        			total: selected.length})
		                        	)
	                        	)
	                        )
	                       
	                    )
	                )
				)
			}
		} else {
			return (
                React.createElement("div", {className: "panel"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Offers")
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement("div", {className: "row"}, 
                    		React.createElement("div", {className: "col-md-12"}, 
                        		React.createElement("div", null, "No active offers found.")
                        	)
                        )
                    )
                )
			)
		}
		
	}

});

module.exports = withAsyncState(OfferPanel);

},{"../../mixins/async-isomorphic-mixin.js":402,"../../utils/url-host-type.js":413,"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"./app-offerdetail.jsx":378,"country-data":6,"react":235,"react-async":12,"react-router-component":22}],382:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Loading = require('../xhr/app-loading.jsx')
var Table = require('../table/app-table.jsx')
var Row = require('../table/app-row.jsx')
var Link = require('react-router-component').Link
var validateRelation = require('../../utils/validate-relation.js')

var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')

var AdPublisherPanel = React.createClass({displayName: "AdPublisherPanel",

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Publishers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Publishers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body p-t-10 p-b-10"}, 
	                        "No publishers found for this ad."
	                    )
	                )
				))
		}

		var items = []
		this.props.remote.items.forEach(function(item, i){
			items.push(React.createElement("div", {key: i}, React.createElement("a", {href: "http://" + item.sub_domain, target: "_blank"}, item.sub_domain, " ", React.createElement("span", {className: "fa fa-external-link"}))))
		}, this)

		var panelCls = ""
		if (this.props.panelCls !== undefined){
			panelCls = this.props.panelCls
		}

		return (
			React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Publishers"), 	
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                        items
                    )
                )
			)
		)
		
	}

});

module.exports = withAsyncState(AdPublisherPanel);

},{"../../utils/validate-relation.js":415,"../../utils/withAsyncState.jsx":416,"../table/app-row.jsx":398,"../table/app-table.jsx":399,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],383:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var HostAdGrid = require('../host/app-hostadgrid.jsx')
var MediatorListPanel = require('../mediator/app-mediatorlistpanel.jsx')
var AdvertiserListPanel = require('../advertiser/app-advertiserlistpanel.jsx')

var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')

var log = require('loglevel')

var Publisher = React.createClass({displayName: "Publisher",

	mixins: [NavigatableMixin],

	render: function() {

		// name the props
		var host_type = this.props._[0]
		var host_hash = this.props._[1]


		if (this.props.remote.loading){
			var inner = React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		} else {


			log.debug('app-publisher props', this.props, this.props._[1], this.props._)

			var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : '/' + host_type + '/'+ host_hash + '/', name: this.props.remote.host_name, className: 'active'}
			]

			var inner = (React.createElement("div", {className: "inner"}, 
	                    	React.createElement(Breadcrumb, {links: crumb_links}), 
	                        React.createElement("div", {className: "row"}, 
	                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
	                            
	                                React.createElement("div", {className: "panel panel-transparent"}, 
	                                    React.createElement("div", {className: "panel-heading"}, 
	                                        React.createElement("div", {className: "panel-title"}, "Publisher")
	                                    ), 
	                                    React.createElement("div", {className: "panel-body"}, 
	                                        React.createElement("h3", {key: "title"}, this.props.remote.host_name)

	                                    )
	                                )
	                               
	                            )
	                            
	                        )
	                    ))
		}
		return (
			React.createElement("div", null, 
	            React.createElement("div", {className: "jumbotron"}, 
	                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
	                    inner
	                )
	            ), 
	            
	            React.createElement("div", {className: "panels"}, 
	            	React.createElement("div", {className: "container-fluid "}, 
		            	React.createElement("div", {className: "row"}, 
		            		React.createElement("div", {className: "col-md-6"}, 
			            		React.createElement(MediatorListPanel, {
										panelCls: "bg-white m-b-0", 
						        		async_path: "/publisher/" + host_type + "/" + host_hash + "/mediator/panel", 
						        		base_path: "/publisher/" + host_type + "/" + host_hash + "/"})
						    ), 
						    React.createElement("div", {className: "col-md-6"}, 
			            		React.createElement(AdvertiserListPanel, {
										panelCls: "bg-white m-b-0", 
						        		async_path: "/publisher/" + host_type + "/" + host_hash + "/advertiser/panel", 
						        		base_path: "/publisher/" + host_type + "/" + host_hash + "/"})
						    )
		            	)
	            	), 
	            	React.createElement(HostAdGrid, {
							key: "host-ad-grid", 
							title: name, 
							panelCls: "container-fluid ", 
							host_type: host_type, 
							host_hash: host_hash, 
							async_path: "/publisher/" + host_type + "/" + host_hash + "/ad/panel", 
							base_path: "/publisher/" + host_type + "/" + host_hash + "/"})
				)

			)

		);
	}

});

module.exports = withAsyncState(Publisher);

},{"../../utils/withAsyncState.jsx":416,"../advertiser/app-advertiserlistpanel.jsx":299,"../breadcrumb/app-breadcrumb.jsx":311,"../host/app-hostadgrid.jsx":336,"../mediator/app-mediatorlistpanel.jsx":354,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],384:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var url_host_type = require('../../utils/url-host-type.js')
var Link = require('react-router-component').Link
var LanderPublisherPanel = React.createClass({displayName: "LanderPublisherPanel",

	getInitialState: function(){
		var perPage = 20
		if (this.props.perPage !== undefined){
			perPage = this.props.perPage
		}
		return {page: 0, perPage: perPage}
	},

	pageClick: function(page){
		this.setState({page: page})
	},

	externalClick: function(url){
		window.open(url, "_blank")
	},

	render: function() {

		if (this.props.remote.loading){
			return (React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Publishers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        React.createElement(Loading, null)
	                    )
	                )
				))
		}

		if (this.props.remote.items.length == 0){
			return (React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
	                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
	                    React.createElement("div", {className: "panel-heading"}, 
	                        React.createElement("div", {className: "panel-title"}, "Publishers"), 
	                        React.createElement("div", {className: "clearfix"})
	                    ), 
	                    React.createElement("div", {className: "panel-body"}, 
	                        "No publishers found."
	                    )
	                )
				))
		}

		var total = this.props.remote.items[0].count

		var items = []
		
		var start = this.state.page * this.state.perPage
		for (var i = start; i < start + this.state.perPage; i++){
			if (i >= this.props.remote.items.length){
				break
			}
			var item = this.props.remote.items[i]

			var percent = Math.ceil(item.count / total * 100)

			var publisherLink = React.createElement(Link, {href: "/publisher/" + url_host_type(item.host_type) + '/' + item.host_hash + '/'}, item[url_host_type(item.host_type)])

			items.push(
				React.createElement("tr", {key: i}, 	
					React.createElement("td", {className: "col-xs-3"}, 
						React.createElement("div", {className: "progress no-margin"}, 
							React.createElement("div", {className: "progress-bar progress-bar-success", "data-percentage": percent + '%', style: {width: percent + '%'}})
						)
					), 												
					React.createElement("td", {className: "no-padding col-xs-12"}, 
						publisherLink, " ", React.createElement("span", {style: {cursor: 'pointer'}, className: "fs-10 fa fa-external-link", onClick: this.externalClick.bind(this, "http://" + item.sub_domain)})
					)
						
				)					
			)
		}

		var panelCls = ""
		if (this.props.panelCls !== undefined){
			panelCls = this.props.panelCls
		}

		return (
			React.createElement("div", {id: "publisher_panel", className: this.props.panelCls}, 
                React.createElement("div", {className: "panel panel-transparent m-b-0"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, "Publishers"), 	
                        React.createElement("div", {className: "clearfix"})
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                    	React.createElement("div", {className: "row"}, 
                    		React.createElement("div", {className: "col-xs-12"}, 
                    			React.createElement("table", {className: "col-xs-12"}, 
                    				React.createElement("thead", null, 
                    					React.createElement("tr", null, 
                    						React.createElement("td", null), 
                    						React.createElement("td", null)
                    					)
                    				), 
                    				React.createElement("tbody", null, 
	                        			items
	                        		)
                        		)
                        	)
                        ), 
                        React.createElement("div", {className: "row p-t-20"}, 
                        	React.createElement("div", {className: "col-xs-12"}, 
                        		React.createElement(Pagination, {
                        			page: this.state.page, 
                        			perPage: this.state.perPage, 
                        			pageClick: this.pageClick, 
                        			total: this.props.remote.items.length})	
                        	)
                        )
                    )
                )
			)
		)		
	}
});

module.exports = withAsyncState(LanderPublisherPanel);

},{"../../utils/url-host-type.js":413,"../../utils/withAsyncState.jsx":416,"../control/app-pagination.jsx":321,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],385:[function(require,module,exports){
/**
 * @jsx React.DOM
 */
var React = require('react');
var Router = require('react-router-component');
var Link = Router.Link
var qs = require('querystring')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Typeahead = require('../control/app-typeahead.jsx');
var AsyncFilterOffers = require('../offer/app-asyncfilteroffers.jsx')

var Search = React.createClass({displayName: "Search",

    mixins: [NavigatableMixin],

	render: function() {
        
        var crumb_links = [{url: '/', className: '', name:'Home'}, {url: '/search/', className: 'active', name:'Search'}]

        var base_path = '/search/'

        get = qs.parse(location.search.substr(1,Infinity))
        var q = get['q']

        if (!q){
            return (
                React.createElement("div", {className: "container-fluid"}, 
                    React.createElement("div", {className: "panel panel-transparent"}, 
                        React.createElement("div", {className: "panel-heading"}, 
                            React.createElement("div", {className: "panel-title"}, 
                                "Search"
                            )
                        ), 
                        React.createElement("div", {className: "panel-body"}, 
                            React.createElement(Typeahead, {selectorBlock: true})
                        )
                    )
                )
            );
        } else {

    		return (
    			React.createElement("div", null, 

                    React.createElement("div", {className: "container-fluid"}, 
                        React.createElement("div", {className: "inner"}, 
                                React.createElement(Breadcrumb, {links: crumb_links}), 
                                React.createElement("div", {className: "row"}, 
                                    
                                    React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                                    
                                        React.createElement("div", {className: "panel panel-transparent"}, 
                                            React.createElement("div", {className: "panel-body"}, 
                                                React.createElement("h3", {key: "title"}, "Search results for \"", q, "\"")
                                                
                                            )
                                        )
                                       
                                    )
                                    
                                )
                            )
                    ), 

                    React.createElement("div", {className: "container-fluid"}, 
                        React.createElement(AsyncFilterOffers, {
                            title: "Offers", 
                            q: q, 
                            filter_counts: false, 
                            filter_country: true, 
                            filter_devices: true, 
                            filter_networks: true, 
                            sort: true, 
                            cols: ['device', 'ads', 'title', 'payout-amount',  'payout-type', 'countries',  'category', 'network', 'date-added'], 
                            sort_default: 'date_added_desc', 
                            async_path: base_path + 'results', 
                            base_path: base_path})
                    )
                    
                )

    		);
        }
	}

});

module.exports = Search;

},{"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-typeahead.jsx":325,"../offer/app-asyncfilteroffers.jsx":376,"querystring":420,"react":235,"react-router-component":22}],386:[function(require,module,exports){
var React = require('react');

var NavigatableMixin = require('react-router-component').NavigatableMixin

var SearchInput = React.createClass({displayName: "SearchInput",

	mixins: [NavigatableMixin],

	searchSubmit: function(e){
        try {

            var defaultPath = '/search/offers/'
            var searchPath = defaultPath
            if (window.location.pathname.indexOf('/search/ads/') > -1){
                searchPath = '/search/ads/'
            } else if (window.location.pathname.indexOf('/search/landers/') > -1){
                searchPath = '/search/landers/'
            } else if (window.location.pathname.indexOf('/search/offers/') > -1){
                searchPath = '/search/offers/'
            } else if (window.location.pathname.indexOf('/search/networks/') > -1){
                searchPath = '/search/networks/'
            }
            searchString = this.refs['search-input'].getDOMNode().value
            uri = searchPath + '?q=' + encodeURIComponent(searchString)
            this.navigate(uri, function(err) {
                if (err) {
                    throw err;
                }
            });
            e.preventDefault()
        } catch (err) {
            console.log(err)
            e.preventDefault()
        }
    },

	render: function() {
		return (
			React.createElement("div", {className: "container-fluid "}, 
                React.createElement("div", {className: "panel panel-transperant"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, 
                            "Search"
                        )
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                        React.createElement("p", null, "Search thousands of offers and millions of ads and landers"), 
                        React.createElement("form", {onSubmit: this.searchSubmit}, 
                            React.createElement("div", {className: "input-group"}, 
                                React.createElement("input", {ref: "search-input", className: "form-control", type: "text", placeholder: "Search"}), 
                                React.createElement("span", {className: "input-group-btn"}, 
                                    React.createElement("button", {type: "submit", className: "btn"}, React.createElement("span", {className: "fa fa-search"}))
                                )
                            )
                        )
                    )
                )
            )
		);
	}

});

module.exports = SearchInput;

},{"react":235,"react-router-component":22}],387:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var NavigatableMixin = require('react-router-component').NavigatableMixin

var SearchOverlay = React.createClass({displayName: "SearchOverlay",

	mixins: [NavigatableMixin],

	onSearchSubmit: function(searchString, defaultTab){
		if (defaultTab === undefined){
			uri = '/search/?q=' + encodeURIComponent(searchString)
		} else {
			uri = '/search/?q=' + encodeURIComponent(searchString) + '&default=' + defaultTab
		}
		this.navigate(uri, function(err) {
			if (err) {
				throw err;
			}
		});
		$('[data-pages="search"]').data('pg.search').toggleOverlay();
	},

	getInitialState: function(){
		return {q: ''}
	},

	/* no dynamic inline results for now. using static options to start with
	getInlineResults: function(searchString){
		request({
		    uri: '/search/inline/?q=' + encodeURIComponent(searchString),
		    headers: {
		        "Content-Type": "application/json"
		    },
		    timeout: 0
		}, function (err, resp, body) {
		    response = JSON.parse(body)
		    this.setState(response)
		    var searchResults = $('.search-results');
		    searchResults.fadeIn("fast");
		}.bind(this));
	},
	*/

	onKeyEnter: function(searchString){
		console.log("Live search for: " + searchString);
        var searchField = $('#overlay-search');
        var searchResults = $('.search-results');
        clearTimeout($.data(this, 'timer'));
        searchResults.fadeOut("fast");
        var self = this;
        var wait = setTimeout(function() {
            self.setState({q: searchField.val()})
            searchResults.fadeIn("fast");
            // no dynamic inline results for now
            //self.getInlineResults(searchField.val())
        }, 500);
        $(this).data('timer', wait);
	},

	componentDidMount: function(){
		// Initializes search overlay plugin.
        // Replace onSearchSubmit() and onKeyEnter() with 
        // your logic to perform a search and display results
        console.log('SearchOverlay', 'componentDidMount', $('[data-pages="search"]'))
        this.plugin = $('[data-pages="search"]').search({
            searchField: '#overlay-search',
            closeButton: '.overlay-close',
            suggestions: '#overlay-suggestions',
            brand: '.brand',
            onSearchSubmit: this.onSearchSubmit,
            onKeyEnter: this.onKeyEnter,
        });
	},

	adsClick: function(){
		var searchField = $('#overlay-search');
		this.onSearchSubmit(searchField.val(), 'ads')
	},


	landersClick: function(){
		var searchField = $('#overlay-search');
		this.onSearchSubmit(searchField.val(), 'landers')
	},


	offersClick: function(){
		var searchField = $('#overlay-search');
		this.onSearchSubmit(searchField.val(), 'offers')
	},


	networksClick: function(){
		var searchField = $('#overlay-search');
		this.onSearchSubmit(searchField.val(), 'networks')
	},

	render: function() {

		console.log('render', this.props, this.state)

		resultStyle = {
			//'box-shadow': '0 1px 2px #aaa'
			'cursor': 'pointer'
		}

		var inlineResults = []
		if (this.state.q !== ''){

			inlineResults.push(React.createElement("div", {style: resultStyle, className: "search-inline row p-t-5 p-b-5 m-b-10", onClick: this.adsClick}, 
              React.createElement("div", {className: "col-md-12"}, 
                React.createElement("div", {className: ""}, 
                  /* <!-- BEGIN Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "thumbnail-wrapper d48 circular bg-primary text-white"}, 
                    React.createElement("div", null, React.createElement("i", {className: "fa fa-picture-o large-text "})
                    )
                  ), 
                  /* <!-- END Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "p-l-10 inline p-t-5"}, 
                    React.createElement("h5", {className: "m-b-5"}, "Search for \"", React.createElement("span", {className: "semi-bold result-name"}, this.state.q), "\" ads")
                    
                  )
                )
              )
            ))

			inlineResults.push(React.createElement("div", {style: resultStyle, className: "search-inline row p-t-5 p-b-5 m-b-10", onClick: this.landersClick}, 
              React.createElement("div", {className: "col-md-12"}, 
                React.createElement("div", {className: ""}, 
                  /* <!-- BEGIN Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "thumbnail-wrapper d48 circular bg-complete text-white"}, 
                    React.createElement("div", null, React.createElement("i", {className: "fa fa-copy large-text "})
                    )
                  ), 
                  /* <!-- END Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "p-l-10 inline p-t-5"}, 
                    React.createElement("h5", {className: "m-b-5"}, "Search for \"", React.createElement("span", {className: "semi-bold result-name"}, this.state.q), "\" landers")
                    
                  )
                )
              )
            ))

			inlineResults.push(React.createElement("div", {style: resultStyle, className: "search-inline row p-t-5 p-b-5 m-b-10", onClick: this.offersClick}, 
              React.createElement("div", {className: "col-md-12"}, 
                React.createElement("div", {className: ""}, 
                  /* <!-- BEGIN Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "thumbnail-wrapper d48 circular bg-danger text-white"}, 
                    React.createElement("div", null, React.createElement("i", {className: "fa fa-money large-text "})
                    )
                  ), 
                  /* <!-- END Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "p-l-10 inline p-t-5"}, 
                    React.createElement("h5", {className: "m-b-5"}, "Search for \"", React.createElement("span", {className: "semi-bold result-name"}, this.state.q), "\" offers")
                    
                  )
                )
              )
            ))

			inlineResults.push(React.createElement("div", {style: resultStyle, className: "search-inline row p-t-5 p-b-5 m-b-10", onClick: this.networksClick}, 
              React.createElement("div", {className: "col-md-12"}, 
                React.createElement("div", {className: ""}, 
                  /* <!-- BEGIN Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "thumbnail-wrapper d48 circular bg-warning text-white"}, 
                    React.createElement("div", null, React.createElement("i", {className: "fa fa-group large-text "})
                    )
                  ), 
                  /* <!-- END Search Result Item Thumbnail !--> */
                  React.createElement("div", {className: "p-l-10 inline p-t-5"}, 
                    React.createElement("h5", {className: "m-b-5"}, "Search for \"", React.createElement("span", {className: "semi-bold result-name"}, this.state.q), "\" networks")
                    
                  )
                )
              )
            ))


			/*
            this.state.items.forEach(function(item){
            	inlineResults.push(
            		<div className="row">
		              <div className="col-md-12">
		                <div className="">
		                  <div className="thumbnail-wrapper d48 circular bg-danger text-white inline m-t-10">
		                    <div><i className="fa fa-money large-text "></i>
		                    </div>
		                  </div>
		                  <div className="p-l-10 inline p-t-10">
		                    <h5 className="m-b-5">{item.offer_title}</h5>
		                  </div>
		                </div>
		              </div>
		            </div>
            	)
            }, this)
			*/
			
		}

		return (
		    React.createElement("div", {className: "overlay", style: {"display": "none"}, "data-pages": "search"}, 
		      /* <!-- BEGIN Overlay Content !--> */
		      React.createElement("div", {className: "overlay-content has-results m-t-20"}, 
		        /* <!-- BEGIN Overlay Header !--> */
		        React.createElement("div", {className: "container-fluid"}, 
		          /* <!-- BEGIN Overlay Logo !--> */
		          React.createElement("img", {src: "static/images/mm-on-transparent-bg.png", alt: "logo", "data-src": "static/images/mm-on-transparent-bg.png", "data-src-retina": "static/images/mm-on-transparent-bg.png"}), 
		          /* <!-- END Overlay Logo !--> */
		          /* <!-- BEGIN Overlay Close !--> */
		          React.createElement("a", {href: "#", className: "close-icon-light overlay-close text-black fs-16"}, 
		            React.createElement("i", {className: "pg-close"})
		          )
		          /* <!-- END Overlay Close !--> */
		        ), 
		        /* <!-- END Overlay Header !--> */
		        React.createElement("div", {className: "container-fluid"}, 
		          /* <!-- BEGIN Overlay Controls !--> */
		          React.createElement("input", {id: "overlay-search", className: "no-border overlay-search bg-transparent", placeholder: "Search...", autocomplete: "off", spellcheck: "false"}), 
		          React.createElement("br", null), 
		          React.createElement("div", {style: {"display":"none"}, className: "inline-block"}, 
		            React.createElement("div", {className: "checkbox right"}, 
		              React.createElement("input", {id: "checkboxn", type: "checkbox", value: "1", checked: "checked"}), 
		              React.createElement("label", {for: "checkboxn"}, React.createElement("i", {className: "fa fa-search"}), " Search within page")
		            )
		          ), 
		          React.createElement("div", {className: "inline-block m-l-10"}, 
		            React.createElement("p", {className: "fs-13"}, "Press enter to search")
		          )
		          /* <!-- END Overlay Controls !--> */
		        ), 
		        /* <!-- BEGIN Overlay Search Results, This part is for demo purpose, you can add anything you like !--> */
		        React.createElement("div", {className: "container-fluid"}, 
		          React.createElement("div", {className: "search-results m-t-40"}, 
		          	/* <!-- BEGIN Search Result Item !--> */
		            inlineResults
		            /* <!-- END Search Result Item !--> */
		            
		            
		            
		          )
		        )
		        /* <!-- END Overlay Search Results !--> */
		      )
		      /* <!-- END Overlay Content !--> */
		    )
		)
	}

});

module.exports = SearchOverlay;

},{"react":235,"react-router-component":22}],388:[function(require,module,exports){
/**
 * @jsx React.DOM
 */
var React = require('react');
var Router = require('react-router-component');
var Link = Router.Link
var qs = require('querystring')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var AsyncFilterOffers = require('../offer/app-asyncfilteroffers.jsx')
var getCookie = require('../../utils/get-cookie.js')
var urlHostType = require('../../utils/url-host-type.js')
var Typeahead = require('react-typeahead').Typeahead;


var Search = React.createClass({displayName: "Search",

    mixins: [NavigatableMixin],

    typeaheadTimeout: false,

    getInitialState: function(){
        return {options: [], lookup: {}}
    },

    typeaheadChange: function(){
        this.setState({options: []})
        var prefix = this.refs.typeahead.refs.entry.getDOMNode().value
        if (this.typeaheadTimeout){
            clearTimeout(this.typeaheadTimeout)
        }
        this.typeaheadTimeout = setTimeout(function(){
            $.ajax({
                method: 'POST', 
                url:'/typeahead/',
                data: {
                    prefix: encodeURIComponent(prefix)
                },
                headers: {'Accept':'application/json', 'X-CSRFToken': getCookie('csrftoken')}
            }).done(function(response){
                var options = response.options
                var lookup = response.lookup
                var offerOption = 'Search "' + prefix + '" offers'
                options.unshift(offerOption)
                lookup[offerOption] = {prefix: prefix, keyword: true}
                this.setState({lookup: lookup, options: options})
            }.bind(this)).fail(function(xhr, status){
                this.setState({lookup: {}, options: []})
            })
        }.bind(this), 100)
    },

    onOptionSelected: function(option){
        var result = this.state.lookup[option]
        if (result.keyword !== undefined && result.keyword){
            this.navigate('/search/?q=' + result.prefix)
        }
        console.log(this.state.lookup, result)
        var selectedUrl = '/' + result.type.toLowerCase() + '/' + urlHostType(result.host_type) + '/' + result.hash + '/'
        this.navigate(selectedUrl)
    },

	render: function() {
        
        var crumb_links = [{url: '/', className: '', name:'Home'}, {url: '/search/', className: 'active', name:'Search'}]

        var base_path = '/typeahead/'

        get = qs.parse(location.search.substr(1,Infinity))
        var q = get['q']

        return (
            React.createElement("div", {className: "container-fluid"}, 
                React.createElement("div", {className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, 
                            "Search"
                        )
                    ), 
                    React.createElement("div", {className: "panel-body"}, 
                        React.createElement("div", {className: "mm-header"}, 
                            React.createElement("div", {id: "search-container"}, 
                                React.createElement("form", {action: "/search/", method: "GET"}, 
                                    React.createElement("div", {className: "input-group"}, 
                                        React.createElement(Typeahead, {
                                            customClasses: {input:"form-control"}, 
                                            ref: "typeahead", 
                                            onKeyUp: this.typeaheadChange, 
                                            options: this.state.options, 
                                            onOptionSelected: this.onOptionSelected, 
                                            maxVisible: 6}), 

                                        React.createElement("span", {style: {verticalAlign: 'top'}, className: "input-group-btn"}, 
                                            React.createElement("button", {type: "submit", className: "btn"}, React.createElement("span", {className: "fa fa-search"}))
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        );
        
	}

});

module.exports = Search;

},{"../../utils/get-cookie.js":407,"../../utils/url-host-type.js":413,"../breadcrumb/app-breadcrumb.jsx":311,"../offer/app-asyncfilteroffers.jsx":376,"querystring":420,"react":235,"react-router-component":22,"react-typeahead":55}],389:[function(require,module,exports){
/** @jsx React.DOM */
var React = require('react');
var Link = require('react-router-component').Link
var PubSub = require('pubsub-js')
var UserWidget = require('../account/app-userwidget.jsx')
var SidebarUser = require('./app-sidebaruser.jsx')
var Sidebar = React.createClass({displayName: "Sidebar",

	getInitialState: function(){
		return {cat_open: false}
	},

	catClick: function(){
		this.setState({cat_open: !this.state.cat_open})
	},

	componentDidMount: function(){
		PubSub.subscribe('onNavigation', function(message){
			console.log('Sidebar', 'onNavigation')
			this.setState({})
		}.bind(this))
	},

    render:function(){

    	var categoriesSubmenu = ''
    	var catArrowCls = 'arrow'
    	if (this.state.cat_open){
    		var catArrowCls = 'arrow open'
    		if (window._categories !== undefined && window._categories){
    			var categories = window._categories.map(function(category){
    				return (React.createElement("li", {className: ""}, 
						React.createElement(Link, {href: "/category/" + category.slug + "/"}, category.name)							
					))
    			})
    			var categoriesSubmenu = (
		    		React.createElement("ul", {className: "sub-menu", style: {"display": "block"}}, 
						categories	
					)
				)
    		}
	    				
		}

		var trafficSourceActive = ''
		if (location.pathname.indexOf('/traffic-source/') == 0){
			var trafficSourceActive = 'active'
		}

		var affiliateNetworkActive = ''
		if (location.pathname.indexOf('/affiliate-network/') == 0){
			var affiliateNetworkActive = 'active'
		}

		var affiliateLanderActive = ''
		if (location.pathname.indexOf('/affiliate-lander/') == 0){
			var affiliateLanderActive = 'active'
		}

		var categoryActive = ''
		if (location.pathname.indexOf('/category/') == 0){
			var categoryActive = 'active'
		}
		
		var helpActive = ''
		if (location.pathname.indexOf('/help/') == 0){
			var helpActive = 'active'
		}

		var supportActive = ''
		if (location.pathname.indexOf('/support/') == 0){
			var supportActive = 'active'
		}	

		var homeActive = ''
		if (location.pathname == '/'){
			var homeActive = 'active'
		}

		/*
		 <li className={categoryActive}>
		                    <span className="icon-thumbnail">
		                    	<i className="fa fa-sitemap"></i>
		                    </span>
		               		<a onClick={this.catClick}>
		                        <span className="title">Categories</span>
		                        <span className={catArrowCls}></span>
		                    </a>
		                    {categoriesSubmenu}
		                </li>
		*/



	    return (
		    React.createElement("div", {className: "page-sidebar", "data-pages": "sidebar"}, 
		      React.createElement("div", {id: "appMenu", className: "sidebar-overlay-slide from-top"}), 

		        React.createElement("div", {className: "sidebar-header"}, 	
		        	React.createElement(Link, {href: "/"}, 
		            	React.createElement("img", {src: "static/images/mm_sidebar.png", alt: "Make Massive"})
		            )
		        ), 
		        { /* <div className="sidebar-user">
		        	<UserWidget />     
		        </div> */ }, 
		        React.createElement("div", {className: "sidebar-menu"}, 
		            React.createElement("ul", {className: "menu-items"}, 
		            	React.createElement(SidebarUser, null), 
		            	React.createElement("li", {className: "m-t-10 " + homeActive}, 
		                	React.createElement("span", {className: "icon-thumbnail"}, 
		                    	React.createElement("i", {className: "fa fa-money"})
		                    ), 
		               		React.createElement(Link, {href: "/"}, 
		                        React.createElement("span", {className: "title"}, "Latest Offers")
		                    )
		                ), 
		                React.createElement("li", {className: affiliateLanderActive}, 
		                	React.createElement("span", {className: "icon-thumbnail"}, 
		                    	React.createElement("i", {className: "fa fa-file-code-o"})
		                    ), 
		               		React.createElement(Link, {href: "/affiliate-lander/"}, 
		                        React.createElement("span", {className: "title"}, "Affiliate Landers")
		                    )
		                ), 
		                React.createElement("li", {className: affiliateNetworkActive}, 
		                	React.createElement("span", {className: "icon-thumbnail"}, 
		                    	React.createElement("i", {className: "fa fa-group"})
		                    ), 
		               		React.createElement(Link, {href: "/affiliate-network/"}, 
		                        React.createElement("span", {className: "title"}, "Affiliate Networks")
		                    )
		                ), 
		                React.createElement("li", {className: trafficSourceActive}, 
							React.createElement("span", {className: "icon-thumbnail"}, 
		                    	React.createElement("i", {className: "fa fa-exchange"})
		                    ), 
		               		React.createElement(Link, {href: "/traffic-source/"}, 
		                        React.createElement("span", {className: "title"}, "Traffic Sources")
		                    )
		                ), 
		               
		                React.createElement("li", {className: helpActive}, 
		                    React.createElement("span", {className: "icon-thumbnail"}, 
		                    	React.createElement("i", {className: "fa fa-life-ring"})
		                    ), 
		               		React.createElement(Link, {href: "/help/"}, 
		                        React.createElement("span", {className: "title"}, "Help")
		                    )
		                ), 
		                React.createElement("li", {className: supportActive}, 
		                    React.createElement("span", {className: "icon-thumbnail"}, 
		                    	React.createElement("i", {className: "fa fa-comment-o"})
		                    ), 
		               		React.createElement(Link, {href: "/support/"}, 
		                        React.createElement("span", {className: "title"}, "Support")
		                    )
		                )
		            ), 
		            React.createElement("div", {className: "clearfix"})
		        )
		    )
	    );
	}
});
module.exports = Sidebar;






},{"../account/app-userwidget.jsx":268,"./app-sidebaruser.jsx":390,"pubsub-js":10,"react":235,"react-router-component":22}],390:[function(require,module,exports){
var React = require('react')
var PubSub = require('pubsub-js')
var Link = require('react-router-component').Link
var role = require('../../utils/role.js')
var NavigatableMixin = require('react-router-component').NavigatableMixin

var SidebarUser = React.createClass({displayName: "SidebarUser",

	mixins: [NavigatableMixin],

  loginClick: function(){
      PubSub.publish('login', {})
  },

  signupClick: function(){
      PubSub.publish('signup', {})
  },

  photoClick: function(e){
  	  if (!role.is_logged_in()){
          PubSub.publish('login', {})
  	  } else {
  	  	  this.navigate('/accounts/settings/')
  	  }
  	  e.preventDefault()
  },

  upgradeClick: function(e){
  	  this.navigate('/accounts/subscribe/')
  },

  componentDidMount: function(){
      if (role.is_logged_in() && !role.is_active()){          
          setTimeout(function(){
              PubSub.publish('warning', {message: 'Please check your inbox to confirm your account.', pgn_type: 'pgn-simple', position: 'top-right'})                
          }, 1000)                    
      }
  },

  render: function() {

    if (!role.is_logged_in()){

    	return (
    		React.createElement("li", {className: "sidebar-user"}, 
            	React.createElement("div", {className: "user-left"}, 
            		React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.photoClick}, 
			        	React.createElement("img", {src: "static/images/profile.png", alt: "", className: "user-photo img-circle"})
			        )
            	), 
            	React.createElement("div", {className: "user-right"}, 
            		React.createElement("div", null, 			            
			     
            			React.createElement("a", {className: "user-widget-link", onClick: this.loginClick}, 
		                    React.createElement("h5", {style: {cursor: 'pointer', display: 'inline-block'}}, "Login")
		                ), 

		                React.createElement("a", {className: "m-l-20 user-widget-link", onClick: this.signupClick}, 
		                    React.createElement("h5", {style: {cursor: 'pointer', display: 'inline-block'}}, "Signup")
		                )

		                

            		), 
            		React.createElement("div", null, "Guest")
            	)
           		
            )
        )

      return (
        React.createElement("div", {id: "user-widget"}
            
        ) 
      )
    } else {

    	if (role.is_pro()){
    		var status = React.createElement("div", {style: {lineHeight: '6px'}}, "Pro Account")
    	} else {
    		var status = React.createElement("div", {style: {lineHeight: '6px'}}, "Basic Account ", React.createElement("span", {style: {cursor: 'pointer'}, onClick: this.upgradeClick, className: "m-l-10 label label-success"}, "Upgrade"))
    	}

      	var username = window._user.username;

      	return (
      		React.createElement("li", {className: "sidebar-user"}, 
            	React.createElement("div", {className: "user-left"}, 
            		React.createElement("a", {style: {cursor: 'pointer'}, onClick: this.photoClick}, 
			        	React.createElement("img", {src: "static/images/profile.png", alt: "", className: "user-photo img-circle"})
			        )
            	), 
            	React.createElement("div", {className: "user-right"}, 
            		React.createElement("div", {className: "dropdown"}, 
            		React.createElement("button", {style: {padding: '0px'}, className: "profile-dropdown-toggle", type: "button", "data-toggle": "dropdown", "aria-haspopup": "true", "aria-expanded": "false"}, 
		              React.createElement("h5", {className: "username"}, username), React.createElement("div", {className: "user-options"}, React.createElement("i", {className: "fa fa-caret-down"}))
		            ), 
		            React.createElement("ul", {className: "dropdown-menu profile-dropdown", role: "menu"}, 
		              React.createElement("li", {className: "hidden"}, React.createElement(Link, {href: "/accounts/profile/"}, React.createElement("i", {className: "fa fa-user"}), " Profile")
		              ), 
		              
		              React.createElement("li", null, React.createElement(Link, {style: {color: 'rgb(43, 48, 59);'}, href: "/accounts/settings/"}, React.createElement("i", {className: "fa fa-cog"}), " Settings")
		              ), 
		              React.createElement("li", {className: "bg-master-lighter"}, 
		                React.createElement("a", {style: {color: 'rgb(43, 48, 59);'}, href: "/accounts/logout/", className: "clearfix"}, 
		                  React.createElement("span", {className: "pull-left"}, "Logout"), 
		                  React.createElement("span", {className: "pull-right"}, React.createElement("i", {className: "pg-power"}))
		                )
		              )
		            )
		            ), 
            		status
            	)
           		
            )
		)
		/*
      return (
        <div id="user-widget" className="pull-right">
          <div className="dropdown pull-right">
            <button className="profile-dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <span>
                <span className="p-r-20">{username}</span>
                <i className="fa fa-caret-down"></i>
              </span>
            </button>
            <ul className="dropdown-menu profile-dropdown" role="menu">
              <li className="hidden"><Link href="/accounts/profile/"><i className="fa fa-user"></i> Profile</Link>
              </li>
              
              <li><Link href="/accounts/settings/"><i className="fa fa-cog"></i> Settings</Link>
              </li>
              <li className="bg-master-lighter">
                <a href="/accounts/logout/" className="clearfix">
                  <span className="pull-left">Logout</span>
                  <span className="pull-right"><i className="pg-power"></i></span>
                </a>
              </li>
            </ul>
          </div>
        </div>
      );
*/
    }
  }
})

module.exports = SidebarUser

},{"../../utils/role.js":412,"pubsub-js":10,"react":235,"react-router-component":22}],391:[function(require,module,exports){
var React = require('react');
var AdGrid = require('../ad/app-adgrid.jsx')
var AdBuilder = require('../ad/app-adbuilder.jsx')
var log = require('loglevel');
var UserOverlay = require('../../utils/userOverlay.jsx')
var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Pagination = require('../control/app-pagination.jsx')
var getState = require('../../utils/getState.js')
var CountryDropdown = require('../control/app-countrydropdown.jsx')
var CountDropdown = require('../control/app-countdropdown.jsx')
var NameCountDropdown = require('../control/app-namecountdropdown.jsx')
var SortDropdown = require('../control/app-sortdropdown.jsx')
var NameLinkDropdown = require('../control/app-namelinkdropdown.jsx')
var NavigatableMixin = require('react-router-component').NavigatableMixin
var Link = require('react-router-component').Link
var PieChart = require('react-simple-pie-chart')
var SourceItem = require('./app-sourceitem.jsx')

var AsyncFilterSources = React.createClass({displayName: "AsyncFilterSources",

	mixins: [NavigatableMixin],

	getInitialState: function(){
		var sort_by = false
		var sort_default = false
		if (this.props.sort !== undefined && this.props.sort == true && this.props.sort_default !== undefined){
			sort_by = this.props.sort_default
		}
		if (this.props.sort_default !== undefined){
			sort_default = this.props.sort_default
		}
		return {
			total: 0,
			loading: true,
			loaded: false,
			sort_default: sort_default,
			query: {
				loading: false, 
				filter_country: false, 
				filter_device: false, 
				filter_category: false,
				sort_by: sort_by,
				sort_default: sort_default,
				page: 0, 
				per_page: 30
			}
		}
	},

	landerClick: function(url){
		window._modalInternal = true
		this.navigate(url)
	},

	pageClick: function(page){
		var state = this.state
		state.query.page = page
		this.getAsyncState(state)
	},

	componentWillMount: function(){
		this.getAsyncState(this.state)	
	},
	
	getAsyncState: function(state){
		var props = $.extend({}, this.props)
		props['async_path'] += '?' + $.param(state.query)
		if (!state.loaded){
			state.loading = true
		} else {
			state.query.loading = true
		}
		this.setState(state);
		getState(props, function(error, newState) {
			if (this.state.loaded == false){
				newState.loading = false
				newState.loaded = true
			} else {
				newState.query = this.state.query
				newState.query.loading = false
			}
			this.setState(newState);
		}.bind(this));
	},

	handleCountryChange: function(country){
		var state = this.state
		if (!country || country == '' || country == 'all'){
			state.query.filter_country = false			
		} else {
			if (country == 'GB'){
				state.query.filter_country = country
			} else {
				state.query.filter_country = country
			}			
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleDimensionsChange: function(dimensions){
		var state = this.state
		if (!dimensions){
			state.query.filter_dimensions = false			
		} else {
			state.query.filter_dimensions = dimensions
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleSourceChange: function(platform){
		var state = this.state
		if (!platform){
			state.query.filter_platform = false			
		} else {
			state.query.filter_platform = platform
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	handleSortChange: function(sort_by){
		var state = this.state
		if (!sort_by){
			state.query.sort_by = this.state.sort_default			
		} else {
			state.query.sort_by = sort_by
		}
		// reset page to display newly filtered items
		state.query.page = 0
		this.getAsyncState(state)
	},

	render: function() {
		var title = 'Affiliate Networks'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.state.loading){
			return (				
                React.createElement("div", {className: "panel panel-transparent"}, 
                    React.createElement("div", {className: "panel-heading"}, 
                        React.createElement("div", {className: "panel-title"}, title)
                    ), 
                    React.createElement("div", {className: "panel-body p-b-20 p-t-20"}, 
				        React.createElement(Loading, null)
					)
                )
			)
		}

		var sortBy = ''
		if (this.props.sort !== undefined && this.props.sort == true){
			var sort_by = {
				'impression_desc': 'Impression: highest frequency',
				'impression_asc': 'Impression: lowest frequency',
				'name_asc': 'Name: a-z',
				'name_desc': 'Name: z-a',
			}
			var sortBy = (
				React.createElement("div", {className: "col-md-3"}, 
					React.createElement("h5", null, "Sort"), 
	            	React.createElement(SortDropdown, {items: sort_by, onChange: this.handleSortChange, selected: this.state.query.sort_by})
				)
			)
		}

		var nameSelect = ''
		if (this.state.names !== undefined){
			nameSelect = (React.createElement("div", {className: "col-md-6 col-xs-12"}, 
						React.createElement("div", {className: "m-r-10", style: {display: 'inline-block'}}, 
							React.createElement("h5", null, "Select by name")
						), 
						React.createElement("div", {style: {display: 'inline-block'}}, 
							React.createElement(NameLinkDropdown, {
								name: "Network", 
								value_name: "hash", 
								display_name: "platform_name", 
								items: this.state.names, 
								base_path: "/traffic-source/"})
							)
						))
		}

		var filterRow = (
			React.createElement("div", null, 
				React.createElement("div", {className: "row"}, 
					nameSelect
				), 
				React.createElement("div", {className: "m-b-20 row"}, 
	    			sortBy
	    		)
	    	)
		)


		if (this.state.query.loading){
			var results = [filterRow,(
				React.createElement("div", {className: "text-center p-b-20 p-t-20"}, 
			        React.createElement(Loading, null)
				)
			)]
		} else {

			var width = 240
			var height = 180

			if (this.props.width !== undefined){
				width = this.props.width
			}

			if (this.props.height !== undefined){
				height = this.props.height
			}
			
			var rows = []
			for (var i = 0; i < this.state.items.length; i += 2){
				var item1 = React.createElement(SourceItem, {item: this.state.items[i]})
				var item2 = ''
				if (this.state.items[i + 1] !== undefined){
					item2 = React.createElement(SourceItem, {item: this.state.items[i+1]})
				}
				rows.push(
					React.createElement("div", {className: "row"}, 
						React.createElement("div", {className: "row-height"}, 
							item1, " ", item2
						)
					))
			}

			if (rows.length > 0){
				var results = [filterRow,(
					React.createElement("div", null, 
						rows, 
						React.createElement("div", {className: "pull-left m-t-20"}, 
			            	React.createElement(Pagination, {		
			            		page: this.state.query.page, 
			            		total: this.state.total, 
			            		perPage: this.state.query.per_page, 
			            		pageClick: this.pageClick})
			            )
			        )
			    )]
			} else {
				var results = React.createElement("div", null, "No traffic sources found.")
			}
		}

		return (
            React.createElement("div", {className: "panel panel-transparent"}, 
                React.createElement("div", {className: "panel-heading"}, 
                    React.createElement("div", {className: "panel-title"}, title)
                ), 
                React.createElement("div", {className: "panel-body"}, 		
			        results, 
                    React.createElement("div", {className: "clearfix"})
				)
            )
		);
	}

});

module.exports = AsyncFilterSources;

},{"../../utils/getState.js":408,"../../utils/userOverlay.jsx":414,"../../utils/withAsyncState.jsx":416,"../ad/app-adbuilder.jsx":272,"../ad/app-adgrid.jsx":276,"../control/app-countdropdown.jsx":316,"../control/app-countrydropdown.jsx":317,"../control/app-namecountdropdown.jsx":318,"../control/app-namelinkdropdown.jsx":319,"../control/app-pagination.jsx":321,"../control/app-sortdropdown.jsx":324,"../xhr/app-loading.jsx":401,"./app-sourceitem.jsx":394,"loglevel":9,"react":235,"react-router-component":22,"react-simple-pie-chart":53}],392:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var LanderPanel = require('../lander/app-landerpanel.jsx')
var AsyncFilterGrid = require('../ad/app-asyncfiltergrid.jsx')
var AsyncFilterLanders = require('../lander/app-asyncfilterlanders.jsx')
var PublisherPanel = require('../publisher/app-publisherpanel.jsx')
var AdvertiserListPanel = require('../advertiser/app-advertiserlistpanel.jsx')

var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin

var Loading = require('../xhr/app-loading.jsx')
var withAsyncState = require('../../utils/withAsyncState.jsx')
	
var log = require('loglevel')

var Source = React.createClass({displayName: "Source",

	mixins: [NavigatableMixin],

	render: function() {

		var panels = []
		if (this.props.remote.loading){
			var inner = React.createElement("div", {className: "p-t-40 p-b-40"}, React.createElement(Loading, null))
		} else {

			var base_path = '/traffic-source/' + this.props.remote.hash + '/'
			/*
			if (this.props.remote.slug){
				base_path = '/traffic-source/' + this.props.remote.slug + '/'
			}
			*/
			var crumb_links = [
				{url : '/', name: 'Home', className: ''},
				{url : '/traffc-source/' + this.props.remote.hash + '/', name: this.props.remote.company_name, className: 'active'}
			]		

			var logo = ''
			if (this.props.remote.logo_url){
				logo = React.createElement("img", {className: "m-b-10", style: {maxWidth: '185px'}, src: this.props.remote.logo_url})
			}

			var desc = ''
			if (this.props.remote.company_quote){
				var company_quote = this.props.remote.company_quote
				if (company_quote.charAt(0) === '"' && company_quote.charAt(company_quote.length -1) === '"'){
					desc = React.createElement("p", null, company_quote.substr(1, company_quote.length -2))
				} else {
					desc = React.createElement("p", null, company_quote)
				}
			}

			var visitButton = ''
			if (this.props.remote.website_url){
				visitButton = (React.createElement("div", {className: "m-t-20"}, React.createElement("form", {action: this.props.remote.website_url, target: "_blank"}, React.createElement("button", {className: "btn btn-primary"}, "Visit Website"))))
			}

			var inner = (
				React.createElement("div", {className: "inner"}, 
                	React.createElement(Breadcrumb, {links: crumb_links}), 
                    React.createElement("div", {className: "row"}, 
                        React.createElement("div", {className: "col-lg-5 col-md-8 "}, 
                        
                            React.createElement("div", {className: "panel panel-transparent"}, 
                                React.createElement("div", {className: "panel-heading"}, 
                                    React.createElement("div", {className: "panel-title"}, "Traffic Source")
                                ), 
                                React.createElement("div", {className: "panel-body"}, 	                            
                                    React.createElement("h3", {key: "title"}, this.props.remote.company_name), 
                                    logo, 
                                    desc, 
                                    visitButton
                                )
                            )
                           
                        )
                        
                    )
                ))

			var panels = [
				(React.createElement("div", {className: "container-fluid "}, 
	            	React.createElement(AsyncFilterGrid, {
							title: "Ads", 			
							filter_country: true, 	
							filter_dimensions: true, 		
							filter_platforms: true, 	
							sort: true, 
							sort_default: 'last_seen_desc', 
							async_path: base_path + "ad/panel", 
							base_path: base_path})
				)),
				(React.createElement("div", {className: "container-fluid "}, 
					React.createElement(AsyncFilterLanders, {
							title: "Landers", 			
							filter_country: true, 		
							filter_platforms: true, 	
							sort: true, 
							sort_default: 'last_seen_desc', 
							async_path: base_path + "lander/panel", 
							base_path: base_path})
				))
			]

		}
		return (
			React.createElement("div", null, 
                React.createElement("div", {className: "container-fluid  sm-p-l-20 sm-p-r-20"}, 
                    inner
                ), 	              	          
	            panels
			)

		);
	}

});

module.exports = withAsyncState(Source);

},{"../../utils/withAsyncState.jsx":416,"../ad/app-asyncfiltergrid.jsx":280,"../advertiser/app-advertiserlistpanel.jsx":299,"../breadcrumb/app-breadcrumb.jsx":311,"../lander/app-asyncfilterlanders.jsx":340,"../lander/app-landerpanel.jsx":349,"../publisher/app-publisherpanel.jsx":384,"../xhr/app-loading.jsx":401,"loglevel":9,"react":235,"react-router-component":22}],393:[function(require,module,exports){
var React = require('react');
var withAsyncState = require('../../utils/withAsyncState.jsx')
var Loading = require('../xhr/app-loading.jsx')
var Link = require('react-router-component').Link
var SourceBar = React.createClass({displayName: "SourceBar",

	render: function() {

		var title = 'Traffic Sources'
		if (this.props.title !== undefined){
			title = this.props.title
		}

		if (this.props.remote.loading){
			return (
				React.createElement("div", {className: "container-fluid "}, 
					React.createElement("div", {className: "panel"}, 
						React.createElement("div", {className: "panel-heading"}, 
							React.createElement("div", {className: "panel-title"}, 
								title
							)
						), 
						React.createElement("div", {className: "panel-body text-center m-t-10 m-b-10"}, 
							React.createElement(Loading, null)
						)
					)

				)
			);
		}

		var list = []
		for (var i = 0; i < this.props.remote.items.length; i++){
			var item = this.props.remote.items[i]
			var logo = ''
			if (item.logo_url){
				logo = React.createElement("img", {style: {maxWidth: '185px', maxHeight: '60px'}, src: item.logo_url})
			}
			if (item.slug){
				var link = '/traffic-source/' + item.slug + '/'
			} else {
				var link = '/traffic-source/' + item.hash + '/'
			}
			list.push(
				React.createElement("div", {style: {height: '105px'}, className: "col-md-3 b-grey"}, 
					React.createElement("div", null, React.createElement("h5", null, React.createElement(Link, {href: link}, item.name))), 
					React.createElement(Link, {href: link}, logo)				
				)
			)
			if (i >= 3) break;
		}

		var list_url = '/traffic-source/'
		if (this.props.list_url){
			list_url = this.props.list_url
		}

		return (
			React.createElement("div", {className: "container-fluid "}, 
				React.createElement("div", {className: "panel"}, 
					React.createElement("div", {className: "panel-heading"}, 
						React.createElement("div", {style: {width: '100%'}, className: "panel-title"}, 
							title, 
							React.createElement("div", {className: "pull-right"}, 
								React.createElement(Link, {href: list_url}, "View All")
							)
						)
						
					), 
					React.createElement("div", {className: "panel-body"}, 
						React.createElement("div", {className: "row"}, 
							list
						)
					)
				)

			)
		);
	}

});

module.exports = withAsyncState(SourceBar);

},{"../../utils/withAsyncState.jsx":416,"../xhr/app-loading.jsx":401,"react":235,"react-router-component":22}],394:[function(require,module,exports){
var React = require('react');
var Link = require('react-router-component').Link

var SourceItem = React.createClass({displayName: "SourceItem",

	render: function() {
		var item = this.props.item
		var source_path = "/traffic-source/" + item.hash + "/"	
		/*
		if (item.slug){
			var source_path = "/traffic-source/" + item.slug + "/"
		} else {
			var source_path = "/traffic-source/" + item.hash + "/"				
		}
		*/
		var name = (React.createElement(Link, {href: source_path}, React.createElement("h5", null, item.name)))	

		categories = []
		if (item.categories){
			for (var hash in item.categories) {
			    if (object.hasOwnProperty(hash)) {
			        var catName = item.categories[hash]['name']
					categories.push(React.createElement("span", {className: "label font-montserrat fs-11"}, catName))
			    }
			}
		}

		var desc = ''
		if (item.company_quote){
			var company_quote = item.company_quote
			if (company_quote.charAt(0) === '"' && company_quote.charAt(company_quote.length -1) === '"'){
				company_quote = company_quote.substr(1, company_quote.length -2)
			}
			desc = React.createElement("p", null, company_quote.substr(0,350), "... ", React.createElement(Link, {href: source_path}, "read more"))
		}

		var logo = ''
		if (item.logo_url){
			logo = React.createElement("img", {style: {maxWidth: '185px', maxHeight: '60px'}, src: item.logo_url})
		}
		
		return (
			React.createElement("div", {className: "col-md-6 col-height p-b-30"}, 
				React.createElement("div", {style: {border: '1px solid rgba(230, 230, 230, 0.7)'}, className: "inside-full-height bg-white"}, 
					React.createElement("div", {className: "row p-t-10 p-r-10 p-l-10 p-b-10"}, 
						React.createElement("div", {className: "col-md-9"}, 									
							React.createElement("div", null, name), 
							React.createElement(Link, {href: source_path}, logo), 
							React.createElement("div", null, categories), 
							React.createElement("div", null, desc)
						), 
						React.createElement("div", {style: {minWidth: '150px'}, className: "col-md-3"}, 
							React.createElement(Link, {href: source_path}, 
								React.createElement("div", {className: "btn m-b-10 btn-primary btn-cons"}, 
									"Ads & Landers"
								)
							), 
							React.createElement("a", {href: item.website_url, target: "_blank"}, 
								React.createElement("div", {className: "btn btn-default btn-cons"}, 
									"Visit Website"
								)						
							)
						)								
					)							
				)
			)
		)
	}

});

module.exports = SourceItem;

},{"react":235,"react-router-component":22}],395:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var AsyncFilterSources = require('./app-asyncfiltersources.jsx')

var SourceList = React.createClass({displayName: "SourceList",

	render: function() {

		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/traffic-source/', name: 'Traffic Source', className: 'active'},
		]

        var base_path = '/traffic-source/'

		return (
			React.createElement("div", null, 
               
                React.createElement("div", {className: "container-fluid sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 

                        React.createElement(Breadcrumb, {links: crumb_links}), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-lg-5 col-md-8 "}, 
                                
                                React.createElement("div", {className: "panel panel-transparent"}, 
                                    
                                    React.createElement("div", {className: "panel-body"}, 
                                        React.createElement("h3", null, "Traffic Sources"), 
                                        React.createElement("p", null, "Traffic sources allow advertisers such as affiliates to buy ads on publisher websites.")
                                    )
                                )
                            ), 
                            React.createElement("div", {className: "col-lg-7 col-md-6 "}, 
                                React.createElement("div", {className: "full-height"}, 
                                    React.createElement("div", {className: "panel-body text-center"}
                                        
                                    )
                                )
                            )
                        )
                    )
                ), 


                React.createElement("div", {className: "container-fluid"}, 
                    React.createElement(AsyncFilterSources, {
                        title: "Traffic Sources", 
                        sort: false, 
                        sort_default: 'impression_desc', 
                        async_path: base_path + 'results', 
                        base_path: base_path})
                    /*<div id="networkPanel" className="panel panel-transparent">
                        <div className="panel-heading">
                            <div className="panel-title">AFFILIATE NETWORKS</div>
                            <div className="pull-right">
                                <div className="col-xs-12">
                                    <input type="text" id="search-networkList" className="form-control pull-right" placeholder="Search" />
                                </div>
                            </div>
                            <div className="clearfix"></div>
                        </div>
                        <div className="panel-body">
                            {table}
                        </div>
                    </div> */
                )

            )  
		);
	}

});

module.exports = SourceList;

},{"../breadcrumb/app-breadcrumb.jsx":311,"./app-asyncfiltersources.jsx":391,"react":235}],396:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var InviteSubscribe = React.createClass({displayName: "InviteSubscribe",

	render: function() {
		return (
			React.createElement("div", {className: "container-fluid"}, 
				React.createElement("br", null), React.createElement("br", null), React.createElement("br", null), 
				React.createElement("h3", null, "Get Early Access"), 
				React.createElement("p", null, "We will start sending out early access invites at the end of May"), 
				React.createElement("div", {id: "mc_embed_signup"}, 
                        React.createElement("form", {className: "input-group", action: "//makemassive.us10.list-manage.com/subscribe/post?u=2b765a5d6943530af70d3c346&id=1db369ae72", method: "post", id: "mc-embedded-subscribe-form", name: "mc-embedded-subscribe-form", className: "validate", novalidate: true}, 
                            React.createElement("div", {style: {"maxWidth": "600px"}, id: "mc_embed_signup_scroll"}, 

                                React.createElement("input", {className: "form-control input-lg", type: "email", name: "EMAIL", className: "email", id: "mce-EMAIL", placeholder: "email address", required: true}), 
                                { /*<!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups--> */}, 
                                React.createElement("div", {style: {"position": "absolute", "left": "-5000px"}}, 
                                    React.createElement("input", {type: "text", name: "b_2b765a5d6943530af70d3c346_1db369ae72"})
                                ), 
                                    React.createElement("input", {className: "form-control input-lg btn-primary", type: "submit", value: "Request Invite", name: "subscribe", id: "mc-embedded-subscribe", className: "button"})
                                
                            )
                        )
                    )
			)
		);
	}

});

module.exports = InviteSubscribe;

},{"react":235}],397:[function(require,module,exports){
var React = require('react');
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Button = require('../control/app-button.jsx')
var Messages = require('../form/messages.jsx')
var ReactScriptLoaderMixin = require('../../utils/ReactScriptLoader.js').ReactScriptLoaderMixin;
var role = require('../../utils/role.js')
var post = require('../form/post.js')

var Support = React.createClass({displayName: "Support",

	mixins: [ReactScriptLoaderMixin],

	getScriptURL: function() {
        return 'https://www.google.com/recaptcha/api.js';
    },

    onScriptLoaded: function() {
    	// required for ReactScriptLoaderMixin
    },

    onScriptError: function(){
    	// required for ReactScriptLoaderMixin
    },

	getInitialState: function(){
		return {messages: [], disabled: false, sent: false}
	},

	formSubmit: function(e){
		this.setState({messages: [], disabled: true})
		try {
			data = {
				name: this.refs['name'].getDOMNode().value,
				email: this.refs['email'].getDOMNode().value,
				subject: this.refs['subject'].getDOMNode().value,
				body: this.refs['body'].getDOMNode().value,
				'g-recaptcha-response': $('#g-recaptcha-response').val()
			}
			
	        post('/support/', data, function(response){            
	            if (response.sent !== undefined && response.sent){
	                this.setState({messages: response.messages, sent:true})
	            } else {
	            	if (response.captcha !== undefined && response.captcha){
	            		grecaptcha.reset();
	            	}
	                this.setState({messages: response.messages, disabled: false})
	            }
	        }.bind(this))
	    } catch (e) {
	    	console.log(e)
	    	this.setState({messages: [], disabled: false})
	    }
        e.preventDefault()
	},

	render: function() {
		var crumb_links = [
			{url : '/', name: 'Home', className: ''},
			{url : '/support/', name: 'Support', className: 'active'},
		]

        var base_path = '/support/'

        var name = React.createElement("input", {ref: "name", "aria-required": "true", name: "name", placeholder: "Your name", className: "form-control", required: "", type: "text"})
        if (window._user !== undefined && window._user.first_name){
        	name = React.createElement("input", {defaultValue: window._user.first_name, ref: "name", "aria-required": "true", name: "name", placeholder: "Your name", className: "form-control", required: "", type: "text"})
        }

        var email = React.createElement("input", {ref: "email", "aria-required": "true", name: "email", placeholder: "Your email", className: "form-control", required: "", type: "text"})
	    if (window._user !== undefined && window._user.email){
	        email = React.createElement("input", {value: window._user.email, ref: "email", "aria-required": "true", name: "email", placeholder: "Your email", className: "form-control", required: "", type: "text", disabled: true})
	    }

	    if (!role.is_active()){
		    var captcha = (
		    	React.createElement("div", {className: "row m-t-20"}, 
		        	React.createElement("div", {className: "g-recaptcha", "data-sitekey": "6LfM9AwTAAAAAGOtO_PIAEyae5SOE_FwoKRgCLlW"}), 
		        	React.createElement(Messages, {field: "captcha", messages: this.state.messages})
		        )
		    )
		}

		var form = (
			React.createElement("div", {className: "row"}, 
        		React.createElement("div", {className: "col-xs-12 col-sm-8 col-md-6 m-b-20"}, 
        			React.createElement("form", {ref: "support-form", id: "support-form", onSubmit: this.formSubmit}, 
                    	React.createElement("div", {className: "row"}, 
				            React.createElement("div", {className: "col-sm-12"}, 
				              React.createElement("div", {className: "form-group form-group-default"}, 
				                React.createElement("label", null, "Name"), 
				                name, 
				                React.createElement(Messages, {field: "name", messages: this.state.messages})
				              )
				            )
				        ), 
                    	React.createElement("div", {className: "row"}, 
				            React.createElement("div", {className: "col-sm-12"}, 
				              React.createElement("div", {className: "form-group form-group-default"}, 
				                React.createElement("label", null, "Email"), 
				                email, 
				                React.createElement(Messages, {field: "email", messages: this.state.messages})
				              )
				            )
				        ), 
				        React.createElement("div", {className: "row"}, 
				            React.createElement("div", {className: "col-sm-12"}, 
				              React.createElement("div", {className: "form-group form-group-default"}, 
				                React.createElement("label", null, "Subject"), 
				                React.createElement("input", {ref: "subject", "aria-required": "true", name: "subject", placeholder: "Message subject", className: "form-control", required: "", type: "text"}), 
				                React.createElement(Messages, {field: "subject", messages: this.state.messages})
				              )
				            )
				        ), 
				        React.createElement("div", {className: "row"}, 
				        	React.createElement("textarea", {placeholder: "Your message", ref: "body", className: "form-control full-width", style: {height: '250px'}, name: "body"}), 
				        	React.createElement(Messages, {field: "body", messages: this.state.messages})
				        ), 
				        captcha, 
				        React.createElement("div", {className: "row m-t-10"}, 
				        	React.createElement(Messages, {messages: this.state.messages}), 
				        	React.createElement(Button, {color: "primary", type: "submit", disabled: this.state.disabled}, "Submit")
				        )
                    )
        		), 
        		React.createElement("div", {className: "col-xs-12 col-sm-4 col-md-6"}, 
        			React.createElement("div", {className: "panel"}, 
    					React.createElement("div", {className: "panel-heading"}, 
    						React.createElement("div", {className: "panel-title"}, 
    							"By Email"
    						)
    					), 
    					React.createElement("div", {className: "panel-body"}, 
    						React.createElement("p", null, "If you prefer you can email us at support@makemassive.com")
    					)
    				)
        		)
        	)
        )

		var sent = (
			React.createElement("div", {className: "row"}, 
        		React.createElement("div", {className: "col-xs-16 col-sm-8 col-md-6"}, 
        			React.createElement("div", {className: "m-t-40 text-center"}, 
        				React.createElement("div", {className: "panel"}, 
        					React.createElement("div", {className: "panel-heading"}, 
        						React.createElement("div", {className: "panel-title"}, 
        							"Thank you, message sent."
        						)
        					), 
        					React.createElement("div", {className: "panel-body"}, 
        						React.createElement("p", null, "Your message has been sent to the team and we will respond shortly.")
        					)
        				)
        			)
        		)
        	)
		)

		if (this.state.sent){
			var inner = sent
		} else {
			var inner = form
		}

		return (
			React.createElement("div", null, 
               
                React.createElement("div", {className: "container-fluid sm-p-l-20 sm-p-r-20"}, 
                    React.createElement("div", {className: "inner"}, 

                        React.createElement(Breadcrumb, {links: crumb_links}), 

                        React.createElement("div", {className: "row"}, 
                            React.createElement("div", {className: "col-lg-5 col-md-6 "}, 
                                
                                React.createElement("div", {className: "panel panel-transparent"}, 
                                    
                                    React.createElement("div", {className: "panel-body"}, 
                                        React.createElement("h3", null, "Support"), 
                                        React.createElement("p", null, "Need help with anything? Get in touch with the team.")
                                    )
                                )
                            ), 
                            React.createElement("div", {className: "col-lg-7 col-md-6 "}, 
                                React.createElement("div", {className: "full-height"}, 
                                    React.createElement("div", {className: "panel-body text-center"}

                                    )
                                )
                            )
                        )
                    )
                ), 


                React.createElement("div", {className: "container-fluid"}, 
                	inner
                )

            )  
		);
	}

});

module.exports = Support;

},{"../../utils/ReactScriptLoader.js":405,"../../utils/role.js":412,"../breadcrumb/app-breadcrumb.jsx":311,"../control/app-button.jsx":315,"../form/messages.jsx":328,"../form/post.js":329,"react":235}],398:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Link = require('react-router-component').Link

var Row = React.createClass({displayName: "Row",

	render: function() {
    	return (
    		React.createElement("tr", {href: this.props.href}, this.props.children)
    	);		      
	}

});

module.exports = Row;

},{"react":235,"react-async":12,"react-router-component":22}],399:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Breadcrumb = require('../breadcrumb/app-breadcrumb.jsx')
var Row = require('./app-row.jsx')
var Link = require('react-router-component').Link
var NavigatableMixin = require('react-router-component').NavigatableMixin

var Table = React.createClass({displayName: "Table",

	mixins: [NavigatableMixin],

	filterTextChange: function(){
		if (this.refs.textFilter.getDOMNode().value.trim() != ''){
			this.setState({filter: true, filterText: this.refs.textFilter.getDOMNode().value})
		} else {
			this.setState({filter: false, filterText: this.refs.textFilter.getDOMNode().value})
		}
	},

	filterChildren: function(){
		var children = this.props.children.map(function(child, i){
			if (child.constructor == Row){
				if (this.state.filter == false || child.props.text.toLowerCase().indexOf(this.state.filterText.toLowerCase()) > -1){
					var value = 0
					if (typeof child.props.value != 'undefined'){
						value = child.props.value
					}
					return {value: value, child: child}
				}
			} else {
				return {value: 0, child: child}
			}			
		}.bind(this))
		var sorted_children = children.sort(function(a, b){ return a.value > b.value; })
		children = sorted_children.map(function(item){
			return item['child'];
		})
		return children;
	},

	componentDidMount: function(){

		if (this.props.pageLength != 'undefined'){
			var pageLength = this.props.pageLength
		} else {
			var pageLength = 10
		}

		console.log(this.props.id + 'start DidMount')
		var settings = {
		  "dom": 'rtip',
		  "delete": true,
		  //"pageLength": pageLength
		};
		var table = $('#' + this.props.id)
		table.dataTable(settings); 
		// search box for table
        $('#search-'+this.props.id).keyup(function() {
            table.fnFilter($(this).val());
        });

        //$('#' + this.props.id + '_wrapper a.paginate_button').unbind('click', this.paginateScroll);
	    //$('#' + this.props.id + '_wrapper a.paginate_button').bind('click', this.paginateScroll);

        var self = this;
        table.on( 'click', 'tbody tr', function () {
        	if (typeof $(this).attr('href') != 'undefined'){
        		console.log('navigate to', $(this).attr('href'))
				self.navigate($(this).attr('href'), function(err) {
					if (err) {
						throw err;
					}
				});
        	}
          
		});
		console.log(this.props.id + ' DidMount')
	},

	paginateScroll: function() {
	    $('html, body').animate({
	       scrollTop: $('#' + this.props.id + '_panel').offset().top
	    }, 100);
	    console.log('pagination button clicked'); //remove after test
	    $('#' + this.props.id + '_wrapper a.paginate_button').unbind('click', this.paginateScroll);
	    $('#' + this.props.id + '_wrapper a.paginate_button').bind('click', this.paginateScroll);
	},

	render: function() {

		var header = this.props.header.map(function(title){
			return (React.createElement("th", {style: {"border-bottom":"1px solid rgba(230, 230, 230, 0.7);"}}, title))
		})
		var children = this.filterChildren()
		console.log(this.props.id + ' Table render return')
		return (
            React.createElement("table", {className: this.props.className, id: this.props.id}, 
            	React.createElement("thead", null, 
            		React.createElement("tr", null, 
            			header
            		)
            	), 
                React.createElement("tbody", null, 
                    children
                )
            )
		);
	}

});

module.exports = Table;

},{"../breadcrumb/app-breadcrumb.jsx":311,"./app-row.jsx":398,"react":235,"react-async":12,"react-router-component":22}],400:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');
var ReactAsync = require('react-async')
var Link = require('react-router-component').Link

var Table = require('./app-table.jsx')
var Row = require('./app-row.jsx')

var TableExample = React.createClass({displayName: "TableExample",

	componentDidMount: function(){
		console.log('row will mount')
		this.setState({filter:false, filterText:''})
	},

	render: function() {
		return (
			React.createElement("div", {className: "boxed"}, 
				React.createElement("div", {className: "container-fluid"}, 
					React.createElement(Table, null, 
						React.createElement(Row, {index: "1", key: "1", name: "Hello"}), 
						React.createElement(Row, {index: "2", key: "2", name: "Welcome"}), 
						React.createElement(Row, {index: "3", key: "3", name: "Bonjourno"}), 
						React.createElement(Row, {index: "4", key: "4", name: "Welkommen"})
					)
				)
			))
		      
	}

});

module.exports = TableExample;

},{"./app-row.jsx":398,"./app-table.jsx":399,"react":235,"react-async":12,"react-router-component":22}],401:[function(require,module,exports){
/**
 * @jsx React.DOM
 */

var React = require('react');

var Loading = React.createClass({displayName: "Loading",

	componentWillUnmount: function(){
        // Clear the timeout when the component unmounts
        clearTimeout(this._timeout); 
        clearTimeout(this._delay); 
     },

	getInitialState: function(){
		return {timeout: false, delay: true}
	},

	componentDidMount: function(){
		this._timeout = setTimeout(function(){
			this.setState({timeout: true})
		}.bind(this), 60000)
		this._delay = setTimeout(function(){
			this.setState({delay: false})
		}.bind(this), 1000)
	},

	render: function() {
		if (this.state.timeout){
			return (React.createElement("div", null, 
						React.createElement("p", null, "Oops, this content did not load in a timely manner."), 
						React.createElement("p", null, "Try refresh the page or contact support.")
					))
		}
		if (this.state.delay){
			return React.createElement("div", null)
		}
		return (
			React.createElement("div", {className: "progress-circle-indeterminate progress-circle-master"})
		);
	}

});

module.exports = Loading;

},{"react":235}],402:[function(require,module,exports){
var React                   = require('react');
var invariant               = require('react/lib/invariant');
var log = require('loglevel');
var evaluateUri = require('../utils/evaluate-uri.js')
var getState = require('./get-state.js')

// async-isomorphic is designed to work with ReactAsync

// load local component state by implementing
//getComponentState: function(props, cb)
// cb is a callback that takes the parameters (error,newState)

module.exports = {

	getInitialStateAsync: function(cb){
		log.debug("async-isomorphic-mixin", "getInitialStateAsync", this.props)
		var setState = cb
		getState(this.props, function(err, info) {
			if (err) {
				throw err;
			}
			// load component scope state, before cliet/server data state
			
			if (typeof this.getComponentState == 'function'){
				var componentSetState = setState
				this.getComponentState(this.props, function(err, state){
					componentSetState(err, state)
				})
			}
			setState(err, info);
		}.bind(this));
	},

	componentWillReceiveProps: function(nextProps){
		var currentUri = evaluateUri(this.props.async_path, this.props)
		var nextUri = evaluateUri(nextProps.async_path, nextProps)
		if (currentUri != nextUri){
			console.log("async-isomorphic-mixin", "new props", nextProps);
			getState(nextProps, function(err, state) {
				if (err) {
					throw err;
				}
				// load component scope state, before cliet/server data state
				if (typeof this.getComponentState == 'function'){
					this.getComponentState(this.props, function(err, state){
						if (err) {
							throw err;
						}
						this.setState(state)
					}.bind(this))
				}
				this.setState(state);
			}.bind(this));
		}
	},
	
}

},{"../utils/evaluate-uri.js":406,"./get-state.js":403,"loglevel":9,"react":235,"react/lib/invariant":213}],403:[function(require,module,exports){
var invariant               = require('react/lib/invariant');
var xhr = require('xhr')
var log = require('loglevel');
var evaluateUri = require('../utils/evaluate-uri.js')
var PubSub = require('pubsub-js')

module.exports = function(props, cb){
	invariant(
      typeof props.async_path === 'string',
      'Component must implement a `async_path` property. ' +
      'Otherwise you should not use AsyncIsomorphicMixin or IsomorphicMixin'
    );
    // evalulate path patern with props to get uri
    var uri = evaluateUri(props.async_path, props)
    log.debug("get-state",'uri', uri)
	invariant(
      typeof uri === 'string',
      'Component must implement a `uri` property. ' +
      'Otherwise you should not use AsyncIsomorphicMixin or IsomorphicMixin'
    );
    var make_request = true
    // load from _store global. server side is _store, client side is window._store
	if (typeof _store != 'undefined'){
		if (typeof _store[uri] != 'undefined'){
			make_request = false
			console.log('asyncstate using store', _store[uri])
			cb(null,_store[uri])
			return
		}
	}
	// if client side and no data loaded from store then do xhr call
	if (typeof window != 'undefined' && make_request){
		log.debug("isomorphic-mixin", 'asyncstate using request', uri)
		var xhr = $.ajax(uri, { cache: false, contentType: 'application/json' })
			.done(function(response) {
				cb(null, response)
			})
			.fail(function(xhr, textStatus) {
				if (xhr.status == 0){
					PubSub.publish( 'adBlocked', {} );
				} else if (xhr.status == 404){
					PubSub.publish('404')
				} else if (xhr.status == 500){
					PubSub.publish('error', 'Oops, something went wrong please try refresh the page.')
				}
				console.error('get-state', 'fail', xhr.status)
			})
			.always(function() {
				log.debug("get-state", "complete", uri  );
			});
	}
}

},{"../utils/evaluate-uri.js":406,"loglevel":9,"pubsub-js":10,"react/lib/invariant":213,"xhr":237}],404:[function(require,module,exports){
var React                   = require('react');
var invariant               = require('react/lib/invariant');
var log = require('loglevel');
var getState = require('./get-state.js')
var evaluateUri = require('../utils/evaluate-uri.js')

//isomorphic works without ReactAsync

// load local component state by implementing
//getComponentState: function(props, cb)
// cb is a callback that takes the parameters (error,newState)

module.exports = {

	getInitialState: function(){
		log.debug("sync-isomorphic-mixin", "getInitialState", this.props)
		getState(this.props, function(error, state){
			// load component scope state, before cliet/server data state
			if (typeof this.getComponentState == 'function'){
				this.getComponentState(this.props, function(err, state){
					if (err) {
						throw err;
					}
					this.setState(state)
				}.bind(this))
			}	
			this.setState(state)
		}.bind(this))
		return {}
	},

	componentWillReceiveProps: function(nextProps){
		var currentUri = evaluateUri(this.props.async_path, this.props)
		var nextUri = evaluateUri(nextProps.async_path, nextProps)
		if (currentUri != nextUri){
			console.log("isomorphic-mixin", "new props", nextProps);
			getState(nextProps, function(err, info) {
				if (err) {
					throw err;
				}
				// load component scope state, before cliet/server data state
				if (typeof this.getComponentState == 'function'){
					this.getComponentState(this.props, function(err, state){
						if (err) {
							throw err;
						}
						this.setState(state)
					}.bind(this))
				}
				this.setState(info);
			}.bind(this));
		}
	},
	
}

},{"../utils/evaluate-uri.js":406,"./get-state.js":403,"loglevel":9,"react":235,"react/lib/invariant":213}],405:[function(require,module,exports){

// A dictionary mapping script URLs to a dictionary mapping
// component key to component for all components that are waiting
// for the script to load.
var scriptObservers = {};

// A dictionary mapping script URL to a boolean value indicating if the script
// has already been loaded.
var loadedScripts = {};

// A dictionary mapping script URL to a boolean value indicating if the script
// has failed to load.
var erroredScripts = {};

// A counter used to generate a unique id for each component that uses
// ScriptLoaderMixin.
var idCount = 0;

var ReactScriptLoader = {
	componentDidMount: function(key, component, scriptURL) {
		if (typeof component.onScriptLoaded !== 'function') {
			throw new Error('ScriptLoader: Component class must implement onScriptLoaded()');
		}
		if (typeof component.onScriptError !== 'function') {
			throw new Error('ScriptLoader: Component class must implement onScriptError()');
		}
		if (loadedScripts[scriptURL]) {
			component.onScriptLoaded();
			return;
		}
		if (erroredScripts[scriptURL]) {
			component.onScriptError();
			return;
		}

		// If the script is loading, add the component to the script's observers
		// and return. Otherwise, initialize the script's observers with the component
		// and start loading the script.
		if (scriptObservers[scriptURL]) {
			scriptObservers[scriptURL][key] = component;
			return;
		}

		var observers = {};
		observers[key] = component;
		scriptObservers[scriptURL] = observers;

		var script = document.createElement('script');

		if (typeof component.onScriptTagCreated === 'function') {
			component.onScriptTagCreated(script);
		}

		script.src = scriptURL;

		var callObserverFuncAndRemoveObserver = function(func) {
			var observers = scriptObservers[scriptURL];
			for (var key in observers) {
				observer = observers[key];
				var removeObserver = func(observer);
				if (removeObserver) {
					delete scriptObservers[scriptURL][key];
				}
			}
			//delete scriptObservers[scriptURL];
		}
		script.onload = function() {
			loadedScripts[scriptURL] = true;
			callObserverFuncAndRemoveObserver(function(observer) {
				if (observer.deferOnScriptLoaded && observer.deferOnScriptLoaded()) {
					return false;
				}
				observer.onScriptLoaded();
				return true;
			});
		};
		script.onerror = function(event) {
			erroredScripts[scriptURL] = true;
			callObserverFuncAndRemoveObserver(function(observer) {
				observer.onScriptError();
				return true;
			});
		};
		document.body.appendChild(script);
	},
	componentWillUnmount: function(key, scriptURL) {
		// If the component is waiting for the script to load, remove the
		// component from the script's observers before unmounting the component.
		var observers = scriptObservers[scriptURL];
		if (observers) {
			delete observers[key];
		}
	},
	triggerOnScriptLoaded: function(scriptURL) {
		if (!loadedScripts[scriptURL]) {
			throw new Error('Error: only call this function after the script has in fact loaded.');
		}
		var observers = scriptObservers[scriptURL];
		for (var key in observers) {
			var observer = observers[key];
			observer.onScriptLoaded();
		}
		delete scriptObservers[scriptURL];
	}
};

var ReactScriptLoaderMixin = {
	componentDidMount: function() {
		if (typeof this.getScriptURL !== 'function') {
			throw new Error("ScriptLoaderMixin: Component class must implement getScriptURL().")
		}
		ReactScriptLoader.componentDidMount(this.__getScriptLoaderID(), this, this.getScriptURL());
	},
	componentWillUnmount: function() {
		ReactScriptLoader.componentWillUnmount(this.__getScriptLoaderID(), this.getScriptURL());
	},
	__getScriptLoaderID: function() {
		if (typeof this.__reactScriptLoaderID === 'undefined') {
			this.__reactScriptLoaderID = 'id' + idCount++;
		}

		return this.__reactScriptLoaderID;
	},
};

exports.ReactScriptLoaderMixin = ReactScriptLoaderMixin;
exports.ReactScriptLoader = ReactScriptLoader;


},{}],406:[function(require,module,exports){
// substitues named params (:param) and numbered params (_0) in path_repr
// with props to generate a uri

module.exports = function(path_repr, props){
	
    var the_props = props
    var queryIndex = path_repr.indexOf('?')
    if (queryIndex == -1){
    	queryIndex = path_repr.length
    	var query = ''
    } else {
    	var query = path_repr.substring(queryIndex+1, path_repr.length)
    }
    var path = path_repr.substring(0, queryIndex)
    var pathItems = []
    path.split('/').forEach(function(item){
    	if (item.indexOf(':') == 0){
    		var propName = item.substring(1,item.length)
    		if (propName[0] == "_"){
    			// prop is a unnamed parameter from regex
    			var numberedProp = parseInt(propName.substring(1, propName.length))
    			pathItems.push(the_props["_"][numberedProp])
    		} else {
    			pathItems.push(the_props[propName])
    		}
    		
    	} else {
    		pathItems.push(item)
    	}
    })
    var queryItems = []
    var queryUri = ''
    if (query != ''){
        query.split('&').forEach(function(item){
            var params = item.split('=')
            if (params[1] !== undefined && params[1].indexOf(':') == 0){
                var propName = params[1].substring(1,params[1].length)
                queryItems.push([params[0], the_props[propName]].join('='))
            } else {
                queryItems.push(params.join('='))
            }
        })
        queryUri = queryItems.reduce(function(a,b){ return a + '&' + b })
    }

    if (queryUri != ''){
    	return uri = pathItems.reduce(function(a,b){ return a + '/' + b }) + '?' + queryUri
    } else {
    	return uri = pathItems.reduce(function(a,b){ return a + '/' + b })
    }
    
    
}

},{}],407:[function(require,module,exports){

module.exports = function getCookie(name) {
    var cookieValue = null;
    if (document.cookie && document.cookie != '') {
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            var cookie = jQuery.trim(cookies[i]);
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) == (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}

},{}],408:[function(require,module,exports){
var invariant               = require('react/lib/invariant');
var xhr = require('xhr')
var log = require('loglevel');
var evaluateUri = require('./evaluate-uri.js')
var PubSub = require('pubsub-js')

module.exports = function(props, cb){
	invariant(
      typeof props.async_path === 'string',
      'Component must implement a `async_path` property. ' +
      'Otherwise you should not use withAsyncState'
    );
    // evalulate path patern with props to get uri
    var uri = evaluateUri(props.async_path, props)
    log.debug("get-state",'uri', uri)
    var make_request = true
    // load from _store global. server side is _store, client side is window._store
	if (typeof _store != 'undefined'){
		if (typeof _store[uri] != 'undefined'){
			make_request = false
			console.log('asyncstate using store', _store[uri])
			cb(null,_store[uri])
			return
		}
	}
	// if client side and no data loaded from store then do xhr call
	if (typeof window != 'undefined' && make_request){
		log.debug("isomorphic-mixin", 'asyncstate using request', uri)
		var xhr = $.ajax(uri, { cache: false, contentType: 'application/json' })
			.done(function(response) {
				cb(null, response)
			})
			.fail(function(xhr, textStatus) {
				if (xhr.status == 0 && xhr.readyState == 0){
					PubSub.publish( 'adBlocked', {} );	
				} else if (xhr.status == 500){
					PubSub.publish('error', 'Oops, something went wrong please try refresh the page.')
				}
				try {
					//try parse response
					response = JSON.parse(xhr.responseText)
				} catch (e) {
					response = {}
				}
				cb(xhr.status, response)
				console.error('get-state', 'fail', xhr.status, xhr.readyState)
			})
			.always(function() {
				log.debug("get-state", "complete", uri  );
			});
	}
}

},{"./evaluate-uri.js":406,"loglevel":9,"pubsub-js":10,"react/lib/invariant":213,"xhr":237}],409:[function(require,module,exports){
var PubSub = require('pubsub-js')
var getCookie = require('./get-cookie.js')

module.exports = function(url, method, data, cb){
	// add csrftoken to request
	if (data == undefined){
		var data = {}
	}
	if (method == 'POST'){
		data['csrfmiddlewaretoken'] = getCookie('csrftoken')
	}
	var xhr = $.ajax(url, {
			data: data, 
			type: method, 
			cache: false,
			headers: {'Accept':'application/json', 'X-CSRFToken': getCookie('csrftoken')}
	}).done(function(responseText){
		try {
			response = responseText
			if (response.error){
				if (response.messages !== undefined){
					response.messages.forEach(function(item){
						PubSub.publish(item.state, item.message)
					})
				} else {
					PubSub.publish('error', 'Oops something went wrong, please notify the support team.')					
				}				
			} else {
				if (response.messages != undefined){
					response.messages.forEach(function(item){
						PubSub.publish(item.state, item.message)
					})
				}						
			}
			cb(response)
		} catch (e) {
			console.log(e)
			PubSub.publish('error', 'Oops invalid response from the server, please notify the support team.')
			cb({error: true, messages:[]})
		}		
	}.bind(this)).fail(function(xhr, error){
		//TODO: show notification
		PubSub.publish('error', 'Oops request failed, please check your connection and try again.')
		cb({error: true, messages:[]})
	}.bind(this));
}





},{"./get-cookie.js":407,"pubsub-js":10}],410:[function(require,module,exports){
var React = require('react');
var ForbiddenPage = require('../components/app-forbiddenpage.jsx');
var role = require('./role.js')
function mustBeAdmin(Component){

	var AdminGateway = React.createClass({displayName: "AdminGateway",

		render: function() {
			
			if (role.is_admin()){
				return (
					React.createElement(Component, React.__spread({},  this.props))
				);
			} else {
				return (
					React.createElement(ForbiddenPage, null)
				)
			}

		}

	});

	return AdminGateway
}

module.exports = mustBeAdmin;

},{"../components/app-forbiddenpage.jsx":304,"./role.js":412,"react":235}],411:[function(require,module,exports){
var React = require('react');
var LoginRequired = require('../components/app-loginrequired.jsx');
var role = require('./role.js')
function mustBeUser(Component){

	var UserGateway = React.createClass({displayName: "UserGateway",

		render: function() {
			
			if (role.is_logged_in()){
				return (
					React.createElement(Component, React.__spread({},  this.props))
				);
			} else {
				return (
					React.createElement(LoginRequired, null)
				)
			}

		}

	});

	return UserGateway
}

module.exports = mustBeUser;

},{"../components/app-loginrequired.jsx":306,"./role.js":412,"react":235}],412:[function(require,module,exports){
module.exports = {

	// is logged in user and is not subscribed/pro
	is_basic: function(){
		if (window._user !== undefined && window._user !== false && window._user.pro == false){
			return true
		} else {
			return false
		}
	},

	// is logged in user and is subscribed/pro
	is_pro: function(){
		if (window._user !== undefined && window._user !== false && window._user.pro == true){
			return true
		} else {
			return false
		}
	},

	// is logged in user and is in admin group
	is_admin: function(){
		if (window._user !== undefined && window._user !== false && window._user.groups !== undefined && window._user.groups.indexOf('Admin') > -1){
			return true
		} else {
			return false
		}
	},

	//is logged in
	is_logged_in: function(){
		if (window._user !== undefined && window._user !== false){
			return true
		} else {
			return false
		}
	},

	//has confirmed email address
	is_active: function(){
		if (window._user !== undefined && window._user !== false && window._user.is_active){
			return true
		} else {
			return false
		}
	},

	//is not logged in
	is_guest: function(){
		if (window._user === undefined || window._user === false){
			return true
		} else {
			return false
		}
	}

}

},{}],413:[function(require,module,exports){
//ensure relation only belongs to the set of  'ad' and 'domain'
module.exports = function(host_type){
	parts = host_type.match(/[A-Z]*[^A-Z]+/g) 
	parts = parts.map(function(part){
		return part.toLowerCase()
	})
	return parts.join('_')
}

},{}],414:[function(require,module,exports){
var React = require('react');
var PubSub = require('pubsub-js')
var role = require('./role.js')

var UserOverlay = React.createClass({displayName: "UserOverlay",

	signupClick: function(){
		PubSub.publish('signup', {})
	},

	loginClick: function(){
		PubSub.publish('login', {})
	},

	getInitialState: function(){
		return {width: false, height: false, top: false, left: false}
	},

	componentDidMount: function(){
		if (role.is_guest()){
			this._interval = setInterval(function(){
				if (this.state.height !== this.refs["component"].getDOMNode().offsetHeight 
					|| this.state.width !== this.refs["component"].getDOMNode().offsetWidth
					|| this.state.top !== this.refs["component"].getDOMNode().offsetTop
					|| this.state.left !== this.refs["component"].getDOMNode().offsetLeft){						
					this.setState({
						width: this.refs["component"].getDOMNode().offsetWidth + 16, 
						height: this.refs["component"].getDOMNode().offsetHeight + 12,
						top: this.refs["component"].getDOMNode().offsetTop - 6,
						left: this.refs["component"].getDOMNode().offsetLeft - 6
					})
				}
			}.bind(this), 200)
		}
	},

	componentWillUnmount: function(){
		clearInterval(this._interval)
	},

	render: function() {
		if (role.is_guest() && this.state.width){
			return (
				React.createElement("div", {id: "overlay-container", className: "relative"}, 
					React.createElement("div", {style: {top: this.state.top + 'px', left: this.state.left + 'px', height: this.state.height + 'px', width: this.state.width + 'px'}, className: "user-overlay"}, 
						React.createElement("div", {className: "overlay-content"}, 
							React.createElement("h3", null, "Create account to view this content"), 
							React.createElement("p", null, "A ", React.createElement("strong", null, "free"), " account is required to view this content"), 
							React.createElement("div", {className: "m-t-40"}, 
								React.createElement("button", {className: "btn btn-primary btn-cons", onClick: this.signupClick}, "Sign up"), " ", React.createElement("button", {className: "btn btn-default btn-cons", onClick: this.loginClick}, "Login")
							)
						)
					), 
					React.createElement("div", {ref: "component", className: "blur-2 clearfix"}, 
						this.props.children
					)
				)
			)
		} else {
			return	React.createElement("div", {ref: "component"}, this.props.children)
		}
		

	}

});

module.exports = UserOverlay

},{"./role.js":412,"pubsub-js":10,"react":235}],415:[function(require,module,exports){
//ensure relation only belongs to the set of  'ad' and 'domain'
module.exports = function(relation){
	try {
		switch(relation){
			case 'ad':
				return 'ad'
			case 'domain':
				return 'domain'
			case 'sub_domain':
				return 'sub_domain'
			case 'url_file':
				return 'url_file'
			case 'url_dir':
				return 'url_dir'
			case 'query':
				return 'query'
			default:
				throw "Invalid relation property " + relation
		}
	} catch (e) {
		console.log('Exception', e)
		
	}
}

},{}],416:[function(require,module,exports){
var React = require('react');
var evaluateUri = require('./evaluate-uri.js')
var getState = require('./getState.js')
var log = require('loglevel');
var NotFoundPage = require('../components/app-notfoundpage.jsx')
var PubSub = require('pubsub-js')
var Link = require('react-router-component').Link
// for the first naieve version of makemassive i decided to use a request per component system
// flux was not fully baked at the time and having each componenet request its own state reduced initial complexity

// to do this i fist used React-Async which has the benefit of integrating with react-router-component
// however the integration had scoping issues in getInitialStateAsync

// a few interations later and i am attempting a rewrite using composition instead of mixins since mixins
// are causing issue with access to lifecycle methods and creating additional complexity with scope
// based on https://medium.com/@dan_abramov/mixins-are-dead-long-live-higher-order-components-94a0d2f9e750

// a few months have passed since i wrote withAsyncState and it has become the standard way for components ajax
// now adding some improved error handling and massaging for auth required


function withAsyncState(Component){
	
	var AsyncState = React.createClass({displayName: "AsyncState",

		loginClick: function(){
	      	PubSub.publish('login', {})
	  	},

	  	signupClick: function(){
	      	PubSub.publish('signup', {})
	  	},

		getInitialState: function(){
			return {loading: true}
		},

		componentDidMount: function(){
			log.debug("AsyncState", "componentDidMount", this.props)
			if (this.props.disabled !== undefined && this.props.disabled){
				// async disabled
			} else {
				getState(this.props, function(error, state){
					state.loading = false
					state['error'] = error
					if (error){
						this.setState(state)
					} else {	
						this.setState(state);
					}
				}.bind(this))
			}			
		},

		componentWillReceiveProps: function(nextProps){
			if (this.props.disabled !== undefined && this.props.disabled){
				// async disabled
			} else {
				var currentUri = evaluateUri(this.props.async_path, this.props)
				var nextUri = evaluateUri(nextProps.async_path, nextProps)
				if (currentUri != nextUri){
					log.debug("AsyncState", "new props", nextProps);
					this.setState({loading: true});
					getState(nextProps, function(error, state) {
						state.loading = false
						state['error'] = error
						if (error){
							this.setState(state)
						} else {	
							this.setState(state);
						}
					}.bind(this));
				}
			}
		},
	
		render: function() {
			if (this.state.error){
				if (this.state.error == 404){
					return React.createElement(NotFoundPage, null)
				} else if (this.state.error == 403){
					if (this.state.required !== undefined && this.state.required == 'User'){
						return React.createElement("div", {className: "alert alert-danger"}, "Please ", React.createElement("a", {onClick: this.loginClick}, "login"), " or ", React.createElement("a", {onClick: this.signupClick}, "sign up"), " to view this content.")
					} else if (this.state.required !== undefined && this.state.required == 'Pro'){
						return React.createElement("div", {className: "alert alert-danger"}, "Pro account required to view this content. ", React.createElement(Link, {href: "/accounts/subscribe/"}, "Subscribe"), " to become a Make Massive Pro.")
					} else if (this.state.required !== undefined && this.state.required == 'Admin'){
						return React.createElement("div", {className: "alert alert-danger"}, "You must be an Admin to view this content. Please contact support for assistance.")
					}
					return React.createElement("div", {className: "alert alert-danger"}, "Access denied. Please contact support for assistance.")
				} else {
					return React.createElement("div", {className: "alert alert-warning"}, "An error has occured. Please contact support for assistance.")
				}
			}
			return (
				React.createElement(Component, React.__spread({},  this.props, {remote: this.state}))
			);
		}
	
	});
	
	return AsyncState

}

module.exports = withAsyncState

},{"../components/app-notfoundpage.jsx":307,"./evaluate-uri.js":406,"./getState.js":408,"loglevel":9,"pubsub-js":10,"react":235,"react-router-component":22}],417:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canMutationObserver = typeof window !== 'undefined'
    && window.MutationObserver;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    var queue = [];

    if (canMutationObserver) {
        var hiddenDiv = document.createElement("div");
        var observer = new MutationObserver(function () {
            var queueList = queue.slice();
            queue.length = 0;
            queueList.forEach(function (fn) {
                fn();
            });
        });

        observer.observe(hiddenDiv, { attributes: true });

        return function nextTick(fn) {
            if (!queue.length) {
                hiddenDiv.setAttribute('yes', 'no');
            }
            queue.push(fn);
        };
    }

    if (canPost) {
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],418:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],419:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],420:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":418,"./encode":419}]},{},[1]);
